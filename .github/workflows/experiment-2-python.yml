name: Experiment 2 - Python

on:
  workflow_call:
    inputs:
      operating-system:
        description: Operating system to run the workflow on
        required: true
        type: string

      sast-codeql-enabled:
        description: Enable CodeQL scan (SAST)
        type: boolean
        required: false
        default: true

      sast-horusec-enabled:
        description: Enable Horusec scan (SAST)
        type: boolean
        required: false
        default: true

      sast-semgrep-enabled:
        description: Enable Semgrep scan (SAST)
        type: boolean
        required: false
        default: true

      sast-sonarqube-enabled:
        description: Enable SonarQube scan (SAST)
        type: boolean
        required: false
        default: true

      sast-snyk-code-enabled:
        description: Enable Snyk Code scan (SAST)
        type: boolean
        required: false
        default: true

      sca-eclipse-steady-enabled:
        description: Enable Eclipse Steady scan (SCA)
        type: boolean
        required: false
        default: true

      sca-snyk-enabled:
        description: Enable Snyk scan (SCA)
        type: boolean
        required: false
        default: true

      sca-owasp-dependency-check-enabled:
        description: Enable OWASP Dependency Check scan (SCA)
        type: boolean
        required: false
        default: true

      sca-grype-enabled:
        description: Enable Grype scan (SCA)
        type: boolean
        required: false
        default: true

      project-name:
        description: Name of project to be scanned
        type: string
        required: false

      project-build-artifact:
        description: Name of build artifact
        type: string
        required: false

      project-build-directory:
        description: Name of project build directory
        type: string
        required: false

      coverage-report-name:
        description: Name of coverage report
        type: string
        required: false

      horusec-files-or-paths-to-ignore:
        description: Paths to ignore during the Horusec scan
        type: string
        required: false
        default: "**/test/**"

      eclipse-steady-workspace-token:
        description: Token used to identify project workspace
        type: string
        required: false

      eclipse-steady-application-group-id:
        description: Group ID of the application
        type: string
        required: false

      eclipse-steady-application-artifact-id:
        description: Artifact ID of the application
        type: string
        required: false

      eclipse-steady-application-version:
        description: Version of the application
        type: string
        required: false

      eclipse-steady-project-source-directories:
        description: Project source directories to scan (separated by comma)
        type: string
        required: false

env:
  CHECKOUT_CURRENT_REPO_NAME: seansmith39/H6060-Experiment-Resources
  CHECKOUT_CURRENT_REPO_PATH: experiment-resources-repo
  CHECKOUT_PROJECT_REPO_PATH: project-repo
  DOWNLOAD_WORKFLOW_CONCLUSION: in_progress
  PROJECT_PROGRAMMING_LANGUAGE: python

permissions:
  security-events: write
  
defaults:
  run:
    shell: bash

jobs:
  sast-codeql:
    name: (SAST) CodeQL - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-codeql-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Run CodeQL (SAST)
        uses: ./experiment-resources-repo/.github/actions/sast/codeql
        with:
          programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          artifact-name: sast-codeql-report-${{ inputs.operating-system }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sast-horusec:
    name: (SAST) Horusec - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-horusec-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Run Horusec (SAST)
        uses: ./experiment-resources-repo/.github/actions/sast/horusec
        with:
          files-or-paths-to-ignore: ${{ inputs.horusec-files-or-paths-to-ignore }}
          artifact-name: sast-horusec-report-${{ inputs.operating-system }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sast-semgrep:
    name: (SAST) Semgrep - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-semgrep-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Run Semgrep (SAST)
        uses: ./experiment-resources-repo/.github/actions/sast/semgrep
        with:
          programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          files-or-paths-to-ignore: ${{ inputs.semgrep-files-or-paths-to-ignore }}
          artifact-name: sast-semgrep-report-${{ inputs.operating-system }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sast-sonarqube:
    name: (SAST) SonarQube - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-sonarqube-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          name: ${{ inputs.project-build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Check For File Existence
        if: ${{ inputs.project-build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          fail: true

      - name: Run SonarQube (SAST)
        uses: ./experiment-resources-repo/.github/actions/sast/sonarqube
        with:
          programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          sonarqube-token: ${{ secrets.SONARQUBE_TOKEN }}
          sonarqube-url: ${{ secrets.SONARQUBE_URL}}
          sonarqube-username: ${{ secrets.SONARQUBE_USERNAME }}
          sonarqube-password: ${{ secrets.SONARQUBE_PASSWORD }}
          sonarqube-project-key: ${{ inputs.project-name }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sast-snyk-code:
    name: Run Snyk Code (SAST)
    if: ${{ inputs.sast-snyk-code-enabled == true }}
    runs-on: ubuntu-22.04
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Run Snyk Code (SAST)
        uses: ./experiment-resources-repo/.github/actions/sast/snyk-code
        with:
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sca-eclipse-steady:
    name: Run Eclipse Steady (SCA)
    if: ${{ inputs.sca-eclipse-steady-enabled == true }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          name: ${{ inputs.project-build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Check For File Existence
        if: ${{ inputs.project-build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          fail: true

      - name: Run Eclipse Steady (SCA)
        uses: ./experiment-resources-repo/.github/actions/sca/eclipse-steady/python
        with:
          eclipse-steady-workspace-token: ${{ inputs.eclipse-steady-workspace-token }}
          eclipse-steady-url: ${{ secrets.ECLIPSE_STEADY_HOST_URL }}
          eclipse-steady-application-group-id: ${{ inputs.eclipse-steady-application-group-id }}
          eclipse-steady-application-artifact-id: ${{ inputs.eclipse-steady-application-artifact-id }}
          eclipse-steady-application-version: ${{ inputs.eclipse-steady-application-version }}
          eclipse-steady-project-source-directories: ${{ inputs.eclipse-steady-project-source-directories }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sca-snyk:
    name: Run Snyk (SCA)
    if: ${{ inputs.sca-snyk-enabled == true }}
    runs-on: ubuntu-22.04
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          name: ${{ inputs.project-build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}
          
      - name: Check For File Existence
        if: ${{ inputs.project-build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          fail: true

      - name: Run Snyk (SCA)
        uses: ./experiment-resources-repo/.github/actions/sca/snyk
        with:
          programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sca-owasp-dependency-check:
    name: Run OWASP Dependency Check (SCA)
    if: ${{ inputs.sca-owasp-dependency-check-enabled == true }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          name: ${{ inputs.project-build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Check For File Existence
        if: ${{ inputs.project-build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          fail: true

      - name: Run OWASP Dependency Check (SCA)
        uses: ./experiment-resources-repo/.github/actions/sca/owasp-dependency-check
        with:
          nvd-api-key: ${{ secrets.NVD_API_KEY }}
          project-name: ${{ inputs.project-name }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sca-grype:
    name: Run Grype (SCA)
    if: ${{ inputs.sca-grype-enabled == true }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          name: ${{ inputs.project-build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Check For File Existence
        if: ${{ inputs.project-build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.project-build-directory }}"
          fail: true

      - name: Run Grype (SCA)
        uses: ./experiment-resources-repo/.github/actions/sca/grype
        with:
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  create-security-testing-tool-report:
    name: Create Security Testing Tool Report
    runs-on: ubuntu-22.04
    needs: [
      sast-sonarqube,
      sast-semgrep,
      sast-horusec,
      sast-codeql,
      sast-snyk-code,
      sca-eclipse-steady,
      sca-snyk,
      sca-owasp-dependency-check,
      sca-grype
    ]
    if: ${{ ! failure() && ! cancelled() }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}

      - name: Download All Build Artifacts
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Create Security Testing Tool Report
        uses: ./.github/actions/common/security-testing-tool-csv-report
        with:
          nvd-api-key: ${{ secrets.NVD_API_KEY }}
          opencve-username: ${{ secrets.OPENCVE_USERNAME }}
          opencve-password: ${{ secrets.OPENCVE_PASSWORD }}
          sast-horusec-report-filename: sast-horusec-report/horusec-report.json
          sast-semgrep-report-filename: sast-semgrep-report/semgrep-report.json
          sast-snyk-code-report-filename: sast-snyk-code-report/snyk-code-report.json
          sca-eclipse-steady-report-filename: sca-eclipse-steady-report/vulas-report.json
          sca-grype-report-filename: sca-grype-report/results.json
          sca-owasp-dependency-check-report-filename: sca-owasp-dependency-check-report/dependency-check-report.json
          sca-snyk-report-filename: sca-snyk-report/snyk-report.json

  export-opentelemetry-metrics:
    name: Export GitHub Action OpenTelemetry Metrics
    if: ${{ ! failure() && ! cancelled() }}
    needs: create-security-testing-tool-report
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}

      - name: Export GitHub Action OpenTelemetry Metrics
        uses: ./.github/actions/metrics/opentelemetry-metrics-exporter
        with:
          honeycomb-api-key: ${{ secrets.HONEYCOMB_API_KEY }}
          original-github-workflow-name: ${{ github.workflow }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
