name: Experiment 1 - SAST Scanning Maven

on:
  workflow_call:
    inputs:
      sonarqube-scan-enabled:
        description: 'Enable SonarQube scan'
        type: boolean
        required: false
        default: true
      semgrep-scan-enabled:
        description: 'Enable Semgrep scan'
        type: boolean
        required: false
        default: true
      deepsource-scan-enabled:
        description: 'Enable DeepSource scan'
        type: boolean
        required: false
        default: true
      horusec-scan-enabled:
        description: 'Enable Horusec scan'
        type: boolean
        required: false
        default: true
      insider-scan-enabled:
        description: 'Enable Insider scan'
        type: boolean
        required: false
        default: true
      sonarqube-project-name:
        description: 'Name of SonarQube project to be scanned'
        type: string
        required: false
      mvn-build-command:
        description: 'Maven command to build the project'
        type: string
        required: false
      mvn-jacoco-command:
        description: 'Maven command to generate jacoco reports'
        type: string
        required: false
      jacoco-scan-enabled:
        description: 'Enable Jacoco scan'
        type: boolean
        required: false
        default: true
      jacoco-coverage-file:
        description: 'Jacoco coverage file'
        type: string
        required: false
      java-version:
        description: 'Java version to build Maven project'
        type: string
        required: false
        default: 8
      java-distribution:
        description: 'Java distribution to build Maven project'
        type: string
        required: false
        default: adopt
      maven-setup-required:
        description: 'Enable Maven setup'
        type: boolean
        required: false
        default: false
      start-xvfb:
        description: 'Start Xvfb'
        type: boolean
        required: false
        default: false
      mvn-dependency-tree-artifact:
        description: 'Maven dependency tree artifact'
        type: string
        required: false
        default: maven-dependency-tree

jobs:
  sonarqube_scan:
    name: Run SAST SonarQube Scan
    if: ${{ inputs.sonarqube-scan-enabled == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Setup Maven Action
        if: ${{ inputs.maven-setup-required == true }}
        uses: s4u/setup-maven-action@v1.12.0
        with:
          java-version: ${{ inputs.java-version }}
          maven-version: 3.9.6

      - name: Rebuild Maven Project
        shell: bash
        run: ${{ inputs.mvn-build-command }}

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: temurin
          java-version: 17

      - name: Run SonarQube Scan
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn sonar:sonar -Dsonar.projectKey=${{ inputs.sonarqube-project-name }} -Dsonar.projectName=${{ inputs.sonarqube-project-name }}

  semgrep_scan:
    name: Run SAST Semgrep Scan
    if: ${{ inputs.semgrep-scan-enabled == true }}
    runs-on: ubuntu-latest
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: semgrep/semgrep
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Maven Dependency Tree
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          name: ${{ inputs.mvn-dependency-tree-artifact }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: in_progress
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Run Semgrep Scan
        shell: bash
        run: semgrep scan --config=p/ci --sarif > semgrep.sarif

      - name: Upload Semgrep Result To GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  deepsource_scan:
    name: Run SAST Deepsource Scan
    if: ${{ inputs.deepsource-scan-enabled == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Start Xvfb
        shell: bash
        run: Xvfb $DISPLAY &

      - name: Generate Jacoco Report
        if: ${{ inputs.jacoco-scan-enabled == true }}
        uses: nick-fields/retry@v3.0.0
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: ${{ inputs.mvn-jacoco-command }}

      - name: Run DeepSource Scan
        uses: DeepSourceCorp/test-coverage-action@v1.1.2
        with:
          key: java
          coverage-file: ${{ inputs.jacoco-coverage-file }}
          dsn: ${{ secrets.DEEPSOURCE_DSN }}

  horusec_scan:
    name: Run SAST Horusec Scan
    if: ${{ inputs.horusec-scan-enabled == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Horusec Scan
        uses: fike/horusec-action@v0.2.2
        with:
          arguments: -c="horusec-config.json" -w -j -p="./" -e="false" -o="json" -O="hoursec_report.json"

      - name: Upload Horusec JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: hoursec-scan-report
          path: '**/hoursec_report.json'

  insider_scan:
    name: Run SAST Insider Scan
    if: ${{ inputs.insider-scan-enabled == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Insider Scan
        shell: bash
        run: |
          wget https://github.com/insidersec/insider/releases/download/3.0.0/insider_3.0.0_linux_x86_64.tar.gz
          tar -xf insider_3.0.0_linux_x86_64.tar.gz
          chmod +x insider
          ./insider --tech java --target . 

      - name: Upload Insider JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: insider-report.json
          path: '**/report.json'

      - name: Upload Insider HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: insider-report.html
          path: '**/report.html'