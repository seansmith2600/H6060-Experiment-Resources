name: Experiment 1 - SAST Scanning Python

on:
  workflow_call:
    inputs:
      sonarqube-scan-enabled:
        description: 'Enable SonarQube scan'
        type: boolean
        required: false
        default: true
      semgrep-scan-enabled:
        description: 'Enable Semgrep scan'
        type: boolean
        required: false
        default: true
      deepsource-scan-enabled:
        description: 'Enable DeepSource scan'
        type: boolean
        required: false
        default: true
      horusec-scan-enabled:
        description: 'Enable Horusec scan'
        type: boolean
        required: false
        default: true
      include-coverage-report:
        description: 'Include coverage report'
        type: boolean
        required: false
        default: true

jobs:
  sonarqube_scan:
    name: Run SAST SonarQube Scan
    if: ${{ inputs.sonarqube-scan-enabled == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Python Coverage
        if: ${{ inputs.include-coverage-report == true }}
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          name: python-coverage-report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: in_progress
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: temurin
          java-version: 17

      - name: Run SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2.0.2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  semgrep_scan:
    name: Run SAST Semgrep Scan
    if: ${{ inputs.semgrep-scan-enabled == true }}
    runs-on: ubuntu-latest
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: semgrep/semgrep
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Semgrep Scan
        shell: bash
        run: semgrep scan --config=p/ci --config=p/default --config=p/python --config=p/secrets --config=p/cwe-top-25 --config=p/owasp-top-ten --sarif > semgrep.sarif

      - name: Upload Semgrep Result To GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  deepsource_scan:
    name: Run SAST Deepsource Scan
    if: ${{ inputs.deepsource-scan-enabled == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Python Coverage
        uses: dawidd6/action-download-artifact@v3.1.4
        with:
          name: python-coverage-report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: in_progress
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Run DeepSource Scan
        uses: DeepSourceCorp/test-coverage-action@v1.1.2
        with:
          key: python
          coverage-file: coverage.xml
          dsn: ${{ secrets.DEEPSOURCE_DSN }}

  horusec_scan:
    name: Run SAST Horusec Scan
    if: ${{ inputs.horusec-scan-enabled == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Horusec Scan
        uses: fike/horusec-action@v0.2.2
        env:
          HORUSEC_CLI_ENABLE_OWASP_DEPENDENCY_CHECK: true
        with:
          arguments: -c="horusec-config.json" -i="**/test/**" -w -j -p="./" -e="false" -o="json" -O="hoursec_report.json"

      - name: Upload Horusec JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: hoursec-scan-report
          path: hoursec_report.json
