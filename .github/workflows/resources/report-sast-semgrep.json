{
  "errors":[
     {
        "code":2,
        "level":"warn",
        "message":"Timeout when running python.boto3.security.hardcoded-token.hardcoded-token on clearml/backend_api/services/v2_20/tasks.py:\n ",
        "path":"clearml/backend_api/services/v2_20/tasks.py",
        "rule_id":"python.boto3.security.hardcoded-token.hardcoded-token",
        "type":"Timeout"
     },
     {
        "code":2,
        "level":"warn",
        "message":"Timeout when running python.boto3.security.hardcoded-token.hardcoded-token on clearml/backend_api/services/v2_13/tasks.py:\n ",
        "path":"clearml/backend_api/services/v2_13/tasks.py",
        "rule_id":"python.boto3.security.hardcoded-token.hardcoded-token",
        "type":"Timeout"
     },
     {
        "code":2,
        "level":"warn",
        "message":"Timeout when running python.boto3.security.hardcoded-token.hardcoded-token on clearml/backend_api/services/v2_23/tasks.py:\n ",
        "path":"clearml/backend_api/services/v2_23/tasks.py",
        "rule_id":"python.boto3.security.hardcoded-token.hardcoded-token",
        "type":"Timeout"
     },
     {
        "code":2,
        "level":"warn",
        "message":"Timeout when running python.cryptography.cryptography-rsa-pkcs1-signature.cryptography-rsa-pkcs1-signature on clearml/utilities/gpu/pynvml.py:\n ",
        "path":"clearml/utilities/gpu/pynvml.py",
        "rule_id":"python.cryptography.cryptography-rsa-pkcs1-signature.cryptography-rsa-pkcs1-signature",
        "type":"Timeout"
     },
     {
        "code":2,
        "level":"warn",
        "message":"Timeout when running python.boto3.security.hardcoded-token.hardcoded-token on clearml/backend_api/services/v2_9/tasks.py:\n ",
        "path":"clearml/backend_api/services/v2_9/tasks.py",
        "rule_id":"python.boto3.security.hardcoded-token.hardcoded-token",
        "type":"Timeout"
     }
  ],
  "interfile_languages_used":[

  ],
  "paths":{
     "scanned":[
        ".flake8",
        ".github/ISSUE_TEMPLATE/bug_report.md",
        ".github/ISSUE_TEMPLATE/feature_request.md",
        ".github/PULL_REQUEST_TEMPLATE.md",
        ".github/workflows/codeql-analysis.yml",
        ".gitignore",
        "CODE_OF_CONDUCT.md",
        "LICENSE",
        "README.md",
        "SECURITY.md",
        "_config.yml",
        "clearml/__init__.py",
        "clearml/automation/__init__.py",
        "clearml/automation/auto_scaler.py",
        "clearml/automation/aws_driver.py",
        "clearml/automation/cloud_driver.py",
        "clearml/automation/controller.py",
        "clearml/automation/hpbandster/__init__.py",
        "clearml/automation/hpbandster/bandster.py",
        "clearml/automation/job.py",
        "clearml/automation/monitor.py",
        "clearml/automation/optimization.py",
        "clearml/automation/optuna/__init__.py",
        "clearml/automation/optuna/optuna.py",
        "clearml/automation/parameters.py",
        "clearml/automation/scheduler.py",
        "clearml/automation/trigger.py",
        "clearml/backend_api/__init__.py",
        "clearml/backend_api/api_proxy.py",
        "clearml/backend_api/config/__init__.py",
        "clearml/backend_api/config/default/api.conf",
        "clearml/backend_api/config/default/logging.conf",
        "clearml/backend_api/schema/__init__.py",
        "clearml/backend_api/schema/action.py",
        "clearml/backend_api/schema/service.py",
        "clearml/backend_api/services/__init__.py",
        "clearml/backend_api/services/v2_13/__init__.py",
        "clearml/backend_api/services/v2_13/auth.py",
        "clearml/backend_api/services/v2_13/events.py",
        "clearml/backend_api/services/v2_13/models.py",
        "clearml/backend_api/services/v2_13/organization.py",
        "clearml/backend_api/services/v2_13/projects.py",
        "clearml/backend_api/services/v2_13/queues.py",
        "clearml/backend_api/services/v2_13/tasks.py",
        "clearml/backend_api/services/v2_13/workers.py",
        "clearml/backend_api/services/v2_20/__init__.py",
        "clearml/backend_api/services/v2_20/auth.py",
        "clearml/backend_api/services/v2_20/events.py",
        "clearml/backend_api/services/v2_20/models.py",
        "clearml/backend_api/services/v2_20/organization.py",
        "clearml/backend_api/services/v2_20/pipelines.py",
        "clearml/backend_api/services/v2_20/projects.py",
        "clearml/backend_api/services/v2_20/queues.py",
        "clearml/backend_api/services/v2_20/tasks.py",
        "clearml/backend_api/services/v2_20/workers.py",
        "clearml/backend_api/services/v2_23/__init__.py",
        "clearml/backend_api/services/v2_23/auth.py",
        "clearml/backend_api/services/v2_23/events.py",
        "clearml/backend_api/services/v2_23/models.py",
        "clearml/backend_api/services/v2_23/organization.py",
        "clearml/backend_api/services/v2_23/pipelines.py",
        "clearml/backend_api/services/v2_23/projects.py",
        "clearml/backend_api/services/v2_23/queues.py",
        "clearml/backend_api/services/v2_23/tasks.py",
        "clearml/backend_api/services/v2_23/workers.py",
        "clearml/backend_api/services/v2_9/__init__.py",
        "clearml/backend_api/services/v2_9/auth.py",
        "clearml/backend_api/services/v2_9/events.py",
        "clearml/backend_api/services/v2_9/models.py",
        "clearml/backend_api/services/v2_9/organization.py",
        "clearml/backend_api/services/v2_9/projects.py",
        "clearml/backend_api/services/v2_9/queues.py",
        "clearml/backend_api/services/v2_9/tasks.py",
        "clearml/backend_api/services/v2_9/workers.py",
        "clearml/backend_api/session/__init__.py",
        "clearml/backend_api/session/apimodel.py",
        "clearml/backend_api/session/callresult.py",
        "clearml/backend_api/session/client/__init__.py",
        "clearml/backend_api/session/client/client.py",
        "clearml/backend_api/session/datamodel.py",
        "clearml/backend_api/session/defs.py",
        "clearml/backend_api/session/errors.py",
        "clearml/backend_api/session/jsonmodels/__init__.py",
        "clearml/backend_api/session/jsonmodels/builders.py",
        "clearml/backend_api/session/jsonmodels/collections.py",
        "clearml/backend_api/session/jsonmodels/errors.py",
        "clearml/backend_api/session/jsonmodels/fields.py",
        "clearml/backend_api/session/jsonmodels/models.py",
        "clearml/backend_api/session/jsonmodels/parsers.py",
        "clearml/backend_api/session/jsonmodels/utilities.py",
        "clearml/backend_api/session/jsonmodels/validators.py",
        "clearml/backend_api/session/request.py",
        "clearml/backend_api/session/response.py",
        "clearml/backend_api/session/session.py",
        "clearml/backend_api/session/token_manager.py",
        "clearml/backend_api/utils.py",
        "clearml/backend_config/__init__.py",
        "clearml/backend_config/bucket_config.py",
        "clearml/backend_config/config.py",
        "clearml/backend_config/converters.py",
        "clearml/backend_config/defs.py",
        "clearml/backend_config/entry.py",
        "clearml/backend_config/environment.py",
        "clearml/backend_config/errors.py",
        "clearml/backend_config/log.py",
        "clearml/backend_config/utils.py",
        "clearml/backend_interface/__init__.py",
        "clearml/backend_interface/base.py",
        "clearml/backend_interface/logger.py",
        "clearml/backend_interface/metrics/__init__.py",
        "clearml/backend_interface/metrics/events.py",
        "clearml/backend_interface/metrics/interface.py",
        "clearml/backend_interface/metrics/reporter.py",
        "clearml/backend_interface/model.py",
        "clearml/backend_interface/session.py",
        "clearml/backend_interface/setupuploadmixin.py",
        "clearml/backend_interface/task/__init__.py",
        "clearml/backend_interface/task/access.py",
        "clearml/backend_interface/task/args.py",
        "clearml/backend_interface/task/development/__init__.py",
        "clearml/backend_interface/task/development/stop_signal.py",
        "clearml/backend_interface/task/development/worker.py",
        "clearml/backend_interface/task/hyperparams.py",
        "clearml/backend_interface/task/log.py",
        "clearml/backend_interface/task/models.py",
        "clearml/backend_interface/task/populate.py",
        "clearml/backend_interface/task/repo/__init__.py",
        "clearml/backend_interface/task/repo/detectors.py",
        "clearml/backend_interface/task/repo/freeze.py",
        "clearml/backend_interface/task/repo/scriptinfo.py",
        "clearml/backend_interface/task/repo/util.py",
        "clearml/backend_interface/task/task.py",
        "clearml/backend_interface/util.py",
        "clearml/binding/__init__.py",
        "clearml/binding/absl_bind.py",
        "clearml/binding/args.py",
        "clearml/binding/artifacts.py",
        "clearml/binding/click_bind.py",
        "clearml/binding/environ_bind.py",
        "clearml/binding/fire_bind.py",
        "clearml/binding/frameworks/__init__.py",
        "clearml/binding/frameworks/base_bind.py",
        "clearml/binding/frameworks/catboost_bind.py",
        "clearml/binding/frameworks/fastai_bind.py",
        "clearml/binding/frameworks/lightgbm_bind.py",
        "clearml/binding/frameworks/megengine_bind.py",
        "clearml/binding/frameworks/pytorch_bind.py",
        "clearml/binding/frameworks/tensorflow_bind.py",
        "clearml/binding/frameworks/xgboost_bind.py",
        "clearml/binding/gradio_bind.py",
        "clearml/binding/hydra_bind.py",
        "clearml/binding/import_bind.py",
        "clearml/binding/joblib_bind.py",
        "clearml/binding/jsonargs_bind.py",
        "clearml/binding/matplotlib_bind.py",
        "clearml/cli/__init__.py",
        "clearml/cli/config/__init__.py",
        "clearml/cli/config/__main__.py",
        "clearml/cli/data/__init__.py",
        "clearml/cli/data/__main__.py",
        "clearml/cli/hpo/__init__.py",
        "clearml/cli/hpo/__main__.py",
        "clearml/cli/task/__init__.py",
        "clearml/cli/task/__main__.py",
        "clearml/config/__init__.py",
        "clearml/config/cache.py",
        "clearml/config/default/__init__.py",
        "clearml/config/default/logging.conf",
        "clearml/config/default/sdk.conf",
        "clearml/config/defs.py",
        "clearml/config/remote.py",
        "clearml/datasets/__init__.py",
        "clearml/datasets/dataset.py",
        "clearml/debugging/__init__.py",
        "clearml/debugging/log.py",
        "clearml/debugging/timer.py",
        "clearml/debugging/trace.py",
        "clearml/errors.py",
        "clearml/external/__init__.py",
        "clearml/external/kerastuner.py",
        "clearml/logger.py",
        "clearml/model.py",
        "clearml/storage/__init__.py",
        "clearml/storage/cache.py",
        "clearml/storage/callbacks.py",
        "clearml/storage/helper.py",
        "clearml/storage/manager.py",
        "clearml/storage/util.py",
        "clearml/task.py",
        "clearml/task_parameters.py",
        "clearml/utilities/__init__.py",
        "clearml/utilities/async_manager.py",
        "clearml/utilities/attrs.py",
        "clearml/utilities/check_updates.py",
        "clearml/utilities/config.py",
        "clearml/utilities/deferred.py",
        "clearml/utilities/dicts.py",
        "clearml/utilities/distutils_version.py",
        "clearml/utilities/enum.py",
        "clearml/utilities/files.py",
        "clearml/utilities/gpu/__init__.py",
        "clearml/utilities/gpu/gpustat.py",
        "clearml/utilities/gpu/pynvml.py",
        "clearml/utilities/io_manager.py",
        "clearml/utilities/locks/__init__.py",
        "clearml/utilities/locks/constants.py",
        "clearml/utilities/locks/exceptions.py",
        "clearml/utilities/locks/portalocker.py",
        "clearml/utilities/locks/utils.py",
        "clearml/utilities/lowlevel/__init__.py",
        "clearml/utilities/lowlevel/astor_unparse.py",
        "clearml/utilities/lowlevel/distributed.py",
        "clearml/utilities/lowlevel/file_access.py",
        "clearml/utilities/lowlevel/threads.py",
        "clearml/utilities/matching.py",
        "clearml/utilities/networking.py",
        "clearml/utilities/parallel.py",
        "clearml/utilities/pigar/__init__.py",
        "clearml/utilities/pigar/__main__.py",
        "clearml/utilities/pigar/log.py",
        "clearml/utilities/pigar/modules.py",
        "clearml/utilities/pigar/reqs.py",
        "clearml/utilities/pigar/unpack.py",
        "clearml/utilities/pigar/utils.py",
        "clearml/utilities/plotly_reporter.py",
        "clearml/utilities/plotlympl/__init__.py",
        "clearml/utilities/plotlympl/mplexporter/__init__.py",
        "clearml/utilities/plotlympl/mplexporter/_py3k_compat.py",
        "clearml/utilities/plotlympl/mplexporter/exporter.py",
        "clearml/utilities/plotlympl/mplexporter/renderers/__init__.py",
        "clearml/utilities/plotlympl/mplexporter/renderers/base.py",
        "clearml/utilities/plotlympl/mplexporter/renderers/fake_renderer.py",
        "clearml/utilities/plotlympl/mplexporter/renderers/vega_renderer.py",
        "clearml/utilities/plotlympl/mplexporter/renderers/vincent_renderer.py",
        "clearml/utilities/plotlympl/mplexporter/tools.py",
        "clearml/utilities/plotlympl/mplexporter/utils.py",
        "clearml/utilities/plotlympl/mpltools.py",
        "clearml/utilities/plotlympl/renderer.py",
        "clearml/utilities/process/__init__.py",
        "clearml/utilities/process/exit_hooks.py",
        "clearml/utilities/process/mp.py",
        "clearml/utilities/proxy_object.py",
        "clearml/utilities/py3_interop.py",
        "clearml/utilities/pyhocon/__init__.py",
        "clearml/utilities/pyhocon/config_parser.py",
        "clearml/utilities/pyhocon/config_tree.py",
        "clearml/utilities/pyhocon/converter.py",
        "clearml/utilities/pyhocon/exceptions.py",
        "clearml/utilities/requests_toolbelt/__init__.py",
        "clearml/utilities/requests_toolbelt/_compat.py",
        "clearml/utilities/requests_toolbelt/multipart/__init__.py",
        "clearml/utilities/requests_toolbelt/multipart/decoder.py",
        "clearml/utilities/requests_toolbelt/multipart/encoder.py",
        "clearml/utilities/resource_monitor.py",
        "clearml/utilities/seed.py",
        "clearml/utilities/version.py",
        "clearml/utilities/wizard/__init__.py",
        "clearml/utilities/wizard/user_input.py",
        "clearml/version.py",
        "dev-requirements.txt",
        "docs/clearml-logo-dark.svg",
        "docs/clearml-logo.svg",
        "docs/clearml-task.md",
        "docs/clearml.conf",
        "docs/contributing.md",
        "docs/dataset_screenshots.gif",
        "docs/datasets.gif",
        "docs/datasets.md",
        "docs/errata_breaking_change_gcs_sdk_1_11_x.md",
        "docs/logger.md",
        "docs/orchestration.gif",
        "docs/pipelines.gif",
        "docs/results_screenshots.gif",
        "docs/screenshots/compare_plots.png",
        "docs/screenshots/compare_plots_hist.png",
        "docs/screenshots/compare_values.png",
        "docs/screenshots/custom_column.png",
        "docs/screenshots/set_custom_column.png",
        "docs/system_diagram.png",
        "docs/trains.conf",
        "docs/tutorials/Getting_Started_1_Experiment_Management.ipynb",
        "docs/tutorials/Getting_Started_2_Setting_Up_Agent.ipynb",
        "docs/tutorials/Getting_Started_3_Remote_Execution.ipynb",
        "examples/advanced/execute_remotely_example.py",
        "examples/advanced/multiple_tasks_single_process.py",
        "examples/advanced/requirements.txt",
        "examples/automation/manual_random_param_search_example.py",
        "examples/automation/programmatic_orchestration.py",
        "examples/automation/requirements.txt",
        "examples/automation/toy_base_task.py",
        "examples/cicd/README.md",
        "examples/cicd/check_remotely_runnable.py",
        "examples/cicd/compare_models.py",
        "examples/cicd/example_task.py",
        "examples/cicd/images/checks_green.png",
        "examples/cicd/images/credentials.png",
        "examples/cicd/requirements.txt",
        "examples/cicd/run_clearml_checks.yml",
        "examples/cicd/task_stats_to_comment.py",
        "examples/clearml_agent/clearml_colab_agent.ipynb",
        "examples/datasets/README.md",
        "examples/datasets/csv_dataset_creation.py",
        "examples/datasets/data_ingestion.py",
        "examples/datasets/dataset_creation.py",
        "examples/datasets/dataset_folder_syncing.py",
        "examples/datasets/multi_parent_child_dataset.py",
        "examples/datasets/requirements.txt",
        "examples/datasets/single_parent_child_dataset.py",
        "examples/datasets/urbansounds_dataset_preprocessing.py",
        "examples/datasets/urbansounds_get_data.py",
        "examples/distributed/requirements.txt",
        "examples/distributed/subprocess_example.py",
        "examples/frameworks/autokeras/autokeras_imdb_example.py",
        "examples/frameworks/autokeras/requirements.txt",
        "examples/frameworks/catboost/catboost_example.py",
        "examples/frameworks/catboost/requirements.txt",
        "examples/frameworks/click/click_multi_cmd.py",
        "examples/frameworks/click/click_single_cmd.py",
        "examples/frameworks/click/requirements.txt",
        "examples/frameworks/fastai/fastai_example.py",
        "examples/frameworks/fastai/fastai_with_tensorboard_example.py",
        "examples/frameworks/fastai/legacy/fastai_example.py",
        "examples/frameworks/fastai/legacy/fastai_with_tensorboard_example.py",
        "examples/frameworks/fastai/legacy/requirements.txt",
        "examples/frameworks/fastai/requirements.txt",
        "examples/frameworks/fire/fire_class_cmd.py",
        "examples/frameworks/fire/fire_dict_cmd.py",
        "examples/frameworks/fire/fire_grouping_cmd.py",
        "examples/frameworks/fire/fire_multi_cmd.py",
        "examples/frameworks/fire/fire_object_cmd.py",
        "examples/frameworks/fire/fire_single_cmd.py",
        "examples/frameworks/fire/fire_typing.py",
        "examples/frameworks/fire/requirements.txt",
        "examples/frameworks/huggingface/transformers.ipynb",
        "examples/frameworks/hydra/config_files/config.yaml",
        "examples/frameworks/hydra/hydra_example.py",
        "examples/frameworks/hydra/requirements.txt",
        "examples/frameworks/ignite/cifar_ignite.py",
        "examples/frameworks/ignite/requirements.txt",
        "examples/frameworks/jsonargparse/jsonargparse_command.py",
        "examples/frameworks/jsonargparse/jsonargparse_nested_namespaces.py",
        "examples/frameworks/jsonargparse/pytorch_lightning_cli.py",
        "examples/frameworks/jsonargparse/pytorch_lightning_cli.yml",
        "examples/frameworks/jsonargparse/pytorch_lightning_cli_old.py",
        "examples/frameworks/jsonargparse/pytorch_lightning_cli_old.yml",
        "examples/frameworks/jsonargparse/requirements.txt",
        "examples/frameworks/keras/jupyter.ipynb",
        "examples/frameworks/keras/jupyter_keras_TB_example.ipynb",
        "examples/frameworks/keras/keras_tensorboard.py",
        "examples/frameworks/keras/keras_v3.py",
        "examples/frameworks/keras/legacy/jupyter.ipynb",
        "examples/frameworks/keras/legacy/keras_tensorboard.py",
        "examples/frameworks/keras/legacy/requirements.txt",
        "examples/frameworks/keras/requirements.txt",
        "examples/frameworks/kerastuner/keras_tuner_cifar.py",
        "examples/frameworks/kerastuner/requirements.txt",
        "examples/frameworks/lightgbm/lightgbm_example.py",
        "examples/frameworks/lightgbm/requirements.txt",
        "examples/frameworks/matplotlib/jupyter_matplotlib_example.ipynb",
        "examples/frameworks/matplotlib/matplotlib_example.py",
        "examples/frameworks/matplotlib/requirements.txt",
        "examples/frameworks/megengine/megengine_mnist.py",
        "examples/frameworks/megengine/requirements.txt",
        "examples/frameworks/openmmlab/openmmlab_cifar10.py",
        "examples/frameworks/openmmlab/requirements.txt",
        "examples/frameworks/pytorch/notebooks/audio/README.md",
        "examples/frameworks/pytorch/notebooks/audio/audio_classifier_UrbanSound8K.ipynb",
        "examples/frameworks/pytorch/notebooks/audio/audio_preprocessing_example.ipynb",
        "examples/frameworks/pytorch/notebooks/image/hyperparameter_search.ipynb",
        "examples/frameworks/pytorch/notebooks/image/image_classification_CIFAR10.ipynb",
        "examples/frameworks/pytorch/notebooks/table/download_and_preprocessing.ipynb",
        "examples/frameworks/pytorch/notebooks/table/download_and_split.ipynb",
        "examples/frameworks/pytorch/notebooks/table/pick_best_model.ipynb",
        "examples/frameworks/pytorch/notebooks/table/preprocessing_and_encoding.ipynb",
        "examples/frameworks/pytorch/notebooks/table/tabular_ml_pipeline.ipynb",
        "examples/frameworks/pytorch/notebooks/table/train_tabular_predictor.ipynb",
        "examples/frameworks/pytorch/notebooks/text/text_classification_AG_NEWS.ipynb",
        "examples/frameworks/pytorch/pytorch_abseil.py",
        "examples/frameworks/pytorch/pytorch_distributed_example.py",
        "examples/frameworks/pytorch/pytorch_matplotlib.py",
        "examples/frameworks/pytorch/pytorch_mnist.py",
        "examples/frameworks/pytorch/pytorch_model_update.py",
        "examples/frameworks/pytorch/pytorch_tensorboard.py",
        "examples/frameworks/pytorch/requirements.txt",
        "examples/frameworks/pytorch/tensorboard_toy_pytorch.py",
        "examples/frameworks/pytorch-lightning/pytorch_lightning_example.py",
        "examples/frameworks/pytorch-lightning/requirements.txt",
        "examples/frameworks/scikit-learn/requirements.txt",
        "examples/frameworks/scikit-learn/sklearn_joblib_example.py",
        "examples/frameworks/scikit-learn/sklearn_matplotlib_example.py",
        "examples/frameworks/tensorboardx/moviepy_tensorboardx.py",
        "examples/frameworks/tensorboardx/pytorch_tensorboardX.py",
        "examples/frameworks/tensorboardx/requirements.txt",
        "examples/frameworks/tensorflow/absl_flags.py",
        "examples/frameworks/tensorflow/legacy/requirements.txt",
        "examples/frameworks/tensorflow/legacy/tensorboard_pr_curve.py",
        "examples/frameworks/tensorflow/legacy/tensorboard_toy.py",
        "examples/frameworks/tensorflow/legacy/tensorflow_eager.py",
        "examples/frameworks/tensorflow/legacy/tensorflow_mnist_with_summaries.py",
        "examples/frameworks/tensorflow/requirements.txt",
        "examples/frameworks/tensorflow/tensorboard_pr_curve.py",
        "examples/frameworks/tensorflow/tensorboard_toy.py",
        "examples/frameworks/tensorflow/tensorflow_mnist.py",
        "examples/frameworks/xgboost/requirements.txt",
        "examples/frameworks/xgboost/xgboost_metrics.py",
        "examples/frameworks/xgboost/xgboost_sample.py",
        "examples/hyperdatasets/README.md",
        "examples/hyperdatasets/data-ingestion/dataview_example_framegroup.py",
        "examples/hyperdatasets/data-ingestion/dataview_example_singleframe.py",
        "examples/hyperdatasets/data-ingestion/pytorch_dataset_example.py",
        "examples/hyperdatasets/data-ingestion/pytorch_dataset_example_with_masks.py",
        "examples/hyperdatasets/data-registration/register_dataset_masks.py",
        "examples/hyperdatasets/data-registration/register_dataset_with_roi.py",
        "examples/hyperdatasets/requirements.txt",
        "examples/optimization/hyper-parameter-optimization/base_template_keras_simple.py",
        "examples/optimization/hyper-parameter-optimization/hyper_parameter_optimizer.py",
        "examples/optimization/hyper-parameter-optimization/multi_objective_hpo.py",
        "examples/optimization/hyper-parameter-optimization/requirements.txt",
        "examples/pipeline/decorated_pipeline_step_decorators.py",
        "examples/pipeline/decorated_pipeline_step_functions.py",
        "examples/pipeline/full_tabular_data_process_pipeline_example.py",
        "examples/pipeline/pipeline_from_decorator.py",
        "examples/pipeline/pipeline_from_functions.py",
        "examples/pipeline/pipeline_from_tasks.py",
        "examples/pipeline/requirements.txt",
        "examples/pipeline/step1_dataset_artifact.py",
        "examples/pipeline/step2_data_processing.py",
        "examples/pipeline/step3_train_model.py",
        "examples/reporting/3d_plots_reporting.py",
        "examples/reporting/artifacts.py",
        "examples/reporting/artifacts_retrieval.py",
        "examples/reporting/config_files.py",
        "examples/reporting/data_samples/config_yaml.yaml",
        "examples/reporting/data_samples/dancing.jpg",
        "examples/reporting/data_samples/data.csv",
        "examples/reporting/data_samples/picasso.jpg",
        "examples/reporting/data_samples/sample.json",
        "examples/reporting/data_samples/sample.mp3",
        "examples/reporting/html_reporting.py",
        "examples/reporting/hyper_parameters.py",
        "examples/reporting/image_reporting.py",
        "examples/reporting/jupyter_logging_example.ipynb",
        "examples/reporting/matplotlib_manual_reporting.py",
        "examples/reporting/media_reporting.py",
        "examples/reporting/model_reporting.py",
        "examples/reporting/model_reporting_plots.py",
        "examples/reporting/pandas_reporting.py",
        "examples/reporting/plotly_reporting.py",
        "examples/reporting/requirements.txt",
        "examples/reporting/scalar_reporting.py",
        "examples/reporting/scatter_hist_confusion_mat_reporting.py",
        "examples/reporting/text_reporting.py",
        "examples/reporting/using_artifacts_example.py",
        "examples/scheduler/cron_example.py",
        "examples/scheduler/requirements.txt",
        "examples/scheduler/trigger_example.py",
        "examples/services/aws-autoscaler/aws_autoscaler.py",
        "examples/services/aws-autoscaler/requirements.txt",
        "examples/services/cleanup/cleanup_service.py",
        "examples/services/cleanup/requirements.txt",
        "examples/services/monitoring/requirements.txt",
        "examples/services/monitoring/slack_alerts.py",
        "requirements.txt",
        "setup.cfg",
        "setup.py"
     ]
  },
  "results":[
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":56,
           "line":71,
           "offset":2119
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"a2e079ec19daa2cbb9a941d0097d15ae3c873d46faf3fe5b5917ebeb476a00a9a854473063f718719463d18ff0fc1bc2c3c7ac71c644c25bd24993b144258e32_0",
           "is_ignored":false,
           "lines":"        title = hashlib.md5(str(title).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/automation/job.py",
        "start":{
           "col":17,
           "line":71,
           "offset":2080
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":58,
           "line":72,
           "offset":2189
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"a2e079ec19daa2cbb9a941d0097d15ae3c873d46faf3fe5b5917ebeb476a00a9a854473063f718719463d18ff0fc1bc2c3c7ac71c644c25bd24993b144258e32_1",
           "is_ignored":false,
           "lines":"        series = hashlib.md5(str(series).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/automation/job.py",
        "start":{
           "col":18,
           "line":72,
           "offset":2149
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":67,
           "line":226,
           "offset":7797
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"8f180d494ee765e9892f55e084c9a0e53ebf56599f5c5d52cd6986d9493326699c1dfe274a78145439ed3ee49c25975f72ae710c9a73e23479434eae8ab94ce2_0",
           "is_ignored":false,
           "lines":"                title = hashlib.md5(str(parts[1]).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/automation/optimization.py",
        "start":{
           "col":25,
           "line":226,
           "offset":7755
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":68,
           "line":227,
           "offset":7877
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"8f180d494ee765e9892f55e084c9a0e53ebf56599f5c5d52cd6986d9493326699c1dfe274a78145439ed3ee49c25975f72ae710c9a73e23479434eae8ab94ce2_1",
           "is_ignored":false,
           "lines":"                series = hashlib.md5(str(parts[2]).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/automation/optimization.py",
        "start":{
           "col":26,
           "line":227,
           "offset":7835
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":65,
           "line":245,
           "offset":8574
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"8f180d494ee765e9892f55e084c9a0e53ebf56599f5c5d52cd6986d9493326699c1dfe274a78145439ed3ee49c25975f72ae710c9a73e23479434eae8ab94ce2_2",
           "is_ignored":false,
           "lines":"            title = hashlib.md5(str(self.title).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/automation/optimization.py",
        "start":{
           "col":21,
           "line":245,
           "offset":8530
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":67,
           "line":246,
           "offset":8653
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"8f180d494ee765e9892f55e084c9a0e53ebf56599f5c5d52cd6986d9493326699c1dfe274a78145439ed3ee49c25975f72ae710c9a73e23479434eae8ab94ce2_3",
           "is_ignored":false,
           "lines":"            series = hashlib.md5(str(self.series).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/automation/optimization.py",
        "start":{
           "col":22,
           "line":246,
           "offset":8608
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":67,
           "line":915,
           "offset":37033
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"8f180d494ee765e9892f55e084c9a0e53ebf56599f5c5d52cd6986d9493326699c1dfe274a78145439ed3ee49c25975f72ae710c9a73e23479434eae8ab94ce2_4",
           "is_ignored":false,
           "lines":"                title = hashlib.md5(str(parts[1]).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/automation/optimization.py",
        "start":{
           "col":25,
           "line":915,
           "offset":36991
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":68,
           "line":916,
           "offset":37113
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"8f180d494ee765e9892f55e084c9a0e53ebf56599f5c5d52cd6986d9493326699c1dfe274a78145439ed3ee49c25975f72ae710c9a73e23479434eae8ab94ce2_5",
           "is_ignored":false,
           "lines":"                series = hashlib.md5(str(parts[2]).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/automation/optimization.py",
        "start":{
           "col":26,
           "line":916,
           "offset":37071
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":80,
           "line":397,
           "offset":15419
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"f83a0be931473ab65cab9dfb4dedf1bca4953038b17aa8fc3cbed928c288a55a2673021aaec6d544a8de02a0ca7b0f5ec735ea8825090da791d854d4d8200213_0",
           "is_ignored":false,
           "lines":"                prefix = hashlib.md5(str('.'.join(parts[:-1])).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/backend_interface/metrics/events.py",
        "start":{
           "col":26,
           "line":397,
           "offset":15365
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":65,
           "line":401,
           "offset":15634
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"f83a0be931473ab65cab9dfb4dedf1bca4953038b17aa8fc3cbed928c288a55a2673021aaec6d544a8de02a0ca7b0f5ec735ea8825090da791d854d4d8200213_1",
           "is_ignored":false,
           "lines":"            return hashlib.md5(str(folder_path).encode('utf-8')).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/backend_interface/metrics/events.py",
        "start":{
           "col":20,
           "line":401,
           "offset":15589
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":38,
           "line":220,
           "offset":6358
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"a8a0b4df27baed4d3d19b7f3966a7aead4fd078230766aa964647357c0a20c545fd9fda0532714116a038099c86e8b4f80014b3eb3abfb5f0b6ad6b5cd5d428b_0",
           "is_ignored":false,
           "lines":"                    h = hashlib.md5()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/config/__init__.py",
        "start":{
           "col":25,
           "line":220,
           "offset":6345
        }
     },
     {
        "check_id":"python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
        "end":{
           "col":49,
           "line":109,
           "offset":3990
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"868ba5a4ae56be39e33e59c628f21bf7f8eb52b68718a2f318c768b8fa01ad558fef1c867573b0389139615976311426078570328cbe09014d5d40d983c627cd_0",
           "is_ignored":false,
           "lines":"            str_hash = hashlib.md5(url.encode()).hexdigest()",
           "message":"Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
           "metadata":{
              "asvs":{
                 "control_id":"6.2.2 Insecure Custom Algorithm",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x14-V6-Cryptography.md#v62-algorithms",
                 "section":"V6 Stored Cryptography Verification Requirements",
                 "version":"4"
              },
              "bandit-code":"B303",
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
              ],
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"LOW",
              "owasp":[
                 "A03:2017 - Sensitive Data Exposure",
                 "A02:2021 - Cryptographic Failures"
              ],
              "references":[
                 "https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html",
                 "https://www.trendmicro.com/vinfo/us/security/news/vulnerabilities-and-exploits/sha-1-collision-signals-the-end-of-the-algorithm-s-viability",
                 "http://2012.sharcs.org/slides/stevens.pdf",
                 "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":33633,
                    "rule_id":"PeU2e2",
                    "rv_id":110447,
                    "url":"https://semgrep.dev/playground/r/qkT2B5X/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
                    "version_id":"qkT2B5X"
                 }
              },
              "shortlink":"https://sg.run/vYrY",
              "source":"https://semgrep.dev/r/python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5",
              "source-rule-url":"https://github.com/PyCQA/bandit/blob/d5f8fa0d89d7b11442fc6ec80ca42953974354c8/bandit/blacklists/calls.py#L59",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Cryptographic Issues"
              ]
           },
           "metavars":{

           },
           "severity":"WARNING",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"clearml/storage/cache.py",
        "start":{
           "col":24,
           "line":109,
           "offset":3965
        }
     },
     {
        "check_id":"yaml.github-actions.security.run-shell-injection.run-shell-injection",
        "end":{
           "col":32,
           "line":71,
           "offset":2422
        },
        "extra":{
           "engine_kind":"OSS",
           "fingerprint":"c622905788b007e96c0d8d918b86c31e98448de45222d99e4c33b986eedcde638a51d8609320991b879cff76ff685506c5f61a6df4197cfcfc3b94c57e2ae577_0",
           "is_ignored":false,
           "lines":"        run: |\n          echo \"TASK_ID=$(\n            clearml-task --project 'Github CICD Video' --name cicd_test --branch ${{ github.head_ref }} --script task.py --requirements requirements.txt --skip-task-init --queue default | rg -o 'Task id=(.*) sent' -r '$1'\n          )\" >> $GITHUB_OUTPUT",
           "message":"Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".",
           "metadata":{
              "category":"security",
              "confidence":"HIGH",
              "cwe":[
                 "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
              ],
              "cwe2021-top25":true,
              "cwe2022-top25":true,
              "impact":"HIGH",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"HIGH",
              "owasp":[
                 "A01:2017 - Injection",
                 "A03:2021 - Injection"
              ],
              "references":[
                 "https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#understanding-the-risk-of-script-injections",
                 "https://securitylab.github.com/research/github-actions-untrusted-input/"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":13162,
                    "rule_id":"v8UjQj",
                    "rv_id":111119,
                    "url":"https://semgrep.dev/playground/r/jQTgyDN/yaml.github-actions.security.run-shell-injection.run-shell-injection",
                    "version_id":"jQTgyDN"
                 }
              },
              "shortlink":"https://sg.run/pkzk",
              "source":"https://semgrep.dev/r/yaml.github-actions.security.run-shell-injection.run-shell-injection",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "github-actions"
              ],
              "vulnerability_class":[
                 "Command Injection"
              ]
           },
           "metavars":{
              "$SHELL":{
                 "abstract_content":"\n          echo \"TASK_ID=$(\n            clearml-task --project 'Github CICD Video' --name cicd_test --branch ${{ github.head_ref }} --script task.py --requirements requirements.txt --skip-task-init --queue default | rg -o 'Task id=(.*) sent' -r '$1'\n          )\" >> $GITHUB_OUTPUT\n",
                 "end":{
                    "col":32,
                    "line":71,
                    "offset":2422
                 },
                 "start":{
                    "col":15,
                    "line":68,
                    "offset":2141
                 }
              }
           },
           "severity":"ERROR",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"examples/cicd/run_clearml_checks.yml",
        "start":{
           "col":9,
           "line":68,
           "offset":2135
        }
     },
     {
        "check_id":"python.lang.security.audit.dangerous-subprocess-use-tainted-env-args.dangerous-subprocess-use-tainted-env-args",
        "end":{
           "col":33,
           "line":84,
           "offset":3437
        },
        "extra":{
           "dataflow_trace":{
              "intermediate_vars":[
                 {
                    "content":"args",
                    "location":{
                       "end":{
                          "col":9,
                          "line":45,
                          "offset":1521
                       },
                       "path":"examples/distributed/subprocess_example.py",
                       "start":{
                          "col":5,
                          "line":45,
                          "offset":1517
                       }
                    }
                 },
                 {
                    "content":"cmd",
                    "location":{
                       "end":{
                          "col":12,
                          "line":77,
                          "offset":3103
                       },
                       "path":"examples/distributed/subprocess_example.py",
                       "start":{
                          "col":9,
                          "line":77,
                          "offset":3100
                       }
                    }
                 }
              ],
              "taint_sink":[
                 "CliLoc",
                 [
                    {
                       "end":{
                          "col":33,
                          "line":84,
                          "offset":3437
                       },
                       "path":"examples/distributed/subprocess_example.py",
                       "start":{
                          "col":30,
                          "line":84,
                          "offset":3434
                       }
                    },
                    "cmd"
                 ]
              ],
              "taint_source":[
                 "CliLoc",
                 [
                    {
                       "end":{
                          "col":31,
                          "line":45,
                          "offset":1543
                       },
                       "path":"examples/distributed/subprocess_example.py",
                       "start":{
                          "col":5,
                          "line":45,
                          "offset":1517
                       }
                    },
                    "args = parser.parse_args()"
                 ]
              ]
           },
           "engine_kind":"OSS",
           "fingerprint":"76ce026544db1009f11417cc9cce992f20c3ffb0c07d0e024f0bd28fb168593688cfe4b2bb682b60b31422b09a12a1a4abcecc673a07c8a57c4513936e999d3b_0",
           "is_ignored":false,
           "lines":"        p = subprocess.Popen(cmd, cwd=os.getcwd())",
           "message":"Detected subprocess function 'Popen' with user controlled data. A malicious actor could leverage this to perform command injection. You may consider using 'shlex.escape()'.",
           "metadata":{
              "asvs":{
                 "control_id":"5.3.8 OS Command Injection",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
                 "section":"V5: Validation, Sanitization and Encoding Verification Requirements",
                 "version":"4"
              },
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
              ],
              "cwe2021-top25":true,
              "cwe2022-top25":true,
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"MEDIUM",
              "owasp":[
                 "A01:2017 - Injection",
                 "A03:2021 - Injection"
              ],
              "references":[
                 "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
                 "https://docs.python.org/3/library/subprocess.html",
                 "https://docs.python.org/3/library/shlex.html",
                 "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":27262,
                    "rule_id":"AbUgrZ",
                    "rv_id":110379,
                    "url":"https://semgrep.dev/playground/r/PkTJd5l/python.lang.security.audit.dangerous-subprocess-use-tainted-env-args.dangerous-subprocess-use-tainted-env-args",
                    "version_id":"PkTJd5l"
                 }
              },
              "shortlink":"https://sg.run/pLGg",
              "source":"https://semgrep.dev/r/python.lang.security.audit.dangerous-subprocess-use-tainted-env-args.dangerous-subprocess-use-tainted-env-args",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Command Injection"
              ]
           },
           "metavars":{
              "$ARGS":{
                 "abstract_content":"args",
                 "end":{
                    "col":9,
                    "line":45,
                    "offset":1521
                 },
                 "start":{
                    "col":5,
                    "line":45,
                    "offset":1517
                 }
              },
              "$CMD":{
                 "abstract_content":"cmd",
                 "end":{
                    "col":33,
                    "line":84,
                    "offset":3437
                 },
                 "start":{
                    "col":30,
                    "line":84,
                    "offset":3434
                 }
              },
              "$FUNC":{
                 "abstract_content":"Popen",
                 "end":{
                    "col":29,
                    "line":84,
                    "offset":3433
                 },
                 "start":{
                    "col":24,
                    "line":84,
                    "offset":3428
                 }
              },
              "$PARSER":{
                 "abstract_content":"parser",
                 "end":{
                    "col":18,
                    "line":45,
                    "offset":1530
                 },
                 "propagated_value":{
                    "svalue_abstract_content":"ArgumentParser()",
                    "svalue_end":{
                       "col":30,
                       "line":36,
                       "offset":931
                    },
                    "svalue_start":{
                       "col":14,
                       "line":36,
                       "offset":915
                    }
                 },
                 "start":{
                    "col":12,
                    "line":45,
                    "offset":1524
                 }
              }
           },
           "severity":"ERROR",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"examples/distributed/subprocess_example.py",
        "start":{
           "col":30,
           "line":84,
           "offset":3434
        }
     },
     {
        "check_id":"python.lang.security.audit.dangerous-subprocess-use-tainted-env-args.dangerous-subprocess-use-tainted-env-args",
        "end":{
           "col":37,
           "line":184,
           "offset":6525
        },
        "extra":{
           "dataflow_trace":{
              "intermediate_vars":[
                 {
                    "content":"args",
                    "location":{
                       "end":{
                          "col":9,
                          "line":148,
                          "offset":4857
                       },
                       "path":"examples/frameworks/pytorch/pytorch_distributed_example.py",
                       "start":{
                          "col":5,
                          "line":148,
                          "offset":4853
                       }
                    }
                 },
                 {
                    "content":"cmd",
                    "location":{
                       "end":{
                          "col":16,
                          "line":179,
                          "offset":6279
                       },
                       "path":"examples/frameworks/pytorch/pytorch_distributed_example.py",
                       "start":{
                          "col":13,
                          "line":179,
                          "offset":6276
                       }
                    }
                 },
                 {
                    "content":"cmd",
                    "location":{
                       "end":{
                          "col":16,
                          "line":179,
                          "offset":6279
                       },
                       "path":"examples/frameworks/pytorch/pytorch_distributed_example.py",
                       "start":{
                          "col":13,
                          "line":179,
                          "offset":6276
                       }
                    }
                 }
              ],
              "taint_sink":[
                 "CliLoc",
                 [
                    {
                       "end":{
                          "col":37,
                          "line":184,
                          "offset":6525
                       },
                       "path":"examples/frameworks/pytorch/pytorch_distributed_example.py",
                       "start":{
                          "col":34,
                          "line":184,
                          "offset":6522
                       }
                    },
                    "cmd"
                 ]
              ],
              "taint_source":[
                 "CliLoc",
                 [
                    {
                       "end":{
                          "col":31,
                          "line":148,
                          "offset":4879
                       },
                       "path":"examples/frameworks/pytorch/pytorch_distributed_example.py",
                       "start":{
                          "col":5,
                          "line":148,
                          "offset":4853
                       }
                    },
                    "args = parser.parse_args()"
                 ]
              ]
           },
           "engine_kind":"OSS",
           "fingerprint":"21edeeeb2feececac2a79c446c5bec755693404824c2c686cdc0899d0dedade9a81cda98a07994eb57bf7650a44a250a16afd03de0c1ecc9e7ef18aa5541a4c3_0",
           "is_ignored":false,
           "lines":"            p = subprocess.Popen(cmd, cwd=os.getcwd(), pass_fds=[], close_fds=True)",
           "message":"Detected subprocess function 'Popen' with user controlled data. A malicious actor could leverage this to perform command injection. You may consider using 'shlex.escape()'.",
           "metadata":{
              "asvs":{
                 "control_id":"5.3.8 OS Command Injection",
                 "control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
                 "section":"V5: Validation, Sanitization and Encoding Verification Requirements",
                 "version":"4"
              },
              "category":"security",
              "confidence":"MEDIUM",
              "cwe":[
                 "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
              ],
              "cwe2021-top25":true,
              "cwe2022-top25":true,
              "impact":"MEDIUM",
              "license":"Commons Clause License Condition v1.0[LGPL-2.1-only]",
              "likelihood":"MEDIUM",
              "owasp":[
                 "A01:2017 - Injection",
                 "A03:2021 - Injection"
              ],
              "references":[
                 "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
                 "https://docs.python.org/3/library/subprocess.html",
                 "https://docs.python.org/3/library/shlex.html",
                 "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
              ],
              "semgrep.dev":{
                 "rule":{
                    "origin":"community",
                    "r_id":27262,
                    "rule_id":"AbUgrZ",
                    "rv_id":110379,
                    "url":"https://semgrep.dev/playground/r/PkTJd5l/python.lang.security.audit.dangerous-subprocess-use-tainted-env-args.dangerous-subprocess-use-tainted-env-args",
                    "version_id":"PkTJd5l"
                 }
              },
              "shortlink":"https://sg.run/pLGg",
              "source":"https://semgrep.dev/r/python.lang.security.audit.dangerous-subprocess-use-tainted-env-args.dangerous-subprocess-use-tainted-env-args",
              "subcategory":[
                 "vuln"
              ],
              "technology":[
                 "python"
              ],
              "vulnerability_class":[
                 "Command Injection"
              ]
           },
           "metavars":{
              "$ARGS":{
                 "abstract_content":"args",
                 "end":{
                    "col":9,
                    "line":148,
                    "offset":4857
                 },
                 "start":{
                    "col":5,
                    "line":148,
                    "offset":4853
                 }
              },
              "$CMD":{
                 "abstract_content":"cmd",
                 "end":{
                    "col":37,
                    "line":184,
                    "offset":6525
                 },
                 "start":{
                    "col":34,
                    "line":184,
                    "offset":6522
                 }
              },
              "$FUNC":{
                 "abstract_content":"Popen",
                 "end":{
                    "col":33,
                    "line":184,
                    "offset":6521
                 },
                 "start":{
                    "col":28,
                    "line":184,
                    "offset":6516
                 }
              },
              "$PARSER":{
                 "abstract_content":"parser",
                 "end":{
                    "col":18,
                    "line":148,
                    "offset":4866
                 },
                 "propagated_value":{
                    "svalue_abstract_content":"ArgumentParser()",
                    "svalue_end":{
                       "col":30,
                       "line":142,
                       "offset":4536
                    },
                    "svalue_start":{
                       "col":14,
                       "line":142,
                       "offset":4520
                    }
                 },
                 "start":{
                    "col":12,
                    "line":148,
                    "offset":4860
                 }
              }
           },
           "severity":"ERROR",
           "validation_state":"NO_VALIDATOR"
        },
        "path":"examples/frameworks/pytorch/pytorch_distributed_example.py",
        "start":{
           "col":34,
           "line":184,
           "offset":6522
        }
     }
  ],
  "skipped_rules":[

  ],
  "version":"1.72.0"
}