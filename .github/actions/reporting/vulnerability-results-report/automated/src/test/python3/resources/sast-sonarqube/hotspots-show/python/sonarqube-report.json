{
  "key": "AZAwa7wZ5GVDwooZre4W",
  "component": {
    "key": "H6060-Python-django:django/contrib/auth/hashers.py",
    "qualifier": "FIL",
    "name": "hashers.py",
    "longName": "django/contrib/auth/hashers.py",
    "path": "django/contrib/auth/hashers.py"
  },
  "project": {
    "key": "H6060-Python-django",
    "qualifier": "TRK",
    "name": "H6060-Python-django",
    "longName": "H6060-Python-django"
  },
  "rule": {
    "key": "python:S2068",
    "name": "Hard-coded credentials are security-sensitive",
    "securityCategory": "auth",
    "vulnerabilityProbability": "HIGH",
    "riskDescription": "<p>Because it is easy to extract strings from an application source code or binary, credentials should not be hard-coded. This is particularly true\nfor applications that are distributed or that are open-source.</p>\n<p>In the past, it has led to the following vulnerabilities:</p>\n<ul>\n  <li> <a href=\"http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13466\">CVE-2019-13466</a> </li>\n  <li> <a href=\"http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-15389\">CVE-2018-15389</a> </li>\n</ul>\n<p>Credentials should be stored outside of the code in a configuration file, a database, or a management service for secrets.</p>\n<p>This rule flags instances of hard-coded credentials used in database and LDAP connections. It looks for hard-coded credentials in connection\nstrings, and for variable names that match any of the patterns from the provided list.</p>\n<p>It’s recommended to customize the configuration of this rule with additional credential words such as \"oauthToken\", \"secret\", …​</p>\n",
    "vulnerabilityDescription": "<h2>Ask Yourself Whether</h2>\n<ul>\n  <li> Credentials allow access to a sensitive component like a database, a file storage, an API or a service. </li>\n  <li> Credentials are used in production environments. </li>\n  <li> Application re-distribution is required before updating the credentials. </li>\n</ul>\n<p>There is a risk if you answered yes to any of those questions.</p>\n<h2>Sensitive Code Example</h2>\n<pre>\nusername = 'admin'\npassword = 'admin' # Sensitive\nusernamePassword = 'user=admin&amp;password=admin' # Sensitive\n</pre>\n",
    "fixRecommendations": "<h2>Recommended Secure Coding Practices</h2>\n<ul>\n  <li> Store the credentials in a configuration file that is not pushed to the code repository. </li>\n  <li> Store the credentials in a database. </li>\n  <li> Use your cloud provider’s service for managing secrets. </li>\n  <li> If a password has been disclosed through the source code: change it. </li>\n</ul>\n<h2>Compliant Solution</h2>\n<pre>\nimport os\n\nusername = os.getenv(\"username\") # Compliant\npassword = os.getenv(\"password\") # Compliant\nusernamePassword = 'user=%s&amp;password=%s' % (username, password) # Compliant{code}\n</pre>\n<h2>See</h2>\n<ul>\n  <li> <a href=\"https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/\">OWASP Top 10 2021 Category A7</a> - Identification and\n  Authentication Failures </li>\n  <li> <a href=\"https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication\">OWASP Top 10 2017 Category A2</a> - Broken Authentication\n  </li>\n  <li> <a href=\"https://cwe.mitre.org/data/definitions/798\">MITRE, CWE-798</a> - Use of Hard-coded Credentials </li>\n  <li> <a href=\"https://cwe.mitre.org/data/definitions/259\">MITRE, CWE-259</a> - Use of Hard-coded Password </li>\n  <li> <a href=\"https://www.sans.org/top25-software-errors/#cat3\">SANS Top 25</a> - Porous Defenses </li>\n  <li> Derived from FindSecBugs rule <a href=\"https://h3xstream.github.io/find-sec-bugs/bugs.htm#HARD_CODE_PASSWORD\">Hard Coded Password</a> </li>\n</ul>"
  },
  "status": "TO_REVIEW",
  "line": 18,
  "hash": "0351b869d976c301ba9604ca4e79ce69",
  "message": "\"password\" detected here, review this potentially hard-coded credential.",
  "author": "erik@erik.io",
  "creationDate": "2013-06-18T18:02:00+0000",
  "updateDate": "2024-06-19T12:06:44+0000",
  "textRange": {
    "startLine": 18,
    "endLine": 18,
    "startOffset": 0,
    "endOffset": 30
  },
  "changelog": [],
  "comment": [],
  "users": [],
  "canChangeStatus": true,
  "flows": [],
  "messageFormattings": []
}