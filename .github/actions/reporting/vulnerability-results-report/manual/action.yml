name: Manual Vulnerability Results Report Action
description: Create a CSV report for all submitted vulnerabilities detected
author: sean.smith [B00158319@mytudublin.ie]

inputs:
  nvd-api-key:
    description: API Key to access the NVD API
    type: string
    required: true

  opencve-username:
    description: Username to query OpenCVE API
    type: string
    required: true

  opencve-password:
    description: Password to query OpenCVE API
    type: string
    required: true

  security-tool-name:
    description: Name of the security tool
    type: string
    required: true

  security-tool-csv-result-filename:
    description: Name of the security tool CSV result filename
    type: string
    required: false
    default: manual-vulnerability-result.csv

  cve-ids:
    description: Comma-separated list of CVE IDs
    type: string
    required: false

  cwe-ids:
    description: Comma-separated list of CWE IDs
    type: string
    required: false

  artifact-name:
    description: Name of the artifact to upload
    type: string
    required: false
    default: manual-vulnerability-results-report

  include-unit-tests:
    description: Run unit tests in the action (for testing use only)
    type: string # See https://github.com/actions/runner/issues/2238
    required: false
    default: false

runs:
    using: composite
    steps:
      # Workaround due to https://github.com/actions/runner/issues/924
      - name: Set Environment Variables
        shell: bash
        run: |
          echo "CVE_IDS=${{ inputs.cve-ids || '' }}" >> $GITHUB_ENV
          echo "CWE_IDS=${{ inputs.cwe-ids || '' }}" >> $GITHUB_ENV

      - name: Install Python 3.12
        uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.12

      - name: Install Python Dependencies
        shell: bash
        working-directory: ${{ github.action_path }}
        run: pip install -r requirements-dev.txt

      - name: Run Unit Tests
        if: ${{ inputs.include-unit-tests == 'true' }}
        shell: bash
        working-directory: ${{ github.action_path }}
        run: ./run_unit_tests.sh

      - name: Create Vulnerability Results Report
        shell: bash
        working-directory: ${{ github.action_path }}
        run: >
          python src/main/python3/manual_vulnerability_results_report.py
          --nvd-api-key ${{ inputs.nvd-api-key }}
          --opencve-username ${{ inputs.opencve-username }}
          --opencve-password ${{ inputs.opencve-password }}
          --security-tool-name "${{ inputs.security-tool-name }}"
          --security-tool-csv-result-filename ${{ inputs.security-tool-csv-result-filename }}
          --cve-ids ${{ env.CVE_IDS }}
          --cwe-ids ${{ env.CWE_IDS }}

      # See https://github.com/actions/runner/issues/2185
      - name: Set GitHub Action Path
        shell: bash
        run: |
          GITHUB_ACTION_NEW_PATH=$(python -c "print('${{github.action_path}}'.replace('./.', '.'))")
          echo "GITHUB_ACTION_NEW_PATH=$GITHUB_ACTION_NEW_PATH" >> $GITHUB_ENV

      - name: Upload Vulnerability Results Report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ env.GITHUB_ACTION_NEW_PATH }}/src/main/python3/*.csv
          if-no-files-found: error
