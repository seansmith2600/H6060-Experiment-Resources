name: Automated Vulnerability Results Report Action
description: Parse SCA and SAST JSON reports and create a CSV report for all parsed vulnerabilities detected
author: sean.smith [B00158319@mytudublin.ie]

inputs:
  nvd-api-key:
    description: API Key to access the NVD API
    type: string
    required: true

  opencve-username:
    description: Username to query OpenCVE API
    type: string
    required: true

  opencve-password:
    description: Password to query OpenCVE API
    type: string
    required: true

  github-token:
    description: Token to access the GitHub API
    type: string
    required: true

  github-organisation:
    description: Name of the GitHub organisation
    type: string
    required: false

  github-repository:
    description: Name of the GitHub repository
    type: string
    required: false

  sonarqube-url:
    description: URL of the SonarQube server
    type: string
    required: false

  sonarqube-token:
    description: Token to access the SonarQube server
    type: string
    required: false

  sonarqube-project-key:
    description: Project key of the SonarQube project
    type: string
    required: false

  sast-codeql-csv-result-filename:
    description: Name of CodeQL CSV result filename
    type: string
    required: false
    default: sast-codeql-vulnerability-result.csv

  sast-horusec-report-filename:
    description: Name of Horusec report filename
    type: string
    required: false

  sast-horusec-csv-result-filename:
    description: Name of Horusec CSV result filename
    type: string
    required: false
    default: sast-horusec-vulnerability-result.csv

  sast-semgrep-report-filename:
    description: Name of Semgrep report filename
    type: string
    required: false

  sast-semgrep-csv-result-filename:
    description: Name of Semgrep CSV result filename
    type: string
    required: false
    default: sast-semgrep-vulnerability-result.csv

  sast-snyk-code-report-filename:
    description: Name of Snyk Code report filename
    type: string
    required: false

  sast-snyk-code-csv-result-filename:
    description: Name of Snyk Code CSV result filename
    type: string
    required: false
    default: sast-snyk-code-vulnerability-result.csv

  sast-sonarqube-csv-result-filename:
    description: Name of SonarQube CSV result filename
    type: string
    required: false
    default: sast-sonarqube-vulnerability-result.csv

  sca-dependabot-csv-result-filename:
    description: Name of Dependabot CSV result filename
    type: string
    required: false
    default: sca-dependabot-vulnerability-result.csv

  sca-grype-report-filename:
    description: Name of Grype report filename
    type: string
    required: false

  sca-grype-csv-result-filename:
    description: Name of Grype CSV result filename
    type: string
    required: false
    default: sca-grype-vulnerability-result.csv

  sca-snyk-report-filename:
    description: Name of Snyk report filename
    type: string
    required: false

  sca-snyk-csv-result-filename:
    description: Name of Snyk CSV result filename
    type: string
    required: false
    default: sca-snyk-vulnerability-result.csv

  sca-owasp-dependency-check-report-filename:
    description: Name of OWASP Dependency Check report filename
    type: string
    required: false

  sca-owasp-dependency-check-csv-result-filename:
    description: Name of OWASP Dependency Check CSV result filename
    type: string
    required: false
    default: sca-owasp-dependency-check-vulnerability-result.csv

  artifact-name:
    description: Name of the artifact to upload
    type: string
    required: false
    default: automated-vulnerability-results-report

  include-unit-tests:
    description: Run unit tests in the action (for testing use only)
    type: string # See https://github.com/actions/runner/issues/2238
    required: false
    default: false

runs:
    using: composite
    steps:
      # Workaround due to https://github.com/actions/runner/issues/924
      - name: Set Environment Variables
        shell: bash
        run: |
          echo "GITHUB_ORGANISATION=${{ inputs.github-organisation || '' }}" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY=${{ inputs.github-repository || '' }}" >> $GITHUB_ENV
          echo "SONARQUBE_URL=${{ inputs.sonarqube-url || '' }}" >> $GITHUB_ENV
          echo "SONARQUBE_TOKEN=${{ inputs.sonarqube-token || '' }}" >> $GITHUB_ENV
          echo "SONARQUBE_PROJECT_KEY=${{ inputs.sonarqube-project-key || '' }}" >> $GITHUB_ENV
          echo "SAST_HORUSEC_REPORT_FILENAME=${{ inputs.sast-horusec-report-filename || '' }}" >> $GITHUB_ENV
          echo "SAST_SEMGREP_REPORT_FILENAME=${{ inputs.sast-semgrep-report-filename || '' }}" >> $GITHUB_ENV
          echo "SAST_SNYK_CODE_REPORT_FILENAME=${{ inputs.sast-snyk-code-report-filename || '' }}" >> $GITHUB_ENV
          echo "SCA_GRYPE_REPORT_FILENAME=${{ inputs.sca-grype-report-filename || '' }}" >> $GITHUB_ENV
          echo "SCA_SNYK_REPORT_FILENAME=${{ inputs.sca-snyk-report-filename || '' }}" >> $GITHUB_ENV
          echo "SCA_OWASP_DEPENDENCY_CHECK_REPORT_FILENAME=${{ inputs.sca-owasp-dependency-check-report-filename || '' }}" >> $GITHUB_ENV

      - name: Install Python 3.12
        uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.12

      - name: Install Python Dependencies
        shell: bash
        working-directory: ${{ github.action_path }}
        run: pip install -r requirements-dev.txt

      - name: Run Unit Tests
        if: ${{ inputs.include-unit-tests == 'true' }}
        shell: bash
        working-directory: ${{ github.action_path }}
        run: ./run_unit_tests.sh

      - name: Create Vulnerability Results Report
        shell: bash
        working-directory: ${{ github.action_path }}
        run: >
          python src/main/python3/automated_vulnerability_results_report.py
          --nvd-api-key ${{ inputs.nvd-api-key }}
          --opencve-username ${{ inputs.opencve-username }}
          --opencve-password ${{ inputs.opencve-password }}
          --github-token ${{ inputs.github-token }}
          --github-organisation ${{ env.GITHUB_ORGANISATION }}
          --github-repository ${{ env.GITHUB_REPOSITORY }}
          --sonarqube-url ${{ env.SONARQUBE_URL }}
          --sonarqube-token ${{ env.SONARQUBE_TOKEN }}
          --sonarqube-project-key ${{ env.SONARQUBE_PROJECT_KEY }}
          --sast-codeql-csv-result-filename ${{ inputs.sast-codeql-csv-result-filename }}
          --sast-horusec-report-filename ${{ env.SAST_HORUSEC_REPORT_FILENAME }}
          --sast-horusec-csv-result-filename ${{ inputs.sast-horusec-csv-result-filename }}          
          --sast-semgrep-report-filename ${{ env.SAST_SEMGREP_REPORT_FILENAME }}
          --sast-semgrep-csv-result-filename ${{ inputs.sast-semgrep-csv-result-filename }}
          --sast-snyk-code-report-filename ${{ env.SAST_SNYK_CODE_REPORT_FILENAME }}
          --sast-snyk-code-csv-result-filename ${{ inputs.sast-snyk-code-csv-result-filename }}
          --sast-sonarqube-csv-result-filename ${{ inputs.sast-sonarqube-csv-result-filename }}
          --sca-dependabot-csv-result-filename ${{ inputs.sca-dependabot-csv-result-filename }}
          --sca-grype-report-filename ${{ env.SCA_GRYPE_REPORT_FILENAME }}
          --sca-grype-csv-result-filename ${{ inputs.sca-grype-csv-result-filename }}
          --sca-snyk-report-filename ${{ env.SCA_SNYK_REPORT_FILENAME }}
          --sca-snyk-csv-result-filename ${{ inputs.sca-snyk-csv-result-filename }}
          --sca-owasp-dependency-check-report-filename ${{ env.SCA_OWASP_DEPENDENCY_CHECK_REPORT_FILENAME }}
          --sca-owasp-dependency-check-csv-result-filename ${{ inputs.sca-owasp-dependency-check-csv-result-filename }}

      # See https://github.com/actions/runner/issues/2185
      - name: Set GitHub Action Path
        shell: bash
        run: |
          GITHUB_ACTION_NEW_PATH=$(python -c "print('${{github.action_path}}'.replace('./.', '.'))")
          echo "GITHUB_ACTION_NEW_PATH=$GITHUB_ACTION_NEW_PATH" >> $GITHUB_ENV

      - name: Upload Vulnerability Results Report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ env.GITHUB_ACTION_NEW_PATH }}/src/main/python3/*.csv
          if-no-files-found: error
