{
  "key": "AZCNuWaOejjv-fffWJyJ",
  "component": {
    "key": "test-javascript:lib/main/build-site.js",
    "qualifier": "FIL",
    "name": "build-site.js",
    "longName": "lib/main/build-site.js",
    "path": "lib/main/build-site.js"
  },
  "project": {
    "key": "test-javascript",
    "qualifier": "TRK",
    "name": "test-javascript",
    "longName": "test-javascript"
  },
  "rule": {
    "key": "javascript:S5852",
    "name": "Using slow regular expressions is security-sensitive",
    "securityCategory": "dos",
    "vulnerabilityProbability": "MEDIUM",
    "riskDescription": "<p>Most of the regular expression engines use backtracking to try all possible execution paths of the regular expression when evaluating an input, in\nsome cases it can cause performance issues, called <strong>catastrophic backtracking</strong> situations. In the worst case, the complexity of the\nregular expression is exponential in the size of the input, this means that a small carefully-crafted input (like 20 chars) can trigger catastrophic\nbacktracking and cause a denial of service of the application. Super-linear regex complexity can lead to the same impact too with, in this case, a\nlarge carefully-crafted input (thousands chars).</p>\n<p>This rule determines the runtime complexity of a regular expression and informs you if it is not linear.</p>\n",
    "vulnerabilityDescription": "<h2>Ask Yourself Whether</h2>\n<ul>\n  <li> The input is user-controlled. </li>\n  <li> The input size is not restricted to a small number of characters. </li>\n  <li> There is no timeout in place to limit the regex evaluation time. </li>\n</ul>\n<p>There is a risk if you answered yes to any of those questions.</p>\n<h2>Sensitive Code Example</h2>\n<p>The regex evaluation will never end:</p>\n<pre>\n/(a+)+$/.test(\n\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"+\n\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"+\n\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"+\n\"aaaaaaaaaaaaaaa!\"\n); // Sensitive\n</pre>\n",
    "fixRecommendations": "No fix"
  },
  "status": "TO_REVIEW",
  "line": 178,
  "hash": "5626ea6527b58496818c65d6152ed5de",
  "message": "Make sure the regex used here, which is vulnerable to super-linear runtime due to backtracking, cannot lead to denial of service.",
  "creationDate": "2024-07-07T15:02:17+0000",
  "updateDate": "2024-07-07T15:02:17+0000",
  "textRange": {
    "startLine": 178,
    "endLine": 178,
    "startOffset": 13,
    "endOffset": 34
  },
  "changelog": [],
  "comment": [],
  "users": [],
  "canChangeStatus": true,
  "flows": [],
  "messageFormattings": []
}