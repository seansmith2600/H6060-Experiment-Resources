{
  "version": "v2.8.0",
  "id": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
  "repositoryID": "00000000-0000-0000-0000-000000000000",
  "repositoryName": "",
  "workspaceID": "00000000-0000-0000-0000-000000000000",
  "workspaceName": "",
  "status": "success",
  "errors": "",
  "createdAt": "2024-04-26T16:10:59.361355281Z",
  "finishedAt": "2024-04-26T16:11:10.99666784Z",
  "analysisVulnerabilities": [
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996669032Z",
      "vulnerabilities": {
        "vulnerabilityID": "f215cb0b-d113-4e49-a16e-b691020d50ae",
        "line": "52",
        "column": "50",
        "confidence": "MEDIUM",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioSslTcpChannelTestCase.java",
        "code": "private static final String DEFAULT_KEY_STORE_PASSWORD = \"jboss-remoting-test\";",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "0ecda4d5854cb5e8d0cde17dd7ee561a2db4a38558d0b9efdcb4ac1db938dcac",
        "deprecatedHashes": [
          "fa96eda69607db22c847a029891ee68a32e362e95d4a57361ce775ce9d077433",
          "ac195ed8d1637c1bef2c381406f62513366f2a39c42fc9b225aed23b9292cc9c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996672489Z",
      "vulnerabilities": {
        "vulnerabilityID": "d7378d12-74a1-4cea-adde-4402069eefe4",
        "line": "68",
        "column": "50",
        "confidence": "MEDIUM",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "private static final String DEFAULT_KEY_STORE_PASSWORD = \"apiTest\";",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "a6b70d82c704e486476711d0a5a4f69af2beb22a80e1dbd36aaca80eb40b2359",
        "deprecatedHashes": [
          "ff45b7c8fbaef2852fb1bd7aaf25ce5b262780175cc3353b044ef8fbc26d0871",
          "05bbe9c677eda5edc5b39424bf1cf814c451c8072e338e56c48b2d913cf7ee46"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996673361Z",
      "vulnerabilities": {
        "vulnerabilityID": "42501687-6ecc-458d-9bec-1fb4b244f7b6",
        "line": "54",
        "column": "50",
        "confidence": "MEDIUM",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioSslBufferExpansionTcpConnectionTestCase.java",
        "code": "private static final String DEFAULT_KEY_STORE_PASSWORD = \"jboss-remoting-test\";",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "7311087424fcd1f42ce4cb3d2b19a23b2605c451895206481f29510d5a1937ee",
        "deprecatedHashes": [
          "b9d4816f134f6d04534197ab2807be871ab1039eaf15c1e0ad9234c8470c1e23",
          "a1079b851c7328e844e3cba415a3a6317541a34ea3a92dffc61b8560e398ca80"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996674112Z",
      "vulnerabilities": {
        "vulnerabilityID": "d0c6739a-6ca2-4002-a5da-538276efba27",
        "line": "52",
        "column": "50",
        "confidence": "MEDIUM",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioSslTcpConnectionTestCase.java",
        "code": "private static final String DEFAULT_KEY_STORE_PASSWORD = \"jboss-remoting-test\";",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "e45cf23c7a79d532d4f342c781df5c9d3bea7d186e850dfe8882c3e8eab8ec44",
        "deprecatedHashes": [
          "1da4933c77a84e7b30506d4a886fde11ef8c6ebce7688135f2e71eddb2063e3b",
          "b5fb844acb9ae93103021cbd783b9f5d7cbba28e38dde51420d07fc87c3038b9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996674923Z",
      "vulnerabilities": {
        "vulnerabilityID": "26eda67f-1d94-4e32-930d-22a4336b95c8",
        "line": "57",
        "column": "50",
        "confidence": "MEDIUM",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioSslRandomlyTimedBufferExpansionTcpConnectionTestCase.java",
        "code": "private static final String DEFAULT_KEY_STORE_PASSWORD = \"jboss-remoting-test\";",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "08148143d49ac3d675b608b1a98f58a5f24eeded0fd3a0706d4d50eae63a95a7",
        "deprecatedHashes": [
          "cc53daeb59420cfeca2e707dda1404c4b46300bd112a56a5493c59b802003c0b",
          "5a6a74a97ee9fcf8c030d572b0d9037202708db5d57864df7ef35ff72abd4e91"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996675655Z",
      "vulnerabilities": {
        "vulnerabilityID": "2a4f2adb-2693-4ec4-91df-3fddb3f16502",
        "line": "54",
        "column": "50",
        "confidence": "MEDIUM",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioSslBufferExpansionTcpChannelTestCase.java",
        "code": "private static final String DEFAULT_KEY_STORE_PASSWORD = \"jboss-remoting-test\";",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "57c177597e7f6a315404c35aa87f72bb6ed6fcdda52939d8e59f13aa3a9e435c",
        "deprecatedHashes": [
          "4cb207b691c8089ec97cd219bab37300f6daaceda07afc747c4fd3a1f1a75678",
          "e0908dbcc50d542bc69bb8209c330af7ba771a427403a24695ac5ae5672bd300"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996676396Z",
      "vulnerabilities": {
        "vulnerabilityID": "828058f1-0429-436c-9f5f-18bce706085f",
        "line": "55",
        "column": "50",
        "confidence": "MEDIUM",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioSslRandomlyTimedBufferExpansionTcpChannelTestCase.java",
        "code": "private static final String DEFAULT_KEY_STORE_PASSWORD = \"jboss-remoting-test\";",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "6e429be494fd3e0a47c96cc9bacc4c9ac5c406e9732b5fbf8fa84cb715822bd5",
        "deprecatedHashes": [
          "80b5521389480319431534938597a4ff8ba4eb420ef808df6a9ef4c0820c6b6a",
          "fbc9dc2209dea8c77c77f00e2c405f81b73bd344d6b472e7a7f0d83370c4972b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996677117Z",
      "vulnerabilities": {
        "vulnerabilityID": "26d8908d-6054-41ba-8eb4-63069dd213a9",
        "line": "69",
        "column": "50",
        "confidence": "MEDIUM",
        "file": "api/src/test/java/org/xnio/ssl/JsseXnioSslTestCase.java",
        "code": "private static final String DEFAULT_KEY_STORE_PASSWORD = \"apiTest\";",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "9e9a3bc5c46615f211ce6ee8428a5b19582104b045cf9b446c61d20e8d839207",
        "deprecatedHashes": [
          "445c4862b6ba8a12355b388dccf9034cbc20305cf5a779949f7e65b47a3eaea9",
          "68586cbe7926d76824df3489db22c2ff53717a8d946a8fd7e8dff8aa44328262"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996680193Z",
      "vulnerabilities": {
        "vulnerabilityID": "dbaea38c-7244-413b-ab97-fd0ddf56103a",
        "line": "66",
        "column": "29",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), sequence.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e26dc941a401c006ab0a049d6de93f708b7649f882328dc2e2bb7f519b8e1531",
        "deprecatedHashes": [
          "962d5999cdd6ad3fb2ae87487e78123b0d107178f3839d1f0a48616171378738",
          "bd401706b647a389e654512faaaeb7b89e009c2fed74cb8f0abcfff4310e9f44"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996680924Z",
      "vulnerabilities": {
        "vulnerabilityID": "dbb417ad-b15d-4da9-b5e8-a5d43bea8dc6",
        "line": "66",
        "column": "50",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), sequence.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e26dc941a401c006ab0a049d6de93f708b7649f882328dc2e2bb7f519b8e1531",
        "deprecatedHashes": [
          "962d5999cdd6ad3fb2ae87487e78123b0d107178f3839d1f0a48616171378738",
          "bd401706b647a389e654512faaaeb7b89e009c2fed74cb8f0abcfff4310e9f44"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996681686Z",
      "vulnerabilities": {
        "vulnerabilityID": "a5384356-89ec-4556-be1f-6214a43ffcbf",
        "line": "67",
        "column": "29",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), Sequence.empty().hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e482bbc4903c48f5ebae7abd2db437059a741b88ae4251b7552f554c766f602a",
        "deprecatedHashes": [
          "2ae8f566d337a866fde6e7217aa53897251765a88b095f278ef6cbcf8e6ab4e1",
          "a33a7e9cfd1fdcff38d535981f796fe5fd4cfacc05d37b8e5692c1ef6e335265"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996682417Z",
      "vulnerabilities": {
        "vulnerabilityID": "4756d37c-2072-4e5f-9ed1-7e142f68c403",
        "line": "67",
        "column": "58",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), Sequence.empty().hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e482bbc4903c48f5ebae7abd2db437059a741b88ae4251b7552f554c766f602a",
        "deprecatedHashes": [
          "2ae8f566d337a866fde6e7217aa53897251765a88b095f278ef6cbcf8e6ab4e1",
          "a33a7e9cfd1fdcff38d535981f796fe5fd4cfacc05d37b8e5692c1ef6e335265"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996683159Z",
      "vulnerabilities": {
        "vulnerabilityID": "839c05aa-402e-4ec5-a9fb-900c48a6c23b",
        "line": "109",
        "column": "29",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), sequence.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "fe7a02c5dd272de0a2e6ef54c2cc706a578df2860e7d28c1c8872065094be2f9",
        "deprecatedHashes": [
          "c4c95e553f83b65682f9893c7530fd47dcd00a09de44a0155b647428a4184004",
          "83a7dc0220465641f6f8af430cf8e8c9f7c022984e8bc4ae77b0f90dd37dbd04"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99668389Z",
      "vulnerabilities": {
        "vulnerabilityID": "91a2f7d8-160b-4762-8437-abaca41af8ed",
        "line": "109",
        "column": "50",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), sequence.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "fe7a02c5dd272de0a2e6ef54c2cc706a578df2860e7d28c1c8872065094be2f9",
        "deprecatedHashes": [
          "c4c95e553f83b65682f9893c7530fd47dcd00a09de44a0155b647428a4184004",
          "83a7dc0220465641f6f8af430cf8e8c9f7c022984e8bc4ae77b0f90dd37dbd04"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996684672Z",
      "vulnerabilities": {
        "vulnerabilityID": "7a9aad2d-fa11-4cb0-879f-444249d3b2ff",
        "line": "110",
        "column": "29",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), Sequence.of(\"single\").hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "1c51ccf496a55f0dbf7422259a7ca10e77f3dac7837f5e490400c4ca1b31e6ca",
        "deprecatedHashes": [
          "885d1a4817ea4b9be7e5a8776c96cfc5265ffb6ceea9d9bb59aa1add906c84ba",
          "d0f2901731db4196095716ed61e7f1b0bf13824b6592d3bac3a319e2bb5cdba7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996685403Z",
      "vulnerabilities": {
        "vulnerabilityID": "2a68005f-f614-4ab0-8829-a83301439b4e",
        "line": "110",
        "column": "63",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), Sequence.of(\"single\").hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "1c51ccf496a55f0dbf7422259a7ca10e77f3dac7837f5e490400c4ca1b31e6ca",
        "deprecatedHashes": [
          "885d1a4817ea4b9be7e5a8776c96cfc5265ffb6ceea9d9bb59aa1add906c84ba",
          "d0f2901731db4196095716ed61e7f1b0bf13824b6592d3bac3a319e2bb5cdba7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996686134Z",
      "vulnerabilities": {
        "vulnerabilityID": "95396fe4-137c-412b-9daa-0ca69b8a82f6",
        "line": "170",
        "column": "29",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), sequence.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e56ce77a36469944db95cca769e1454fac25e272f47449d63f3b20512c77efe8",
        "deprecatedHashes": [
          "b2e335b7435afcc1bd2a649775ab393ba06bfb1da79603204ae9288b158c5ac9",
          "42e073ea064753780e9ce630bad8f9b70203aebddbce5a8e554261bff9f7b876"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996686866Z",
      "vulnerabilities": {
        "vulnerabilityID": "fe7abeca-a5e6-4c2f-b8e2-3eab31182754",
        "line": "170",
        "column": "50",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), sequence.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e56ce77a36469944db95cca769e1454fac25e272f47449d63f3b20512c77efe8",
        "deprecatedHashes": [
          "b2e335b7435afcc1bd2a649775ab393ba06bfb1da79603204ae9288b158c5ac9",
          "42e073ea064753780e9ce630bad8f9b70203aebddbce5a8e554261bff9f7b876"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996687607Z",
      "vulnerabilities": {
        "vulnerabilityID": "a14bbd1f-2a8f-4e48-9b4a-66eaebb5d0ae",
        "line": "171",
        "column": "29",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), Sequence.of(\"a\", \"b\", \"c\", \"d\").hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f151f95d5c2e3af414e73eb297d705320815f248ad419a487e95e0d3269f245f",
        "deprecatedHashes": [
          "e7077710c6ec6f41bab3a245ff5ff994edf2127a3296542b01548fbfae36dc01",
          "966fb718f770324ad030003eff5c443f02e39529056a86d26d9f52ade1844c93"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996688338Z",
      "vulnerabilities": {
        "vulnerabilityID": "a179db11-93ae-44a4-bd64-a905714dcbff",
        "line": "171",
        "column": "73",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/SequenceTestCase.java",
        "code": "assertEquals(sequence.hashCode(), Sequence.of(\"a\", \"b\", \"c\", \"d\").hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f151f95d5c2e3af414e73eb297d705320815f248ad419a487e95e0d3269f245f",
        "deprecatedHashes": [
          "e7077710c6ec6f41bab3a245ff5ff994edf2127a3296542b01548fbfae36dc01",
          "966fb718f770324ad030003eff5c443f02e39529056a86d26d9f52ade1844c93"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996689801Z",
      "vulnerabilities": {
        "vulnerabilityID": "bb999b06-7212-4df8-ab7d-4f2b8ad3b171",
        "line": "161",
        "column": "17",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return v \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "53d8ef8b94dfdb7152516fa5f67d4253bc724a47ee56dd70faddd2be8d1d85b9",
        "deprecatedHashes": [
          "8a3cd8b53dfa6b935901253579fe69e735333a6ba1e05c4ca1fdaf6177fd0282",
          "3d18a4574cc5f0cc0d742505868d73fce2530bc3f034f2b825be763d0032be28"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996690593Z",
      "vulnerabilities": {
        "vulnerabilityID": "000696d0-d535-4ba9-a7dc-4bed7e16b810",
        "line": "171",
        "column": "17",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return v \u0026 0xffff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "19234384812f73462c17e74cb8b50fcb4d92b32352ccbfce19218358272d359b",
        "deprecatedHashes": [
          "3ffd6249be14346f550541479277e52c972f295b1cdb927ccd0a00e6ab3255fb",
          "aa97a33d95c2401a1cf152330d94d68c922143f0c479b18fb18d75553d7c063e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996691344Z",
      "vulnerabilities": {
        "vulnerabilityID": "9767e91b-a593-4919-8d65-41bff8b2acbc",
        "line": "181",
        "column": "17",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return v \u0026 0xffffffffL;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "52ed4c33c9078edb10651623528934ec3303062b33669ac9b8439dba362142b0",
        "deprecatedHashes": [
          "d851da4559ddfb1bf098e771ac2d1b0f6f74cc3d35646c0bbfff53f59630986d",
          "c236a34c5053ed8b3a544884e9a7777d1b237cfd981bb3988c49061715178b6e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996692076Z",
      "vulnerabilities": {
        "vulnerabilityID": "2aa8eddc-294e-4c64-b7ca-caa0bbff4a14",
        "line": "194",
        "column": "49",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (short) (b[off + 1] \u003c\u003c 8 | b[off] \u0026 0xff);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "52341a00801ec46afa41efb22ff4d68504c739086527d9ca8b3f3e6f442e0233",
        "deprecatedHashes": [
          "07f63760afc86fa0ebee8918be1c64fa46a320b9e6233059804ef7ee8b81efc6",
          "49b4fcc9d4d5fb5483337c56a1f7eca84a4f356fc5fafc1d847c946d2e0ed6f1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996692817Z",
      "vulnerabilities": {
        "vulnerabilityID": "ff799cf2-5b25-40d8-9fba-4b5283bb489e",
        "line": "205",
        "column": "49",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (short) (b[off] \u003c\u003c 8 | b[off + 1] \u0026 0xff);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "92e5e0ffc9b5fbd85ada23a8850d34f42c35ef4335c6a824cd22c005f896f3eb",
        "deprecatedHashes": [
          "de37119819ce95401fb763abc378e0f7657ccf2204711ff9bf33cc9eddf4c722",
          "5698f64dd27194b10507f842a38ad14d8da1a356188014d864106e2153b12be5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996693538Z",
      "vulnerabilities": {
        "vulnerabilityID": "d7104a9b-1359-4b1b-9000-8c80edb79842",
        "line": "216",
        "column": "48",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (char) (b[off + 1] \u003c\u003c 8 | b[off] \u0026 0xff);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "5b8638391e3e9099f10910049557fdae837af45900737921165ea07d3ba5f72e",
        "deprecatedHashes": [
          "953b226c3a732e6c88aae041d3e1f383b7d49128b6bf4eff312f696b9059bf9e",
          "852c7bce8b227986932103f6b86ba745dea12861f83b22a9bdd73501fa93f325"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996694269Z",
      "vulnerabilities": {
        "vulnerabilityID": "a1b5d3ec-c8a5-487d-b46e-0c21d9821624",
        "line": "227",
        "column": "48",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (char) (b[off] \u003c\u003c 8 | b[off + 1] \u0026 0xff);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "6164ea688f0c779fbd5b54c1423d053967d44688220914d334848871bfc8798b",
        "deprecatedHashes": [
          "9ca6fc9ead9a225daf439f171ba730ea252175b90fabfdfd2d719d9c1cd5f8db",
          "6139ca60db838802927c1791c4ca6d9f8e344a9eff48c4806a0bc0b92db53b6a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996694991Z",
      "vulnerabilities": {
        "vulnerabilityID": "5e004a2c-42b9-47c6-b582-b22debfb5bb4",
        "line": "238",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (b[off + 2] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ddb827597b3bfc31d868ea515f1b1ca1f7e58c5de06cdd09ee22f5d1603cbeb6",
        "deprecatedHashes": [
          "e0f0e8f97cbed05e37eb64761123e64659b329a3df90d1ad9e4c7d64801e43e0",
          "eae1c2d64ee56043ccc271e5c2ebe49976adb7754d54b235ebd70223f99e8c81"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996695722Z",
      "vulnerabilities": {
        "vulnerabilityID": "6131f989-ac4f-4af8-8247-eb5f197d3683",
        "line": "238",
        "column": "55",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (b[off + 2] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ddb827597b3bfc31d868ea515f1b1ca1f7e58c5de06cdd09ee22f5d1603cbeb6",
        "deprecatedHashes": [
          "e0f0e8f97cbed05e37eb64761123e64659b329a3df90d1ad9e4c7d64801e43e0",
          "eae1c2d64ee56043ccc271e5c2ebe49976adb7754d54b235ebd70223f99e8c81"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996696504Z",
      "vulnerabilities": {
        "vulnerabilityID": "228a1abe-a762-405f-8fcd-dfd71a61858f",
        "line": "238",
        "column": "77",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (b[off + 2] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ddb827597b3bfc31d868ea515f1b1ca1f7e58c5de06cdd09ee22f5d1603cbeb6",
        "deprecatedHashes": [
          "e0f0e8f97cbed05e37eb64761123e64659b329a3df90d1ad9e4c7d64801e43e0",
          "eae1c2d64ee56043ccc271e5c2ebe49976adb7754d54b235ebd70223f99e8c81"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996697235Z",
      "vulnerabilities": {
        "vulnerabilityID": "f31bbdd2-9f2c-460b-92fa-785fb181442a",
        "line": "249",
        "column": "23",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (b[off] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off + 2] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "a67f129b0e813893c99639a3f5efc1e9112b1b3e4dd7c8c87244032515684e0d",
        "deprecatedHashes": [
          "2d6651c80241c7fe17b8d513d8fe9e140f33dc5249a107f1850d68c77bf901ef",
          "825e9a272bb45d35b3442966481778aa3c9cc354208a89dc2a7a95f7685fcbc9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996697956Z",
      "vulnerabilities": {
        "vulnerabilityID": "f89fcf7a-bad8-4469-a436-1f59d0f53ee3",
        "line": "249",
        "column": "51",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (b[off] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off + 2] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "a67f129b0e813893c99639a3f5efc1e9112b1b3e4dd7c8c87244032515684e0d",
        "deprecatedHashes": [
          "2d6651c80241c7fe17b8d513d8fe9e140f33dc5249a107f1850d68c77bf901ef",
          "825e9a272bb45d35b3442966481778aa3c9cc354208a89dc2a7a95f7685fcbc9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996698688Z",
      "vulnerabilities": {
        "vulnerabilityID": "c50e3e62-61ae-4f6a-8455-69a2a51a7ab3",
        "line": "249",
        "column": "77",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return (b[off] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off + 2] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "a67f129b0e813893c99639a3f5efc1e9112b1b3e4dd7c8c87244032515684e0d",
        "deprecatedHashes": [
          "2d6651c80241c7fe17b8d513d8fe9e140f33dc5249a107f1850d68c77bf901ef",
          "825e9a272bb45d35b3442966481778aa3c9cc354208a89dc2a7a95f7685fcbc9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996699419Z",
      "vulnerabilities": {
        "vulnerabilityID": "c10ebf97-dc25-47ee-8da8-4fa7c727790e",
        "line": "260",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return b[off + 3] \u003c\u003c 24 | (b[off + 2] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "bec8704f5aefa4dc0d675107a33f35f574ef3a5fb759d9d60c8aec565044848d",
        "deprecatedHashes": [
          "507f9f3334d8528fa73893e56b757da7ca8a0107d7208cdb5b485468587f3d81",
          "2e3788ab4957aaab57438e8be2a85c0b34e3d6ab5474ec961e799078bb273a86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99670014Z",
      "vulnerabilities": {
        "vulnerabilityID": "e37091fb-6ab1-43f5-b421-dd405314b6da",
        "line": "260",
        "column": "74",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return b[off + 3] \u003c\u003c 24 | (b[off + 2] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "bec8704f5aefa4dc0d675107a33f35f574ef3a5fb759d9d60c8aec565044848d",
        "deprecatedHashes": [
          "507f9f3334d8528fa73893e56b757da7ca8a0107d7208cdb5b485468587f3d81",
          "2e3788ab4957aaab57438e8be2a85c0b34e3d6ab5474ec961e799078bb273a86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996700882Z",
      "vulnerabilities": {
        "vulnerabilityID": "f1a94c25-000e-469d-868d-a00c6213c8f3",
        "line": "260",
        "column": "96",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return b[off + 3] \u003c\u003c 24 | (b[off + 2] \u0026 0xff) \u003c\u003c 16 | (b[off + 1] \u0026 0xff) \u003c\u003c 8 | b[off] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "bec8704f5aefa4dc0d675107a33f35f574ef3a5fb759d9d60c8aec565044848d",
        "deprecatedHashes": [
          "507f9f3334d8528fa73893e56b757da7ca8a0107d7208cdb5b485468587f3d81",
          "2e3788ab4957aaab57438e8be2a85c0b34e3d6ab5474ec961e799078bb273a86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996701623Z",
      "vulnerabilities": {
        "vulnerabilityID": "7bb463bf-14f0-42b4-8cc9-dc3b343838c7",
        "line": "271",
        "column": "42",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return b[off] \u003c\u003c 24 | (b[off + 1] \u0026 0xff) \u003c\u003c 16 | (b[off + 2] \u0026 0xff) \u003c\u003c 8 | b[off + 3] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "7dc851acc964ec22a7d3675c02059b0c8bd48472a70cf632f946adb69eb54266",
        "deprecatedHashes": [
          "fafc2d6cc50d1e0c866886c80c303deff8c83305048b589a555ec92cf707c770",
          "11112a18ff0f509d8985793d9d1fe30e3f537d757e75da61d6cc9ce6394d046c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996702405Z",
      "vulnerabilities": {
        "vulnerabilityID": "e042fda2-46cd-41b0-94d3-f52861063545",
        "line": "271",
        "column": "70",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return b[off] \u003c\u003c 24 | (b[off + 1] \u0026 0xff) \u003c\u003c 16 | (b[off + 2] \u0026 0xff) \u003c\u003c 8 | b[off + 3] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "7dc851acc964ec22a7d3675c02059b0c8bd48472a70cf632f946adb69eb54266",
        "deprecatedHashes": [
          "fafc2d6cc50d1e0c866886c80c303deff8c83305048b589a555ec92cf707c770",
          "11112a18ff0f509d8985793d9d1fe30e3f537d757e75da61d6cc9ce6394d046c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996703136Z",
      "vulnerabilities": {
        "vulnerabilityID": "7f8b1e50-f3a6-4f42-bb02-47d5ceb9bd5a",
        "line": "271",
        "column": "96",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "return b[off] \u003c\u003c 24 | (b[off + 1] \u0026 0xff) \u003c\u003c 16 | (b[off + 2] \u0026 0xff) \u003c\u003c 8 | b[off + 3] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "7dc851acc964ec22a7d3675c02059b0c8bd48472a70cf632f946adb69eb54266",
        "deprecatedHashes": [
          "fafc2d6cc50d1e0c866886c80c303deff8c83305048b589a555ec92cf707c770",
          "11112a18ff0f509d8985793d9d1fe30e3f537d757e75da61d6cc9ce6394d046c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996703858Z",
      "vulnerabilities": {
        "vulnerabilityID": "2ade6783-56b9-4de0-8a22-73f8247e6dad",
        "line": "282",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 56L | (b[off + 6] \u0026 0xffL) \u003c\u003c 48L | (b[off + 5] \u0026 0xffL) \u003c\u003c 40L | (b[off + 4] \u0026 0xffL) \u003c\u003c 32L | ",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "d14c5a417c8e2059d9a681de23e83afa74749a332ba4373fb9c4b84053087b6d",
        "deprecatedHashes": [
          "93b9fb472c15a3ede98130ab37da0e56334b359b6776a19794a502241df0c7c2",
          "c5c0020ed7d5c074ce75d5c308bf08fe69dbfeb33d964a8216930bfc786603c7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996704589Z",
      "vulnerabilities": {
        "vulnerabilityID": "de4c1907-7548-4ddc-b7a4-4e41e3a9a895",
        "line": "282",
        "column": "57",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 48L | (b[off + 5] \u0026 0xffL) \u003c\u003c 40L | (b[off + 4] \u0026 0xffL) \u003c\u003c 32L | (b[off + 3] \u0026 0xffL) \u003c\u003c 24L | ",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "04bd4665f560abf1277f7903654cc9b736e4b639c4a9332df9f4784286045677",
        "deprecatedHashes": [
          "70b150c1b1141f74626933f270e6c97cb510bb9fa60f12d1a3abfec329d51208",
          "9b15524e3a067d79bdd72c82b6a7df8f2efc616a9c7b93ec5e238ede8c8ec842"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99670532Z",
      "vulnerabilities": {
        "vulnerabilityID": "1473ceb6-177a-4036-aa4a-94633129e7f4",
        "line": "282",
        "column": "87",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 40L | (b[off + 4] \u0026 0xffL) \u003c\u003c 32L | (b[off + 3] \u0026 0xffL) \u003c\u003c 24L | (b[off + 2] \u0026 0xffL) \u003c\u003c 16L | ",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "02302155293fcc59b55c6a6cd317b5aeebb78a06078335ab5f109d171ed851fd",
        "deprecatedHashes": [
          "a868029a1acacb556c7bef1dab9370b13a3b65bb3633333655cdc7f3a80c7a23",
          "d38e99fb5e03250607959eb26be9d9cd168321fa6902b0c90269af62751955e8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996706062Z",
      "vulnerabilities": {
        "vulnerabilityID": "8758c76e-c8ad-4aa3-8399-051ac4d64d81",
        "line": "282",
        "column": "117",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 32L | (b[off + 3] \u0026 0xffL) \u003c\u003c 24L | (b[off + 2] \u0026 0xffL) \u003c\u003c 16L | (b[off + 1] \u0026 0xffL) \u003c\u003c 8L | b",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "8248e4295769954aaa1121bcdbaf9c081c33074d7b61d309ac5ba5c683a2c414",
        "deprecatedHashes": [
          "dee141d5a147d67ea926ae1b7c1bf83dfd8f23dfc3bb0bdf5214ff388df2e12b",
          "28ddc1fc7268cf981b7deab326c55bedbed5c50cae14e549f0bea0bf40c5df79"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996706793Z",
      "vulnerabilities": {
        "vulnerabilityID": "db719bd8-be25-4631-a0bb-b6ad7c487cca",
        "line": "282",
        "column": "147",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 24L | (b[off + 2] \u0026 0xffL) \u003c\u003c 16L | (b[off + 1] \u0026 0xffL) \u003c\u003c 8L | b[off] \u0026 0xffL;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "265bf45d711dd38826a2d80bc64dd9207c10a843ff89e4e0428fef3aca267bc5",
        "deprecatedHashes": [
          "fa4d79c6c4fd929ce744ab5ce64d6ef097fc6e6b6c53bdc775016f62093dd857",
          "107fa4e4946f2863b2bc99676eb9dda9592aaa12ad3204a66c241e02708e1af7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996707525Z",
      "vulnerabilities": {
        "vulnerabilityID": "dbbd9c41-b72e-463e-b9b3-a1be4f2c7883",
        "line": "282",
        "column": "177",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 16L | (b[off + 1] \u0026 0xffL) \u003c\u003c 8L | b[off] \u0026 0xffL;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "29ae6504901793e13fdad084046ff5ebb66cc28d4994151e68c350e9242de807",
        "deprecatedHashes": [
          "7c49838cb55348c63f9371a96be4817eeec754add6159da3db01e78f9898d14f",
          "9553673dc5d20792320720ed1bea4be0ff81a91655bf2618cffeb5171ad75d2a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996708306Z",
      "vulnerabilities": {
        "vulnerabilityID": "8e5ff1c7-1dbf-48f4-b7c8-2ef8fc7391bf",
        "line": "282",
        "column": "207",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 8L | b[off] \u0026 0xffL;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "892f7f3611ea40db5508373edc9ba6280d47919eb6ca19927f375d1dc042683c",
        "deprecatedHashes": [
          "cb2928e91f7e79e0b4044c60946dc4cc44f82a2e13a5b794dad701d61a71900f",
          "3f881c1a59cb2f7143ad4152c536a8438599e0847336b845c170735c659f2199"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996709037Z",
      "vulnerabilities": {
        "vulnerabilityID": "40399ada-486d-4587-ac74-d9767356ecd0",
        "line": "282",
        "column": "231",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "de390c577d18c0730ead10eef12f892fce34d2a2c6252b70fa839033530e6b8b",
        "deprecatedHashes": [
          "564cb7990ef946bbd0ba1e9b40f213cebc80ee2b6b49b3095a1a72533cbe1909",
          "33ee013e3aed9bb09d27da294d05fb8719590aef4c58a56bc934075a8354957e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996709769Z",
      "vulnerabilities": {
        "vulnerabilityID": "68d18da5-2408-412e-a60f-58699edd9835",
        "line": "293",
        "column": "23",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 56L | (b[off + 1] \u0026 0xffL) \u003c\u003c 48L | (b[off + 2] \u0026 0xffL) \u003c\u003c 40L | (b[off + 3] \u0026 0xffL) \u003c\u003c 32L | ",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "fda0fa2f79628fa56fa98810a3b0169259ef5a7c424547171eca45fc0dd0f1d5",
        "deprecatedHashes": [
          "cf10382867170c7a77e64cfa73439791cbbb8053ec05854a4aa881a6d74516d9",
          "f751ab6d734f78d1a2fb90ff78546a3309217f209be930e1970e8857c7a05049"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.9967105Z",
      "vulnerabilities": {
        "vulnerabilityID": "3ac37965-4690-4762-b738-613973583b5b",
        "line": "293",
        "column": "53",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 48L | (b[off + 2] \u0026 0xffL) \u003c\u003c 40L | (b[off + 3] \u0026 0xffL) \u003c\u003c 32L | (b[off + 4] \u0026 0xffL) \u003c\u003c 24L | ",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "c9ef2c6d06e578206953a3371c3f8bc24e6d519d5efae33f4e8597517c20baad",
        "deprecatedHashes": [
          "b00eaf88bae71740e6b67be5561392768761f6e9d0a648990da21734143dff19",
          "0ff7d5cf004832adcd43ff57b327c025203cd5cabad4f3c6d0102316cb3e47bc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996711292Z",
      "vulnerabilities": {
        "vulnerabilityID": "8220dc3e-e648-457f-9156-19703ec53b19",
        "line": "293",
        "column": "83",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 40L | (b[off + 3] \u0026 0xffL) \u003c\u003c 32L | (b[off + 4] \u0026 0xffL) \u003c\u003c 24L | (b[off + 5] \u0026 0xffL) \u003c\u003c 16L | ",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "cce1c6deb26253ef475a0a7b65afd967503a26e30586010c01b61c99ac370988",
        "deprecatedHashes": [
          "5b85a6206f4cdcc519e5a41ebf29a02a055cf3fdf28999145fa53a73642a9fe0",
          "2db1982eee83c1d53c3852743a0b579e0c3e0bee22656157fdcb97a57458a8cb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996712033Z",
      "vulnerabilities": {
        "vulnerabilityID": "a930aec6-54fb-4aa8-ae73-20330dc32eda",
        "line": "293",
        "column": "113",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 32L | (b[off + 4] \u0026 0xffL) \u003c\u003c 24L | (b[off + 5] \u0026 0xffL) \u003c\u003c 16L | (b[off + 6] \u0026 0xffL) \u003c\u003c 8L | b",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "f3f3b0c324f3f3c6b637e21d441f4f4d14e20e13fa2d2bcbb3d4015b282db35c",
        "deprecatedHashes": [
          "10924a97efbdba665a87bfd3ef3a5d857208293a4b41ddc943af718e1d4a9da3",
          "216af5ec1a90e2e745895140fb2881ddee997a39239ec80263d101dad89b05fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996712754Z",
      "vulnerabilities": {
        "vulnerabilityID": "a2957ea2-046b-4449-bc7c-0d223d61cd43",
        "line": "293",
        "column": "143",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 24L | (b[off + 5] \u0026 0xffL) \u003c\u003c 16L | (b[off + 6] \u0026 0xffL) \u003c\u003c 8L | b[off + 7] \u0026 0xffL;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "6bf1635cae5ac18a281723bc518867c039bd4d4599533cff16218507095872ff",
        "deprecatedHashes": [
          "6708a932eb79db013bc9472a276f74cf3f1845367db4db66c0c120eed4a7f48f",
          "285d618ed45121ab3854f1ecf2abcfc9b6acf8934a8ea4d0cebacfb4f62eb9eb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996713486Z",
      "vulnerabilities": {
        "vulnerabilityID": "bce1cada-194c-4f26-aa42-d22df5c88d74",
        "line": "293",
        "column": "173",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 16L | (b[off + 6] \u0026 0xffL) \u003c\u003c 8L | b[off + 7] \u0026 0xffL;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "4c4223bbd902cc249081b5938e60aba48b57cf2ac20454f4fe2c421c12d20120",
        "deprecatedHashes": [
          "5e79cd69f7b4fb470465909eb52e56446fd00f927bb21820c1104edf77cec3fd",
          "a809fd33b9bc0f5492814f85e1657b9e78b16e8c4cc28d59585bed03291fbef5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996714277Z",
      "vulnerabilities": {
        "vulnerabilityID": "82dc4e90-336c-47a6-b472-49d01bd03682",
        "line": "293",
        "column": "203",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": " \u003c\u003c 8L | b[off + 7] \u0026 0xffL;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "c331717f87167d9bb0efaed775fcb53ae4a95890ce4b411353a215f8dbd513c7",
        "deprecatedHashes": [
          "7c9944c63b3e688c4cbf2305db360d2cc1a1e04113495a48eb613a363e90fa9f",
          "b5c89994b91b3564283ec75db9b0dd71ab3ad6d8419ae0d629e349f48ab7eb97"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996715028Z",
      "vulnerabilities": {
        "vulnerabilityID": "a60493f4-7b93-4fb1-a0da-32fd27b7723a",
        "line": "293",
        "column": "231",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Bits.java",
        "code": "",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "30328deb9fd1cd83778942d875c9dbb26c8e53a281fe6abc81daa28c0f5f9004",
        "deprecatedHashes": [
          "043e6b733e5cf4da984528dc6931a1361c9aa27a486831a36d61eb49c60d86ec",
          "8b402d33d29328bf4032573f7829696507f8acb87794ad864fecac68b6deac15"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996717934Z",
      "vulnerabilities": {
        "vulnerabilityID": "99f5ab2c-5ce9-403c-9145-ca3da0a96393",
        "line": "57",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioFileChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "4cfbe1bdde9233d0fc06781b52dd4cd8c486118bf0b790d2424e67bd6489f2c9",
        "deprecatedHashes": [
          "b865c890aa0c12d428b930c9c36902040beebf14a87d2f084a081fd5e6c7fd6f",
          "b48eb091563c84aa045d68a3559ef8447a896949b13877e299e94ba2e13a69cf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996718665Z",
      "vulnerabilities": {
        "vulnerabilityID": "f8051d8d-5662-4dbe-b1e6-5988313dccf7",
        "line": "67",
        "column": "61",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/LimitedOutputStream.java",
        "code": "this.remaining = remaining - (e.bytesTransferred \u0026 0xFFFFFFFFL);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "74ee5ff1758a91a7afc45d0dd1a4c8073955709afd9da499a1443f26572358c5",
        "deprecatedHashes": [
          "c44c306c38418620f85f91463d4ac4dc5317144efea7e2f4f576a7a5d7dd78e3",
          "da41758fc07fcc5690c53d5af6d5e4c2f0147ffc7be4c43f5592d37dea909a84"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996721651Z",
      "vulnerabilities": {
        "vulnerabilityID": "0c8962bb-a015-4bfc-bb92-50cee2c892b0",
        "line": "84",
        "column": "35",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/PropertyTestCase.java",
        "code": "// two calls to hashCode must return the same result",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "9b6e38d06fe7be98c2c8ea90d14993dd20e6515f9271db55a7d45294c22cc1f3",
        "deprecatedHashes": [
          "2634cd182af82b37db8b934cb565f2153b822411171291a89b695c7f1b6f5277",
          "7dd72b1bda054f52b4097ec2427d0291d10102599eeedd94cf93c00ce4db69b1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996722382Z",
      "vulnerabilities": {
        "vulnerabilityID": "ba945f82-993a-476d-a8ea-0a95650f5c99",
        "line": "85",
        "column": "41",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/PropertyTestCase.java",
        "code": "assertEquals(property.hashCode(), property.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e6cbf72fd2c190e6ebfaad202f4e36f57b3de094cb2ff62e67995bccf398b0b6",
        "deprecatedHashes": [
          "3423ce41592bc051d130329e5333439b55da6db60e750453f430aaf1eb66f63a",
          "2340b68346ca0258aaad8880aba97d719f0bc3fc372261e84f8acb1e4f91a866"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996723124Z",
      "vulnerabilities": {
        "vulnerabilityID": "01d36a2e-c5fc-4a8b-a1fc-5dee6eb081a9",
        "line": "85",
        "column": "62",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/PropertyTestCase.java",
        "code": "assertEquals(property.hashCode(), property.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e6cbf72fd2c190e6ebfaad202f4e36f57b3de094cb2ff62e67995bccf398b0b6",
        "deprecatedHashes": [
          "3423ce41592bc051d130329e5333439b55da6db60e750453f430aaf1eb66f63a",
          "2340b68346ca0258aaad8880aba97d719f0bc3fc372261e84f8acb1e4f91a866"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996723865Z",
      "vulnerabilities": {
        "vulnerabilityID": "19aa573e-6e36-4118-b8ee-8fb5f37c7961",
        "line": "86",
        "column": "42",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/PropertyTestCase.java",
        "code": "assertEquals(compareTo.hashCode(), compareTo.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "d658b4f068f4b9272348815655832add1dcb4a5ebb928fe0c0b0f2c4c382c70c",
        "deprecatedHashes": [
          "ddfe9b1e0f8bcae15089d03df23ce460c98ce8659eced94b23dd156a6b78a07d",
          "112a58646e326caf27654575e386211164b40048cbd4b82be5d447c824b45c28"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996724586Z",
      "vulnerabilities": {
        "vulnerabilityID": "76a64f27-7a39-4ce5-a6db-4524026a4e88",
        "line": "86",
        "column": "64",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/PropertyTestCase.java",
        "code": "assertEquals(compareTo.hashCode(), compareTo.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "d658b4f068f4b9272348815655832add1dcb4a5ebb928fe0c0b0f2c4c382c70c",
        "deprecatedHashes": [
          "ddfe9b1e0f8bcae15089d03df23ce460c98ce8659eced94b23dd156a6b78a07d",
          "112a58646e326caf27654575e386211164b40048cbd4b82be5d447c824b45c28"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996731209Z",
      "vulnerabilities": {
        "vulnerabilityID": "f4248176-959d-4e95-9e62-c08917c7dbd6",
        "line": "27",
        "column": "7",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Sequence.java",
        "code": "import java.util.RandomAccess;",
        "details": "(1/1) * Possible vulnerability detected: Insecure Random Number Generator\nThe App uses an insecure Random Number Generator. For more information checkout the CWE-330 (https://cwe.mitre.org/data/definitions/330.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-114",
        "vulnHash": "7a7d2d74b3389ab0dc6febfc35d4d5815fdd85746444ea602d6f73d93be7de90",
        "deprecatedHashes": [
          "fdba4522eecc9c20a429e28d666ddd3a980c372a7c832b771147f0999f5e7e84",
          "a4e27bb804514dfed95b0db6e1f973f5bb82fc029ba0d94e6508c2b8323a39ce"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99673199Z",
      "vulnerabilities": {
        "vulnerabilityID": "833006fd-cf9e-47e4-91e4-0e8fafa8c804",
        "line": "190",
        "column": "14",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Sequence.java",
        "code": "public int hashCode() {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "8477b73f76af1a3f607ee272a24219b0f9ad8ab5bfb832db48388ff90843857a",
        "deprecatedHashes": [
          "85c05916c60c533ae796f9b5738804ad3b0e13ba2e83429b883e0b2ca87f50b1",
          "e8317b8cd008ac7401df7d1109bdc5cd99b81fdca6b283d7f5b9fdb1b3a8c69c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996732722Z",
      "vulnerabilities": {
        "vulnerabilityID": "a1329e19-5af5-4742-8dac-9e70ce57fdc5",
        "line": "191",
        "column": "21",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Sequence.java",
        "code": "return Arrays.hashCode(values);",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "0ec79584538b07166932a4380ff3afc0ab25f69bc8adba15555b6bf9a4045a01",
        "deprecatedHashes": [
          "dfb1513a88fd10fe06f5f0847d334cdbf012e86535d86ed17072ac07e05e5ec0",
          "6927483abf3a940e57af09aa73e4200d88cb2e43af576ac94ed00916f81ed9f1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996733443Z",
      "vulnerabilities": {
        "vulnerabilityID": "31992332-08f3-4663-810c-26d22b0a8290",
        "line": "97",
        "column": "14",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Property.java",
        "code": "public int hashCode() {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "c445451a28cdaa05388c9bb3f20c82a6e0b74ed9f5766552cb08fe36f730c739",
        "deprecatedHashes": [
          "2189ce058c8e24053d3bb28fbe6afafbb9db396e456c8af40f29e8e36d2fe377",
          "ee464de94f124f5c2d4497edd62f1a0f68c35ad2ca08592efde2872e7fd02782"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996734174Z",
      "vulnerabilities": {
        "vulnerabilityID": "6bd4d152-8d43-49ed-97e7-1456dd5018e0",
        "line": "98",
        "column": "18",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Property.java",
        "code": "return key.hashCode() * 7 + value.hashCode();",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "b8a6e0a65807bc66ebc7d07dd4a08db28fb2d414a4a36e2bfbd5e3ea9cf80557",
        "deprecatedHashes": [
          "a77ce2b0bbf48760688dbadb540b6f684adc7f07518f8c8e18cc5fe634893366",
          "dce139bbaf80d6c18955d47cf493db7e1510eed74f3d3a9f4c8f84a977f754f9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996734906Z",
      "vulnerabilities": {
        "vulnerabilityID": "93926606-dce1-4abe-a739-61c06a5f8701",
        "line": "98",
        "column": "41",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Property.java",
        "code": "return key.hashCode() * 7 + value.hashCode();",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "b8a6e0a65807bc66ebc7d07dd4a08db28fb2d414a4a36e2bfbd5e3ea9cf80557",
        "deprecatedHashes": [
          "a77ce2b0bbf48760688dbadb540b6f684adc7f07518f8c8e18cc5fe634893366",
          "dce139bbaf80d6c18955d47cf493db7e1510eed74f3d3a9f4c8f84a977f754f9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996740827Z",
      "vulnerabilities": {
        "vulnerabilityID": "2ce7ebf5-2fd3-4624-9816-167bd322eb9b",
        "line": "100",
        "column": "42",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/Pipe.java",
        "code": "return buffer[tail++] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "317ac1d437e266a570ec20f11c5ff70c56047c4c3fda8a5c68b38ecb877574a4",
        "deprecatedHashes": [
          "5882920b5f288a846825cfb72461efc7ce416ebc9c6ec1999ab4c37ab75c2ae4",
          "b975605617a5b0215810d8c751f78409109f5e73cf595746c7007d1ebfcbd41e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996761606Z",
      "vulnerabilities": {
        "vulnerabilityID": "bd32db60-43e7-4392-9328-de64bf268763",
        "line": "163",
        "column": "53",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/ChannelInputStream.java",
        "code": "return (eof = res == -1) ? -1 : array[0] \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "9b74870ca71f4c1740b73a086e15f40503fa47a6808db788eea48182dd932299",
        "deprecatedHashes": [
          "01a40e2e1ac502eb008a0f2cb9f3baf8401e7f51a8add413ea5bf92bb1ea287b",
          "e7e302e3bca3858521bb250ca951c93579943094db68721f9e36fb9adbbf5e45"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99676379Z",
      "vulnerabilities": {
        "vulnerabilityID": "1d3fe6ec-eb44-40a1-abb4-70563047e459",
        "line": "134",
        "column": "36",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/BufferPipeInputStream.java",
        "code": "final int v = buf.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "e915e63ed123ce3f6c761c339182f43ef69464c8c903d6e43c903090081dd602",
        "deprecatedHashes": [
          "9b7606cb189985266309ddc719176d3cc266f80f5e9f5dbdddffda0063ce221b",
          "1985f2c634bcf795598c0867708e4ec5a84c6bfb6696c15c0b2ad7bb1b67476e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996778708Z",
      "vulnerabilities": {
        "vulnerabilityID": "abb7d402-73f0-4c18-9d63-7a6530fd49e4",
        "line": "125",
        "column": "32",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/ReaderInputStream.java",
        "code": "return byteBuffer.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "8a5bc9e8a82bcd765af808c8697c4484915ce9bbe8e92d4973108f727f2d81c9",
        "deprecatedHashes": [
          "05d767edf17e13e09a03c0bf4b1fd0e5f2a616b36f9fda35fbe12068af1a81c1",
          "d8a1fb6bca92544eed309fe81ae4a82d7b0509a445c4fdc5838465c66e07874b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996780231Z",
      "vulnerabilities": {
        "vulnerabilityID": "fe7d6431-b4c8-4921-854e-c2a0d873d57f",
        "line": "42",
        "column": "7",
        "confidence": "LOW",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/FileSystemWatcherTestCase.java",
        "code": "import java.util.Random;",
        "details": "(1/1) * Possible vulnerability detected: Insecure Random Number Generator\nThe App uses an insecure Random Number Generator. For more information checkout the CWE-330 (https://cwe.mitre.org/data/definitions/330.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-114",
        "vulnHash": "050b404e2e5bd7b72c15b0a3b5fb152a51f9ef79f333f11a045987d38583cfdf",
        "deprecatedHashes": [
          "af714ee8ad7cc985048b8abfb87468a4bbec5279f744f5445b158c4a264ac785",
          "a18f3ba44a224128b9daae60001797bbc15831d68814ca6e49b54cda657aa9ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996780962Z",
      "vulnerabilities": {
        "vulnerabilityID": "fa042304-0bf9-4c9d-975b-5a512684c182",
        "line": "244",
        "column": "14",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/OptionMap.java",
        "code": "public int hashCode() {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "c29ab4d7c5c6702556cab1d5d5f85c98381871e5aeedaf4c66caf10204df4cb8",
        "deprecatedHashes": [
          "8383ffe05d41dd45dbf27bfcff9402f3ab50c53616d32ad42ea420aa9428f16c",
          "68c44146e4ee6bebbfdadd3b49e2503a3abe1f4ab30b38e00f89d11a66b700ff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996781683Z",
      "vulnerabilities": {
        "vulnerabilityID": "35188633-b2f7-4e3e-bc61-b22556c9c471",
        "line": "245",
        "column": "20",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/OptionMap.java",
        "code": "return value.hashCode();",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "97de8ff758695caffb63c4c64acc260bcdbc82ac0eb52cd4ec1586075f4ae8e4",
        "deprecatedHashes": [
          "eb77efeb17f631f393919ac1793fa731ced0be09e2002fdd46c23bb8ee7a4e16",
          "6e98f2853e619d6bdc5e5625318850c8c1be6b306c1915741406f3d002d31fc4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996782415Z",
      "vulnerabilities": {
        "vulnerabilityID": "fff40ab6-6d5b-4c58-9bd6-94cd6089f624",
        "line": "111",
        "column": "49",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/mock/XnioWorkerMock.java",
        "code": "public XnioIoThreadMock getIoThread(final int hashCode) {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a69f7fc1eeddf95c5a2e010d9fe3b0dd5b117475e5c93011146ec74e7a185152",
        "deprecatedHashes": [
          "d3fcbc9a7ec2d0865dd375615763a87b9215ad680a37a95872086686ccd39dd1",
          "bb28e064a4436dabf384ce88a84107221f035988594a98a2555f61d457294fb0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996794918Z",
      "vulnerabilities": {
        "vulnerabilityID": "a5127365-f3be-49fd-a9f0-349d077678bf",
        "line": "165",
        "column": "36",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/BufferedChannelInputStream.java",
        "code": "return buffer.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "128f375dc818dd59b273d43c881313fcdbbbb35bca0ef24cda7c7a54625fc28e",
        "deprecatedHashes": [
          "e5e4a771cae4eeaf13b3a556344f4926029617da55c9af023b9dc0910b7fafa9",
          "ae1411aa1e8f38723ac9fb77a2691777e6de088dc058b4008a8c526485ac16e9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99679565Z",
      "vulnerabilities": {
        "vulnerabilityID": "fea344d8-19ae-47d7-bf36-3d2a166f80cb",
        "line": "187",
        "column": "40",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/BufferedChannelInputStream.java",
        "code": "return buffer.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "127631c11d2bb9211fac890529e3cc7b3d00ee1e7b168d5a045d69aa9ea05160",
        "deprecatedHashes": [
          "81f1495e239dd7d550a82a5d7d2c8ffec9e4819e6363563bf88ba3bd5fa9cfd1",
          "4060f8092ab105b2ac6d75cd7335bd4404e3deb4ca47a36950ad481b91d187bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996796371Z",
      "vulnerabilities": {
        "vulnerabilityID": "f7a24e93-c606-4d87-8afd-15646166d1e3",
        "line": "242",
        "column": "31",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "// two calls to hashCode must return the same result",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a82723c2cfdae75c512a86ccd9872a878dedea895e8c56cc0dd96927e5910b64",
        "deprecatedHashes": [
          "396afdb60e09710d05d23ff6c875384ed2a2ad559ca27424ac42dd7cbab69912",
          "0bb9120cf16005625f7fbbee6974bd991adc3d08fd887d3e6b33e5d85d341351"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996797102Z",
      "vulnerabilities": {
        "vulnerabilityID": "86bcbca4-f29a-4709-869d-8abaad4cee69",
        "line": "243",
        "column": "39",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(byteString.hashCode(), byteString.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "47c41f3b16c819ebec88c0cf09803ffa3d439d3868aeaf43c621313038bf30a4",
        "deprecatedHashes": [
          "0d1d03ebb0acdbb3ad86c43c5a30efde7a57d492a77ca081a08e9e0b546814fa",
          "e299c83bd5fd8377268075d30421e7d916390c8e39ddab70f5be2fd54febfbaf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996797884Z",
      "vulnerabilities": {
        "vulnerabilityID": "6a243f30-daef-4770-bd80-fa58d3ea1a66",
        "line": "243",
        "column": "62",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(byteString.hashCode(), byteString.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "47c41f3b16c819ebec88c0cf09803ffa3d439d3868aeaf43c621313038bf30a4",
        "deprecatedHashes": [
          "0d1d03ebb0acdbb3ad86c43c5a30efde7a57d492a77ca081a08e9e0b546814fa",
          "e299c83bd5fd8377268075d30421e7d916390c8e39ddab70f5be2fd54febfbaf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996798615Z",
      "vulnerabilities": {
        "vulnerabilityID": "9cb0dcdd-d8fb-44ad-bb26-9a05d4916f31",
        "line": "244",
        "column": "38",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(compareTo.hashCode(), compareTo.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "48bc21791fd9e26c3aa25cfe57dedb54ea5a3c85ccb025c2cd94c8b75f24677d",
        "deprecatedHashes": [
          "53c94d7a02f9c50e6a1cd7eb11e435da0dac0a5434d3a80ed09c5cf6dc2fbed1",
          "41654d2ddb826b8ed9be7d4d7786b2ab1e349d8414a4e7517b446161c1081674"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996799346Z",
      "vulnerabilities": {
        "vulnerabilityID": "ae86faf0-a48e-4616-ae6a-76e9b8a44636",
        "line": "244",
        "column": "60",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(compareTo.hashCode(), compareTo.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "48bc21791fd9e26c3aa25cfe57dedb54ea5a3c85ccb025c2cd94c8b75f24677d",
        "deprecatedHashes": [
          "53c94d7a02f9c50e6a1cd7eb11e435da0dac0a5434d3a80ed09c5cf6dc2fbed1",
          "41654d2ddb826b8ed9be7d4d7786b2ab1e349d8414a4e7517b446161c1081674"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996800068Z",
      "vulnerabilities": {
        "vulnerabilityID": "2fc44a59-4cbe-4682-8e82-481bc9bc50e5",
        "line": "245",
        "column": "77",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "// if byteString equals to compareTo, they must have the same hashCode",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "7f1fcfdbb632d508c190c4ab72bf3822f1494c12c3d1919bc6763c411961edc9",
        "deprecatedHashes": [
          "d25498243aaa8f54404bd3a6b9bbced863dc6638ff8914202fa5643bc010f677",
          "58429d081ac236fd7632c9682f428a1db2d72f0dac530f0428030a45f8bbbfd2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996800799Z",
      "vulnerabilities": {
        "vulnerabilityID": "51913ce6-dd38-4f78-827a-0b02a217a8ff",
        "line": "246",
        "column": "39",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(byteString.hashCode(), compareTo.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "c668f10e3de8d21fcf18776649b8c31059219ba98fbc1a4bc1175bdd516305fd",
        "deprecatedHashes": [
          "c0c2464cea96e729a0c56adc9ccc2744955de9a88fbf43285c6c4715f8e799fb",
          "9a1a7540ab7b824fe20690203026cefa145642de131e5b9d0c72c9b2a5848bfe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996801521Z",
      "vulnerabilities": {
        "vulnerabilityID": "ca956cf5-1d54-4d09-8051-050cdf295548",
        "line": "246",
        "column": "61",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(byteString.hashCode(), compareTo.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "c668f10e3de8d21fcf18776649b8c31059219ba98fbc1a4bc1175bdd516305fd",
        "deprecatedHashes": [
          "c0c2464cea96e729a0c56adc9ccc2744955de9a88fbf43285c6c4715f8e799fb",
          "9a1a7540ab7b824fe20690203026cefa145642de131e5b9d0c72c9b2a5848bfe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996802252Z",
      "vulnerabilities": {
        "vulnerabilityID": "d526ced9-b8ac-4fd7-8e36-19c8e087002d",
        "line": "259",
        "column": "35",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "// two calls to hashCode must return the same result",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a281a08f722d386ca81490705f134d5585f57d3cd0c263798d9fa9c689c75c94",
        "deprecatedHashes": [
          "39252b447dd268e23a84878895532513bb26382332d417bdfcb227adb8e4dafb",
          "f888d6b0b902f3ac0d1b9968633db19bfd5ecb86fe64a8d6efa71b6a414f011a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996802983Z",
      "vulnerabilities": {
        "vulnerabilityID": "3a21eefa-5e38-43b1-8ddf-f8f3b5d8ab27",
        "line": "260",
        "column": "43",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(byteString.hashCode(), byteString.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "78d39ecead78406710358eaa3af42ad0135289b44f4862c4241cd90e9c95661c",
        "deprecatedHashes": [
          "c0911c71cdd6ec28e985c69e8adfb78aaab72315084b6abb2894d56257d62640",
          "23731af8b99038c1fc737b489b37bfadf74bbe1e25bfe883b3ab718b0eae4f7d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996803765Z",
      "vulnerabilities": {
        "vulnerabilityID": "c9e17ce9-7550-42dd-b426-481543402c0e",
        "line": "260",
        "column": "66",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(byteString.hashCode(), byteString.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "78d39ecead78406710358eaa3af42ad0135289b44f4862c4241cd90e9c95661c",
        "deprecatedHashes": [
          "c0911c71cdd6ec28e985c69e8adfb78aaab72315084b6abb2894d56257d62640",
          "23731af8b99038c1fc737b489b37bfadf74bbe1e25bfe883b3ab718b0eae4f7d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996804506Z",
      "vulnerabilities": {
        "vulnerabilityID": "50aa3886-644d-4c1e-adbd-355f71f0e8a3",
        "line": "261",
        "column": "42",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(compareTo.hashCode(), compareTo.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "abc8852d90db36c45304f78576829fe5fecaf55833ecbc1f19723fe6bcc49c5c",
        "deprecatedHashes": [
          "f6e1d57695fd91e556fd909c9e5fdfb4fe6f4836732f89c7c605787ec6114bcd",
          "263fdfc213b3011c3741e8494005e600be8ffa6d5e7c93fde51321973b03d445"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996805228Z",
      "vulnerabilities": {
        "vulnerabilityID": "9968fda8-d381-4a82-95f6-eadcb25d480b",
        "line": "261",
        "column": "64",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ByteStringTestCase.java",
        "code": "assertEquals(compareTo.hashCode(), compareTo.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "abc8852d90db36c45304f78576829fe5fecaf55833ecbc1f19723fe6bcc49c5c",
        "deprecatedHashes": [
          "f6e1d57695fd91e556fd909c9e5fdfb4fe6f4836732f89c7c605787ec6114bcd",
          "263fdfc213b3011c3741e8494005e600be8ffa6d5e7c93fde51321973b03d445"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996805959Z",
      "vulnerabilities": {
        "vulnerabilityID": "92a27e2e-5bfa-4a91-8850-6fae881d3e78",
        "line": "178",
        "column": "16",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "private File createTempFile() throws IOException {",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "d4c071623736f41f0d470bb75ec697e64e38691d797f1053f51d1620ffa3eda2",
        "deprecatedHashes": [
          "116b7ccfd6d67d7b2c2bdb3300683d6f75ef31043b16d31bce6b14b645c8f535",
          "8926c8d4997bb67f142a88bbbed469351a576f827de0b84c4d225a24d859e7ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99680669Z",
      "vulnerabilities": {
        "vulnerabilityID": "1e51513e-cc13-43d8-a8e8-9d00032c294e",
        "line": "179",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "6f20e62c1b6291f7dceea6c4201735782746cb0044bc8609ce4b853cc8d982b4",
        "deprecatedHashes": [
          "791740b44a4143046d3b7065b97df48c9a2be599ecf5691f5605a2225bcd96aa",
          "b01424060aa7e76cd123c7a6442020ac9384240bffba575c8a691c3b4d37d2e0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996807452Z",
      "vulnerabilities": {
        "vulnerabilityID": "464d0242-2a86-4758-a5c7-2a1ccd856156",
        "line": "222",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "6514e38640384030cc90b8c7c2da406f91121b0697d23ea4f72439b36b379f02",
        "deprecatedHashes": [
          "8f9a6d99f424b2c72c38e62935b8f60fe8a89530209ca2f72e9e5db0dd057ed5",
          "3b9626013030e745b6f834316be4fab754e499a5ecd3160617151bd68eabfa63"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996808233Z",
      "vulnerabilities": {
        "vulnerabilityID": "13378fa3-709f-4122-a0d4-e328e7f28ee8",
        "line": "229",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "b1f386fdc4016ef09a585bb3d68fee1831db818562c5d68c8fc4547fdee9e7a2",
        "deprecatedHashes": [
          "0ef1334bc0c1536a168893d5f28b9b2a104513bde355cc9bb731c6178b2fbb95",
          "7823ecccea3f9f98c61e34741503be6d728acaf1e2c7e81b46e9602d635d0a7a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996809035Z",
      "vulnerabilities": {
        "vulnerabilityID": "298b08fe-d996-4635-ac9b-a4a624733e9d",
        "line": "236",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "dc27eb5b419a2da3678801f5ccaba7943221548fa1a5cb687e8adeabfd0c1965",
        "deprecatedHashes": [
          "d06eb7ab6078ea1ac530657b17a2c1f53a15d74447bed2caf70f4a04cd569603",
          "0a367af82ae762489b491df31059f3fd44eb7975b4e4a1014cf7c9f03231027c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996809816Z",
      "vulnerabilities": {
        "vulnerabilityID": "16eab289-0361-4fe6-9a3f-c125a6063234",
        "line": "242",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "1cec88bc032d711b93fb2da7c8a95ff1a3ffa7d83fd6a54dd56337a59b5999b4",
        "deprecatedHashes": [
          "662679b80e3c3e004ece2d175bfa2b2b253cfc58d290563deaa7589be99b2d61",
          "c313ff7e3d92f9432085ae43144f64c15d8ac2c166fd52e9a861da243956c12b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996810547Z",
      "vulnerabilities": {
        "vulnerabilityID": "7da4f1f5-48c8-4242-a2e1-1d1735ed7bff",
        "line": "249",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "da875e60dd06bdfe5d8f61eaf44acc6f37fbb26ba8d8d11280cc61339cdf41be",
        "deprecatedHashes": [
          "ca1559ca78d44598e19c8968695482870b805b237b7555b2c8f12d6be320937a",
          "d954d3bbd05c1b4c8ed3ecc660107b7312b9ad49a7cba852a47f3236f34b655c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996811279Z",
      "vulnerabilities": {
        "vulnerabilityID": "7df9b008-807a-44a5-ae9f-462088de1ac7",
        "line": "256",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "a4e0f689c411c96db1b20e26b97fa69e1c9278f2785b7a18d3b47f9ca7b32875",
        "deprecatedHashes": [
          "cf3648772693589ddac1d5b8301f16dfdeca76d630397d2d91009da9ad1242c8",
          "b70318f1e0babb3be99eb9fce9840b4d3251e4eec0bd9a3ef49d1a16c79f7969"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99681209Z",
      "vulnerabilities": {
        "vulnerabilityID": "d963d64b-0100-40e1-a03b-60090b443631",
        "line": "262",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "2637e007d6b39f17e1322072126271440ccad8939cd32253d09146bce6cb604f",
        "deprecatedHashes": [
          "02092297e90de2fb1ce6af0bcc7f1d1a542a1614a4abc078934110e680954209",
          "34bc5ba3328a06ffc209dc81b33b0329645f392db5f0cff287afd390db5f6912"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996812902Z",
      "vulnerabilities": {
        "vulnerabilityID": "74dc905a-5e33-417f-acff-60c19bda1809",
        "line": "268",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "3f005fe75a2c5cf470458e58bc3d6887db0810ebb83cccd0d115df521905eb09",
        "deprecatedHashes": [
          "2404e04c01bb8cdf39b378876de3b77d7e0d839bf6674a5faa5044e40c3c1f45",
          "9747eb51b2408350687124ef6b5116051b4ac2002f29b3e6e9cf1c865217cc7a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996813633Z",
      "vulnerabilities": {
        "vulnerabilityID": "ffed4272-3bff-4ae2-a472-d66449d12b4f",
        "line": "274",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "030e0e372fd1d06afa0e7a49fdc301a4af9053517fbc782f7c491f49c312af0b",
        "deprecatedHashes": [
          "f938c394cb63328bbe396264c70603bd73a2a5cd35a1e45f5aef78de9268db67",
          "dbbddfbff099f184665f0d3bb5b2593a1c02595fa0a9eb5f2a260e0b5ebae108"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996814405Z",
      "vulnerabilities": {
        "vulnerabilityID": "c28df63e-3cc5-4d16-86fa-ae913d908e77",
        "line": "280",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "8e53463e558b61aabb621f4cf2d5be3b31a5c69b35803f1f37031a0425604e66",
        "deprecatedHashes": [
          "ddf28af8b9d9e6b65719925c411cd3d9b62c43f85a77383adc4f48f8e51ab2a5",
          "6631a8fc456106c9b76da506e02ee4c07c59cc98cfd84ae4ff30808646d4b6a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996815206Z",
      "vulnerabilities": {
        "vulnerabilityID": "2bc4e168-d6fb-4cd3-90ef-2c29b19b15fa",
        "line": "286",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioTestCase.java",
        "code": "final File file = createTempFile();",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "3536c11fc8aff20930ee042e1f91c7eb8b7a2157595cd90964a501162ba82a7e",
        "deprecatedHashes": [
          "0bd8424ca5c439f5166e2042ffc37eb183784c7414dfd884e64362d5a193fef2",
          "07ba8ab0e22fefae3d6aedbd911d957b1b099d0c000b94c0bbef3e02ad2f84bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996816068Z",
      "vulnerabilities": {
        "vulnerabilityID": "e228ffc3-cb93-49b6-bea1-e970331f8c88",
        "line": "127",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/EmptyStreamSourceChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "3a12f2867ca0af345d8f0458d894caf1ef5db59ebc71861a167a1c30ae304ea1",
        "deprecatedHashes": [
          "5b0012dc842d738b92bf52fca22bbbad4a268fde52bb3e01c463593fe1989ad7",
          "d6101c5c75ab52859c4b7ec0b7b1cce377182b5e21c97687768afba8f8b9da1f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996816799Z",
      "vulnerabilities": {
        "vulnerabilityID": "11489f21-84ea-4043-a0f5-e4b6cfc78af6",
        "line": "265",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/EmptyStreamSourceChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "8029c394131f5af451fa506b11b615b3cc279706ced6931776fd197a233c6eef",
        "deprecatedHashes": [
          "e60cfe94d6195aef8efd9ecbfebc9d6ab6c13d79f05562c12a15d3ac9357c416",
          "d14054ef5d0a4332feaad040490dbfcebb215dbfe49c4f1afffc95ebefa0f0a0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996817531Z",
      "vulnerabilities": {
        "vulnerabilityID": "16c742b8-78b0-4b48-8495-a97aa6eb736a",
        "line": "149",
        "column": "45",
        "confidence": "LOW",
        "file": "nio-impl/src/main/java/org/xnio/nio/NioXnioWorker.java",
        "code": "public WorkerThread getIoThread(final int hashCode) {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "1df4e50721ff9c4c91a2d0fcff9d27e26bee93d29f925d9f88a9a7793a0046c5",
        "deprecatedHashes": [
          "d785b6bad7a7e0feb6dd80f60196143a53c15efa02491bc4f6cbe0dc55ea53bc",
          "b237f030fffac5624ffdb9b4cfc0528abca26b1649e4e8a4942c240f4ddfbfec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996818262Z",
      "vulnerabilities": {
        "vulnerabilityID": "2affe0f5-aa39-4aa1-8f6b-ebdd9f5c7b68",
        "line": "158",
        "column": "37",
        "confidence": "LOW",
        "file": "nio-impl/src/main/java/org/xnio/nio/NioXnioWorker.java",
        "code": "return workerThreads[Math.abs(hashCode % length)];",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "abac22b1a759237e58fc998db801572c807dcce9566399d44237ff625b48946e",
        "deprecatedHashes": [
          "b569daf5c8d89b004df44a2e1a9ed8be0aac6df56b83fd7027c3b0cc78417a3a",
          "e85ae0d8bc70f68e5699e45309a4b2dbfc3d7c1a93c62564274933f4dd09299e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996821989Z",
      "vulnerabilities": {
        "vulnerabilityID": "ad5c8f62-671d-4c03-aa25-51cf1409e47b",
        "line": "66",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/conduits/ConduitsTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "dc70ac5d52f58be387765a2dc063a77231349431bb7f7975501af083d81f0dd1",
        "deprecatedHashes": [
          "3bf32d7560201b2615094e5184251fe5b7a625eba45392481b85135510562e3b",
          "8ec5b1edf85bed82035f3f81242e32929abfcb5ff27dc05fe62ebc15269dfa92"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99682272Z",
      "vulnerabilities": {
        "vulnerabilityID": "28389876-1ebc-43cf-8157-d138ca4a0451",
        "line": "93",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/conduits/ConduitsTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "ed8350d2356f6cf1e5466b9db059f8fdafb2321bda1e848796492c38d739675a",
        "deprecatedHashes": [
          "d26d408df169bb6050d0634f4f3baab8512026cbbe9d553eb0086bf4ce510e70",
          "3442ed275230da1f75464cd122e3db2247d1ea6265b38515d446b6aa49c921a4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996823452Z",
      "vulnerabilities": {
        "vulnerabilityID": "1c790dfb-05e1-4efb-b595-71f9ebf392a9",
        "line": "119",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/conduits/ConduitsTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "306f6a0c3a128c107e1c2561d8fed927449057f9cf20d994f7ff65d41be7b46e",
        "deprecatedHashes": [
          "b32b76b6342918c257046425916298b8ba13a130db07f4bb7254609e14d47524",
          "019acd11b54ea58b036a0dfc4b8694a265644faed96c1364239d8d6297828900"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996824173Z",
      "vulnerabilities": {
        "vulnerabilityID": "16d98b70-d063-4cd0-a9e5-8ac6609028a5",
        "line": "141",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/conduits/ConduitsTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "c906f8b0835c0a593f52bd7a97111860cdb47e7b2a11a5544982bed33867aa91",
        "deprecatedHashes": [
          "d5130008ccb1979b47f874bbfb8147f24b5e11181ba01b230d19c0b2627e5c69",
          "4afaacb216bc42d4774c56edde3f56ef370d711648dbec63bccc2a867f93cabc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996830084Z",
      "vulnerabilities": {
        "vulnerabilityID": "a1ed1fc6-1e0a-4f75-987f-182c8421f738",
        "line": "524",
        "column": "113",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Xnio.java",
        "code": "e()));",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "15a765adabe14615fda7750492ae463b8d8cc37341702c62fc8a2b66a8ed2363",
        "deprecatedHashes": [
          "a7f0e1cba16e2adfd08f5241e063a3e5e17408f1166436cd62ed2c7329c7c803",
          "c39b68cb5325fda6b222f61eae77b21084fa430558d7a427c0a5da64a9e95e69"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996830836Z",
      "vulnerabilities": {
        "vulnerabilityID": "78f12784-bb12-4d05-9d7b-834dba555db6",
        "line": "42",
        "column": "93",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/AbstractBlockingWritableByteChannelTest.java",
        "code": "\u0026 Flushable\u003e {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "8978c309c0f7bdd938dbe620972ccdde25f23a81425ac095e2339227518910ef",
        "deprecatedHashes": [
          "62a762bf4072ccd455921d87c6a235ffeb78728d822808044411656695f1e12c",
          "048217e66b992530a19fbca3e1c6b6eac01c86d2c48283844d8c42ad4f4b4132"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996831567Z",
      "vulnerabilities": {
        "vulnerabilityID": "a10fbdcf-1e62-4795-8afa-4dd94d764bb6",
        "line": "449",
        "column": "73",
        "confidence": "LOW",
        "file": "nio-impl/src/main/java/org/xnio/nio/NioTcpServer.java",
        "code": "return String.format(\"TCP server (NIO) \u003c%s\u003e\", Integer.toHexString(hashCode()));",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "21c183a6bb99ab88033d1b1d2b8cf5c7da8cf1391ed23416b0c22f87fcb054f1",
        "deprecatedHashes": [
          "174c7e18e956a149731e57e982e61b75d3aefafa1e96ee23afc79bd02084d914",
          "1b88b08df3b28a278c063667a8a188b6d7018ff773798897401dee4249fd34f5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996858908Z",
      "vulnerabilities": {
        "vulnerabilityID": "946a99a1-fe78-4261-bfc9-aeaffac385b6",
        "line": "137",
        "column": "34",
        "confidence": "LOW",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioStartTLSTcpChannelTestCase.java",
        "code": "} catch (Exception exception) {}",
        "details": "(1/1) * Possible vulnerability detected: Information Exposure Through An Error Message\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. For more information checkout the CWE-209 (https://cwe.mitre.org/data/definitions/209.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-63",
        "vulnHash": "f81c3d00973c1780913d8774cc6376add7cd1fb2bbb4f75abd0a676b49d7091f",
        "deprecatedHashes": [
          "6be24f28cbe73e04d57bd42e1ce93d8e4a59bdb1815fe17d43e99f5d8a77b19d",
          "2c54bb8bb59ecad64e621bc2b705d9edfba09da4e024ac67330c3cb2486e6719"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996882032Z",
      "vulnerabilities": {
        "vulnerabilityID": "3ca8d189-2c6a-48c0-82c7-064e83ca3161",
        "line": "61",
        "column": "40",
        "confidence": "LOW",
        "file": "nio-impl/src/main/java/org/xnio/nio/NioXnio.java",
        "code": "final String bugLevel = System.getProperty(\"sun.nio.ch.bugLevel\");",
        "details": "(1/1) * Possible vulnerability detected: Classes should not be loaded dynamically\nDynamically loaded classes could contain malicious code executed by a static class initializer. I.E. you wouldn't even have to instantiate or explicitly invoke methods on such classes to be vulnerable to an attack. For more information checkout the CWE-326 (https://cwe.mitre.org/data/definitions/326.html) advisory",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-85",
        "vulnHash": "f422d07c7c74c325fa4367a78fe43568ea1b49288a104aa8f708b62226241aae",
        "deprecatedHashes": [
          "8ecc8f527fb93ab87da6715935b0799d20cc36472e6cb3d9b2afedd52cced83f",
          "b3a2a5166b3c2b6ca166dc85d9a44d09c2384305fd6c5db38ea20a4460760d9f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996884216Z",
      "vulnerabilities": {
        "vulnerabilityID": "866be122-2d5b-4af1-a4b2-bb01d3b80022",
        "line": "202",
        "column": "30",
        "confidence": "LOW",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/AbstractStreamSinkSourceChannelTest.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "02c7e81512e96f38fab462a588014fbd81d06af937fb85795d466b6a9d9f231c",
        "deprecatedHashes": [
          "de507ced17f8abf70929e4d7081b87f4a903bf055ae5a6c378f7ed8dfde595e7",
          "6e7d8b14dd399c5e0e83261dd5a7e09cdc392b6edcd8b8e6ee9b19dc5aed0678"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996884967Z",
      "vulnerabilities": {
        "vulnerabilityID": "06c58199-d635-4b2f-9427-642c7b89a7a1",
        "line": "246",
        "column": "30",
        "confidence": "LOW",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/AbstractStreamSinkSourceChannelTest.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "1d5984dee58f3860103da08e6ae579f220800740c9fad9011a57863036b40723",
        "deprecatedHashes": [
          "7df2c81b1e18a1f05d190919535d18db967787b5ef16e6cc8179e8e0708ca003",
          "cbbc0ddea55c34fe058ff2c29a500b1c9053759238281f87505dd1f2328f9a63"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99688643Z",
      "vulnerabilities": {
        "vulnerabilityID": "f2327f65-b04e-4f9f-b771-65fb7348c574",
        "line": "420",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(emptyMap1.hashCode(), emptyMap1.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f6e387a3aac5b7ed86c2749046461737bceafc95e123cf88fc64666dbb118f8b",
        "deprecatedHashes": [
          "bca2bea5f4616ee594928b6acf1ff66780de24072e2789f9d2e8b62182ff2647",
          "2881073a85e0cfaa2471714a077c68c54155090d0343a4d3bfd231cf5273e025"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996887241Z",
      "vulnerabilities": {
        "vulnerabilityID": "ded02a58-e8b9-4bd6-b9a8-e8ad39571379",
        "line": "420",
        "column": "52",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(emptyMap1.hashCode(), emptyMap1.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f6e387a3aac5b7ed86c2749046461737bceafc95e123cf88fc64666dbb118f8b",
        "deprecatedHashes": [
          "bca2bea5f4616ee594928b6acf1ff66780de24072e2789f9d2e8b62182ff2647",
          "2881073a85e0cfaa2471714a077c68c54155090d0343a4d3bfd231cf5273e025"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996887972Z",
      "vulnerabilities": {
        "vulnerabilityID": "9c1c9cfb-a094-4c81-9f10-d196cd24ba28",
        "line": "421",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(emptyMap2.hashCode(), emptyMap2.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "8ecf9999682e72073e51a22282694319434ca45d52cd9ea9cf3997ca12f4e3ec",
        "deprecatedHashes": [
          "f4edb379800740336c595634084188e816b8fdcb2152dd0618f95824f5bea4ba",
          "699cd7125ae8f8b9cd75f5e03b8a1266a0772959b75df958fde5cc328f64f933"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996888704Z",
      "vulnerabilities": {
        "vulnerabilityID": "77638d30-7ef8-488e-a4ba-8531d86a7b4f",
        "line": "421",
        "column": "52",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(emptyMap2.hashCode(), emptyMap2.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "8ecf9999682e72073e51a22282694319434ca45d52cd9ea9cf3997ca12f4e3ec",
        "deprecatedHashes": [
          "f4edb379800740336c595634084188e816b8fdcb2152dd0618f95824f5bea4ba",
          "699cd7125ae8f8b9cd75f5e03b8a1266a0772959b75df958fde5cc328f64f933"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996889425Z",
      "vulnerabilities": {
        "vulnerabilityID": "db6ece40-3b01-4607-823a-21b47bffbabf",
        "line": "422",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(emptyMap1.hashCode(), emptyMap2.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "6e6f8b95f104543b90e8a5693e086e6932a78876b63b0ba64251186b761df9a5",
        "deprecatedHashes": [
          "2638f3c28ae1edccb0beb0beb62b2a7a58193cf94b8f613943e93b503872b2e2",
          "f1754cc468df59f7721deb72ba1c3224b5a17026d6f7d04bb16d7f113efcd224"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996890147Z",
      "vulnerabilities": {
        "vulnerabilityID": "b934138f-bcfa-4e9a-aecf-d5d518e34faa",
        "line": "422",
        "column": "52",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(emptyMap1.hashCode(), emptyMap2.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "6e6f8b95f104543b90e8a5693e086e6932a78876b63b0ba64251186b761df9a5",
        "deprecatedHashes": [
          "2638f3c28ae1edccb0beb0beb62b2a7a58193cf94b8f613943e93b503872b2e2",
          "f1754cc468df59f7721deb72ba1c3224b5a17026d6f7d04bb16d7f113efcd224"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996890878Z",
      "vulnerabilities": {
        "vulnerabilityID": "6b20b445-bd6d-47cf-ab1e-727a661cb04e",
        "line": "436",
        "column": "31",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(optionMap1.hashCode(), optionMap2.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "666fc83b8e6046c7f463f282151d49f3f6d9eae5f70d1658f0b4dd63c00694fd",
        "deprecatedHashes": [
          "1b4c7425a99b91cd67024097f99e230575aa7f3abb0e4b6a3c1610d6587d6ddf",
          "119e45b75b2188627377c665582be14c7e4aafc4ffcc95dc7bfb2e23ea873385"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996891609Z",
      "vulnerabilities": {
        "vulnerabilityID": "2ad3de55-76bf-47c8-bc32-36fb259f6c5a",
        "line": "436",
        "column": "54",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(optionMap1.hashCode(), optionMap2.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "666fc83b8e6046c7f463f282151d49f3f6d9eae5f70d1658f0b4dd63c00694fd",
        "deprecatedHashes": [
          "1b4c7425a99b91cd67024097f99e230575aa7f3abb0e4b6a3c1610d6587d6ddf",
          "119e45b75b2188627377c665582be14c7e4aafc4ffcc95dc7bfb2e23ea873385"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996892341Z",
      "vulnerabilities": {
        "vulnerabilityID": "f9824ac0-4cce-46ff-9f90-5dac0d20f6eb",
        "line": "437",
        "column": "31",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(optionMap2.hashCode(), optionMap1.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "d62cc5c85b82ece00f9c0f80de286840d27895da725a0855770bd94512983bca",
        "deprecatedHashes": [
          "0eec77cc306d0c17566c1422edf8460d56cd401adba54ec588f3ff655131c518",
          "64b83ae554f32fdb893321f374e81b1f34946f38ae1e2bee100749e70c475b41"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996893122Z",
      "vulnerabilities": {
        "vulnerabilityID": "f49f9407-24b8-4292-b8e2-32b5040fc458",
        "line": "437",
        "column": "54",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(optionMap2.hashCode(), optionMap1.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "d62cc5c85b82ece00f9c0f80de286840d27895da725a0855770bd94512983bca",
        "deprecatedHashes": [
          "0eec77cc306d0c17566c1422edf8460d56cd401adba54ec588f3ff655131c518",
          "64b83ae554f32fdb893321f374e81b1f34946f38ae1e2bee100749e70c475b41"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996893854Z",
      "vulnerabilities": {
        "vulnerabilityID": "20043207-8141-4126-bc8a-6df265c6e259",
        "line": "438",
        "column": "31",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(optionMap1.hashCode(), optionMap1.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "464edc9de18690ef47f7f0720f55abad2a94d114e03c99ca54450c40fee38ae0",
        "deprecatedHashes": [
          "2305f69b3bcd843131637b54ee8c113afb1499834e67b93f08682e9680c144d5",
          "de138b8d6d66a239e8714a923d168f004881f86fdbc765d0dafe767825f28500"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996894575Z",
      "vulnerabilities": {
        "vulnerabilityID": "167fd843-f5f9-4659-a14f-674d44d42420",
        "line": "438",
        "column": "54",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(optionMap1.hashCode(), optionMap1.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "464edc9de18690ef47f7f0720f55abad2a94d114e03c99ca54450c40fee38ae0",
        "deprecatedHashes": [
          "2305f69b3bcd843131637b54ee8c113afb1499834e67b93f08682e9680c144d5",
          "de138b8d6d66a239e8714a923d168f004881f86fdbc765d0dafe767825f28500"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996895306Z",
      "vulnerabilities": {
        "vulnerabilityID": "7765897f-497d-42dc-84a4-8f8fb7f9d474",
        "line": "439",
        "column": "31",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(optionMap2.hashCode(), optionMap2.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "5c40daac5ef04af77d6d09385b50f0a09751d3302e1333695f3a1a399b74945f",
        "deprecatedHashes": [
          "c92247903eb3d29b28f1d71348904ea856525d1529d59d2599ba51287a4b1bb0",
          "3df54c792a99e0f4e211f1acbc6a774b3584e3e145e709ac6f502af3ac2b3109"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996896038Z",
      "vulnerabilities": {
        "vulnerabilityID": "d73932da-224b-4503-b1bf-31bebe0d860f",
        "line": "439",
        "column": "54",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionMapTestCase.java",
        "code": "assertEquals(optionMap2.hashCode(), optionMap2.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "5c40daac5ef04af77d6d09385b50f0a09751d3302e1333695f3a1a399b74945f",
        "deprecatedHashes": [
          "c92247903eb3d29b28f1d71348904ea856525d1529d59d2599ba51287a4b1bb0",
          "3df54c792a99e0f4e211f1acbc6a774b3584e3e145e709ac6f502af3ac2b3109"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996896759Z",
      "vulnerabilities": {
        "vulnerabilityID": "a6d6832b-f55a-45ed-a53f-679737c091d0",
        "line": "152",
        "column": "34",
        "confidence": "LOW",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioStartTLSTcpConnectionTestCase.java",
        "code": "} catch (Exception exception) {}",
        "details": "(1/1) * Possible vulnerability detected: Information Exposure Through An Error Message\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. For more information checkout the CWE-209 (https://cwe.mitre.org/data/definitions/209.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-63",
        "vulnHash": "98ebda4ad7f80ee6ebbbc7de547aea40e44f142b045ea8571d21762bdd1bc0c6",
        "deprecatedHashes": [
          "6d4e28dbbc6c83cba9ecc3e325acf0295cff772a899ec75e660959de4b40e650",
          "0a06f3f2ff6e902edb50d552f590df22bdf7965956f728e7af93da70f1a2a029"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996915254Z",
      "vulnerabilities": {
        "vulnerabilityID": "f6569fba-7906-46c7-8eee-bd05324ac553",
        "line": "112",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a1e38e4f95f6938b88c7b0454295f1ee5b7901e512476e5aae5cab54bfb38d41",
        "deprecatedHashes": [
          "009aca6c37131b29b733b6530ef6106d96fd2e43bf4ac07d30761970561bad7f",
          "4e6ed29e4344a47eb364408b10e2488c8b974437cfc3aadcff914026279537b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996915985Z",
      "vulnerabilities": {
        "vulnerabilityID": "ff6f5f4a-c77b-447f-be27-6b08b5c02ae3",
        "line": "113",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "23f5850285ff3bf494c5919c136384cbf7ad96c8ccd06876a2987234ef30feed",
        "deprecatedHashes": [
          "a753680a7af9b829db11075790697f1b271b1992551fc99d6d00fe3456d940a9",
          "bb30e89a768f3e9cb6ca3c4c67295ea59a8ec0451bf4e60283f67f2d49f58d3e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996916766Z",
      "vulnerabilities": {
        "vulnerabilityID": "04c0d424-940c-4703-af5a-65153df7f45b",
        "line": "113",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "23f5850285ff3bf494c5919c136384cbf7ad96c8ccd06876a2987234ef30feed",
        "deprecatedHashes": [
          "a753680a7af9b829db11075790697f1b271b1992551fc99d6d00fe3456d940a9",
          "bb30e89a768f3e9cb6ca3c4c67295ea59a8ec0451bf4e60283f67f2d49f58d3e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996917498Z",
      "vulnerabilities": {
        "vulnerabilityID": "bf6c09ba-5f08-4b97-887e-94b359991212",
        "line": "141",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "3240aad891815c2a21760cce7c45b9b5a41935f18a1f8b174d2e696aa058372b",
        "deprecatedHashes": [
          "87f6a485f0cfb5c5e123b1a4938c18c06b76975d3b8166054b3a16de1b76f776",
          "0bb9c03c5713e81cf96c289e8659ce8679206603b817ad4cd6629837252b6c8d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996918229Z",
      "vulnerabilities": {
        "vulnerabilityID": "6bbdf832-42d9-4837-bc36-2d8a0a9929e3",
        "line": "142",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "0cbdce1b9ae6ac8961af48337ed00c5da8ed4cc80fb6819fd4b4649f9e08d9c6",
        "deprecatedHashes": [
          "60e1a117fe1dcff3acb407609748082e61ac5dd1c9d9cc30e22521748a7f5d88",
          "a07a7e30410f0b150c09f992492df3b56ec189776bbc3c25804acd4ae683a558"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99691895Z",
      "vulnerabilities": {
        "vulnerabilityID": "52d525e1-4a76-4252-89ec-fc0f08efd24a",
        "line": "142",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "0cbdce1b9ae6ac8961af48337ed00c5da8ed4cc80fb6819fd4b4649f9e08d9c6",
        "deprecatedHashes": [
          "60e1a117fe1dcff3acb407609748082e61ac5dd1c9d9cc30e22521748a7f5d88",
          "a07a7e30410f0b150c09f992492df3b56ec189776bbc3c25804acd4ae683a558"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996919692Z",
      "vulnerabilities": {
        "vulnerabilityID": "5fa42263-05a5-47bc-a377-592c57e6aa0d",
        "line": "176",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e0664821d8883d56decbcb094d64ed31be1e63ec4a825f638f6124b36f24ddaa",
        "deprecatedHashes": [
          "af482f198428e9fb65f70b904c9ba915177d3456d645c482317397686f935eb1",
          "347ea0225ba7474c9af47c2b38718e9d5e12804cdcd09cc0fcc852c4a7339277"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996920423Z",
      "vulnerabilities": {
        "vulnerabilityID": "878b360b-5953-4b86-a0b7-d8479fd450d8",
        "line": "177",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f1beb044d8f8b3d603572ecfd01d151da94ab5446b5d6f149ef3ea5ad845e4f1",
        "deprecatedHashes": [
          "d627010f48bd8f7b98019f05ab3e68d9b430f5dffa6611c117a1cdc9001ad574",
          "5d6b116257aa2972f6b49cb58f82e9b6e0a0d6fe3618a71daaf7fecf845f1ed1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996921145Z",
      "vulnerabilities": {
        "vulnerabilityID": "77920966-35ad-43cf-b765-e4af9459bf80",
        "line": "177",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f1beb044d8f8b3d603572ecfd01d151da94ab5446b5d6f149ef3ea5ad845e4f1",
        "deprecatedHashes": [
          "d627010f48bd8f7b98019f05ab3e68d9b430f5dffa6611c117a1cdc9001ad574",
          "5d6b116257aa2972f6b49cb58f82e9b6e0a0d6fe3618a71daaf7fecf845f1ed1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996921876Z",
      "vulnerabilities": {
        "vulnerabilityID": "1a9c3ae2-9132-4c8e-ae35-f24cc5a160c5",
        "line": "203",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "e0b7f3834d4838ecc472eff184a411e6b729c08d8e6becd115f7e765a696b909",
        "deprecatedHashes": [
          "6b88b191850636b2c213e82f5399904717fb5080b0db949f00da689b412657cb",
          "71d627b32ece644868844537242a4bf8b667d324a0af14cb02e22757a29e8a55"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996922668Z",
      "vulnerabilities": {
        "vulnerabilityID": "133fe739-8d8e-4cbc-a7ec-1c004f03eebb",
        "line": "204",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "bdc9fb4fcf2b739f6fd499208e856fbbc9013ca115bc4d4c7afb5592e1452854",
        "deprecatedHashes": [
          "8f66f800d92bc49e5b718839532a52f6d33c4d2b05fa44ee892bab8a489a9d2c",
          "54d539008bcb2c8525fa6f9ee84d21a71759d07ff66ef1ae83b00db466a10837"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996923389Z",
      "vulnerabilities": {
        "vulnerabilityID": "fe7b5e10-ae13-4012-883f-75913d393d66",
        "line": "204",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "bdc9fb4fcf2b739f6fd499208e856fbbc9013ca115bc4d4c7afb5592e1452854",
        "deprecatedHashes": [
          "8f66f800d92bc49e5b718839532a52f6d33c4d2b05fa44ee892bab8a489a9d2c",
          "54d539008bcb2c8525fa6f9ee84d21a71759d07ff66ef1ae83b00db466a10837"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99692412Z",
      "vulnerabilities": {
        "vulnerabilityID": "6478afcf-7b6d-4f66-83d7-9d3c62793aad",
        "line": "238",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "9e92db492538e5b0221f647a9eb999401edea58e6dd964992b1f2887b60da986",
        "deprecatedHashes": [
          "bda112566baefbb9601859428b63a0061e58c62a2a9577c246101b5a74850b73",
          "ed7ae6811c6bb82a2bef16bdb2a0447bc3fed672a2aafea72b435bf1314fc0d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996924842Z",
      "vulnerabilities": {
        "vulnerabilityID": "5b86bf88-887b-494f-aabe-2bf1946fd94e",
        "line": "239",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "c26c2bcb969374fa8bbe1cdabb0cc0412bf2fb2cc155d2c8bf5548d59c768726",
        "deprecatedHashes": [
          "ce7282ee88790c2277ec0d117a7ca0b86c62944529cb0289e976431615ca1ca9",
          "4a9f4ae8ee7cdafbfdd737e2363929b9d3e0c0ec05b83962a0bea6b9ce980c10"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996925593Z",
      "vulnerabilities": {
        "vulnerabilityID": "787791bf-d70d-4077-bfc5-885fb9bc1742",
        "line": "239",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "c26c2bcb969374fa8bbe1cdabb0cc0412bf2fb2cc155d2c8bf5548d59c768726",
        "deprecatedHashes": [
          "ce7282ee88790c2277ec0d117a7ca0b86c62944529cb0289e976431615ca1ca9",
          "4a9f4ae8ee7cdafbfdd737e2363929b9d3e0c0ec05b83962a0bea6b9ce980c10"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996926324Z",
      "vulnerabilities": {
        "vulnerabilityID": "497b54ab-37c2-46fa-ba8f-cf05e1bafbbc",
        "line": "273",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "64fc3ab5e438c43b7f84c52649f6d5ae8902c614fee391ee8fc039137c9d3ba7",
        "deprecatedHashes": [
          "7c135ac5eafcf8677eb3e87ed2cde2269b8141e36909cdf354aa68b75432fd62",
          "e4d7b223c58f4cc530d99793fcf03d7c1871b09613379c3d711bfdeced0659cb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996927056Z",
      "vulnerabilities": {
        "vulnerabilityID": "01d83d9e-584a-4321-b27e-3c29557df781",
        "line": "274",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a6ed5adad1b400ef563adfc7c907c3ee1a19ecda3a6a737b338a5dffe5e4e936",
        "deprecatedHashes": [
          "05137471d80d328365b1169469ea2413e076e0d9246d71332159d9b192ae740c",
          "cd7f38886a5979a1ce4b066481ec7eec7c39d9ecfaa752c7919bc13b5dd809ff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996927777Z",
      "vulnerabilities": {
        "vulnerabilityID": "09cc0962-a2d6-4bae-a0c9-825efc6e62f3",
        "line": "274",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a6ed5adad1b400ef563adfc7c907c3ee1a19ecda3a6a737b338a5dffe5e4e936",
        "deprecatedHashes": [
          "05137471d80d328365b1169469ea2413e076e0d9246d71332159d9b192ae740c",
          "cd7f38886a5979a1ce4b066481ec7eec7c39d9ecfaa752c7919bc13b5dd809ff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996928559Z",
      "vulnerabilities": {
        "vulnerabilityID": "6ca57043-94b3-4267-81bf-77e19aa0577d",
        "line": "308",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "538cd28dfe11990987005ef98d0c8e1c04ba6c9576d822a7ce7c907ff8c41865",
        "deprecatedHashes": [
          "344d441d77d70df435c375335861b505aa491195da732a4eeebb08be78e507dd",
          "35cff7f16b0515f01a344118f38599942c183cca362cd9ec416dd8dda8b48ef2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99692929Z",
      "vulnerabilities": {
        "vulnerabilityID": "b002182f-74b2-478f-9863-d035fde4fea1",
        "line": "309",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "caed6286b71f5ff3f4472221db623892efd510b45e16a8c37a4298ee2621f6ed",
        "deprecatedHashes": [
          "2cfc78d22cefdc9b515c221c4e1e0fed292985372f573c255091341870f90abe",
          "79f462465aeb6db2ec11d52f7f553ada43855a53a34a6ffa08fd0b48f0d6472b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996930021Z",
      "vulnerabilities": {
        "vulnerabilityID": "72bb5820-554a-4873-9c0b-530b6fd007e1",
        "line": "309",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "caed6286b71f5ff3f4472221db623892efd510b45e16a8c37a4298ee2621f6ed",
        "deprecatedHashes": [
          "2cfc78d22cefdc9b515c221c4e1e0fed292985372f573c255091341870f90abe",
          "79f462465aeb6db2ec11d52f7f553ada43855a53a34a6ffa08fd0b48f0d6472b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996930753Z",
      "vulnerabilities": {
        "vulnerabilityID": "1592ad52-e25c-4b30-8710-53a432c71050",
        "line": "336",
        "column": "14",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// tet hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "628e997e732e96b254e6d7440705bf9d3caf4f457daef58323308d4f632c12a1",
        "deprecatedHashes": [
          "91e501617694ddf40f29f3660340460ee947a247c423bbf84853b1225d69f941",
          "42b2d9b01b74ae96eab03c8c4428ef4c27fec3b349be0874e540ba8a20fc324c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996931474Z",
      "vulnerabilities": {
        "vulnerabilityID": "56afc997-a439-45c0-b6cf-f12057e33e1c",
        "line": "337",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "b257bf809e84f04a13c18c595c5bdf2de4b9895d951e4a545fee2161fc5514b9",
        "deprecatedHashes": [
          "912ab571c1b5dec4e2612de601f7c67ddf51b1b627c2727d97aeba78b7d3e7a5",
          "8a7a5fb698f1b3626380e89df3787b73d0559dab11ea618b857e24b3ea1b5fef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996932235Z",
      "vulnerabilities": {
        "vulnerabilityID": "d8874be3-3ab7-404e-a353-74b2daf7f52f",
        "line": "337",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "b257bf809e84f04a13c18c595c5bdf2de4b9895d951e4a545fee2161fc5514b9",
        "deprecatedHashes": [
          "912ab571c1b5dec4e2612de601f7c67ddf51b1b627c2727d97aeba78b7d3e7a5",
          "8a7a5fb698f1b3626380e89df3787b73d0559dab11ea618b857e24b3ea1b5fef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996932967Z",
      "vulnerabilities": {
        "vulnerabilityID": "79d81fea-84d9-473c-8a7b-e6ca32ab3a13",
        "line": "374",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "5acc53b8358decf1ad9641ea10f2e416ccc9edcc8a6d69cbc8bcb631cd1cc406",
        "deprecatedHashes": [
          "a2f84a0dcdca7c2681d6b660c7f2647ec0def99466f3cef80fc7853035c0723f",
          "fa7464848f71f56d85265ab4256b111323000d1f65504e81b4e8bf5f31c27465"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996933708Z",
      "vulnerabilities": {
        "vulnerabilityID": "0b4eadfe-3d49-4d4a-b742-24183fc4a4dd",
        "line": "375",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "710f5ec3fc508ea4951e72f38ce3b4cc0ea0912dd000bd1806cd857f8bf0672e",
        "deprecatedHashes": [
          "b39b68b786cbc34a5317d283a299f5b9a741e07a25c50e729460b2af6775ff43",
          "6cd5e15770bcc91cc982a052dea7b27c78220323b587933ab707da2ba2143252"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.9969345Z",
      "vulnerabilities": {
        "vulnerabilityID": "d7586c08-13cb-4e7d-bcc0-bee9cf10c809",
        "line": "375",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "710f5ec3fc508ea4951e72f38ce3b4cc0ea0912dd000bd1806cd857f8bf0672e",
        "deprecatedHashes": [
          "b39b68b786cbc34a5317d283a299f5b9a741e07a25c50e729460b2af6775ff43",
          "6cd5e15770bcc91cc982a052dea7b27c78220323b587933ab707da2ba2143252"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996935231Z",
      "vulnerabilities": {
        "vulnerabilityID": "5e69cfb6-df3f-4be9-864b-a2c1982f4eec",
        "line": "407",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "822aa5a633955bf392263f226bddbcca77eac1b2f39d82dcdbb38ffc3b1f9632",
        "deprecatedHashes": [
          "9b44fcbfb09a1dfd1f38d7bc94dd138b60406f95d91387e2c788211becfa5e83",
          "34c49913ac4bcca454b86abaa39b6135b91afc4d5cdce116cb4b15d60b885bbc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996935962Z",
      "vulnerabilities": {
        "vulnerabilityID": "62c6139c-eab9-4448-a167-4747822d1182",
        "line": "408",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a53a01fd1937ba424d9b7015b39cb6bbb8528220700e67a5c1cc4644e76d1ef9",
        "deprecatedHashes": [
          "05d41e40da9785673b789c8c6d53fecea47761b95985d26b01d66c625033406c",
          "2cdee10e39f17aaa200602b4c29ce0a0e016045798dbc818584f2afb0ab6c1b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996936684Z",
      "vulnerabilities": {
        "vulnerabilityID": "9e804a0f-f09d-4cc0-850b-80b30ef03678",
        "line": "408",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a53a01fd1937ba424d9b7015b39cb6bbb8528220700e67a5c1cc4644e76d1ef9",
        "deprecatedHashes": [
          "05d41e40da9785673b789c8c6d53fecea47761b95985d26b01d66c625033406c",
          "2cdee10e39f17aaa200602b4c29ce0a0e016045798dbc818584f2afb0ab6c1b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996937415Z",
      "vulnerabilities": {
        "vulnerabilityID": "684b4e9e-e683-446e-854b-61316f0456d7",
        "line": "512",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "c0c67f78aad6419869d5a99b3d2627a45b463e47deb65da12bcc742d4205c4ba",
        "deprecatedHashes": [
          "c3893fa81b56bf395914d23c19e18659cf120e0db4fa70e4b7bfcc78a5d70452",
          "6aa4ea2325b6e59bf07cdb0d986c3fdb199d9fbecde5d3b73a4373a014c5907f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996938146Z",
      "vulnerabilities": {
        "vulnerabilityID": "de89423a-26fe-475a-ae9a-acad0a2a07ab",
        "line": "513",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "86402ff48913676b86ec7d4419927aa1e7bc403dd6eb01dc8c8ecf67ec344be7",
        "deprecatedHashes": [
          "ac80e6827a94787aa4f982fdd20b560cecf1a4f8fa341f309b3f14bc7de43a53",
          "4fe9da7618fc0e87cc74bbdfd7fdb06511e3d047cf85f7f1addb809d593052a0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996938888Z",
      "vulnerabilities": {
        "vulnerabilityID": "3f3c2d49-5966-475d-b39f-15251e667a21",
        "line": "513",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "86402ff48913676b86ec7d4419927aa1e7bc403dd6eb01dc8c8ecf67ec344be7",
        "deprecatedHashes": [
          "ac80e6827a94787aa4f982fdd20b560cecf1a4f8fa341f309b3f14bc7de43a53",
          "4fe9da7618fc0e87cc74bbdfd7fdb06511e3d047cf85f7f1addb809d593052a0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996939609Z",
      "vulnerabilities": {
        "vulnerabilityID": "a5304985-ba8b-4ade-a886-59fde67d778a",
        "line": "609",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "d1702214507cbac96251e7c6ccf09bdcde9482eaf8d152f209e20f5e014072ae",
        "deprecatedHashes": [
          "29f7bd5553eb12dac8751c12212d7b59bb906b288c9ff5e69bd787db4a19aa9e",
          "db9212c3660f68e5155a64ab3c389eac0381e5be34d10f9b5bf47496affce792"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996940401Z",
      "vulnerabilities": {
        "vulnerabilityID": "ccfae9ca-96e8-44c5-9f62-807823d21011",
        "line": "610",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "883e52b924c72730587f0c705185590442ab98aa722840aa7ada4c9a68d1d41c",
        "deprecatedHashes": [
          "9360c486fdca096be84c91807d048913b464785fd985828bfc7c979428608205",
          "fef18fb382a90ac7a564fe388620a35b0fa247094034a7619e2fe8a2df6dac59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996941132Z",
      "vulnerabilities": {
        "vulnerabilityID": "206a3572-f369-4ead-b39a-eeb99c5a06bd",
        "line": "610",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "883e52b924c72730587f0c705185590442ab98aa722840aa7ada4c9a68d1d41c",
        "deprecatedHashes": [
          "9360c486fdca096be84c91807d048913b464785fd985828bfc7c979428608205",
          "fef18fb382a90ac7a564fe388620a35b0fa247094034a7619e2fe8a2df6dac59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996941924Z",
      "vulnerabilities": {
        "vulnerabilityID": "3dabe3d6-8b51-4dec-9d57-d823175787ac",
        "line": "730",
        "column": "15",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "// test hashCode()",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "3a109bdc58ca2a475fe2b10e8ab8c3ee0cd01d48aeeb6116d31f57d36c8e636d",
        "deprecatedHashes": [
          "030330c582fef1ac6edea32b0900d4937d98eb3dbd2d55a7fb294da6b24e54d8",
          "309b7248ed479b60f4bef2a1e81477684d21df0fb98ff1d3033c207839cb90e7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996942655Z",
      "vulnerabilities": {
        "vulnerabilityID": "381a09e0-db66-4e37-8c14-2ff2f44719a4",
        "line": "731",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "b8f65bec27cd1a3fe341f0039b1d2332ec3e7593a4058f5da7f54a4dfc75353c",
        "deprecatedHashes": [
          "ae558a6c9be61335426be2361d40068a0f45b6e2a1bbfd7d001a41d32c860d3b",
          "dc6ccb0aad20151108c1cb94804f333b4b0d83f060f574746b86105ecb75ff13"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996943386Z",
      "vulnerabilities": {
        "vulnerabilityID": "8ea43b0a-b08d-4703-b73e-509d2130e59f",
        "line": "731",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/OptionTestCase.java",
        "code": "assertEquals(option.hashCode(), option.hashCode());",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "b8f65bec27cd1a3fe341f0039b1d2332ec3e7593a4058f5da7f54a4dfc75353c",
        "deprecatedHashes": [
          "ae558a6c9be61335426be2361d40068a0f45b6e2a1bbfd7d001a41d32c860d3b",
          "dc6ccb0aad20151108c1cb94804f333b4b0d83f060f574746b86105ecb75ff13"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996944108Z",
      "vulnerabilities": {
        "vulnerabilityID": "f7fd0a56-d2fa-488e-9d75-058f1aeaa99b",
        "line": "811",
        "column": "53",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/XnioWorkerTestCase.java",
        "code": "public XnioIoThread getIoThread(final int hashCode) {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "494b7af9087c4778c2fcc54bdb7f3b6f9cb1c4f24b15247d29f76572aa7aceca",
        "deprecatedHashes": [
          "5ca1cff226bbb722303da5fbe22aa3c19d6bb41197fc265ad38dfbbccbb2e44a",
          "5a3ef0c4263bd805e386e22054ae1f3ba5e191b6d26a4d515265b04e552b6077"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996944839Z",
      "vulnerabilities": {
        "vulnerabilityID": "4bf0c343-a080-49ae-9eb6-2ba94b9d13fa",
        "line": "289",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/PushBackStreamChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "95b2a29843c9f8d255a617dbb8f29ed4d016b3707417a752883501ada6f5e359",
        "deprecatedHashes": [
          "dac920f128ba4b3ebc88c15f87fd00440d31035d4d24b2313fba80a5303d5b17",
          "bb85ce1881a72d393fb9835f8911a2c707722646e99265bbe0bb0f68304af80d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996945571Z",
      "vulnerabilities": {
        "vulnerabilityID": "3551a2c1-675b-4a2c-9ea4-445cdf3f0e1e",
        "line": "308",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/PushBackStreamChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "fcc59d032490b9854840bdeb688138e2a7b125c4fa567b95fa8221b722d88501",
        "deprecatedHashes": [
          "84fd7d0886b8bdfa63eb784d4e09eadf062e5a159bd097508cd0b424cb863b33",
          "099bae7ad71434eecb2add491707f903818023e497f06a18c2e194d7fb21a340"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996946352Z",
      "vulnerabilities": {
        "vulnerabilityID": "54de8409-6082-4bb3-93cf-d94a0ed2b173",
        "line": "328",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/PushBackStreamChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "16f94b804d716a82433f671ed4ab5f871161d53d76bfd94e725d614eb847b597",
        "deprecatedHashes": [
          "41fd21f5a9018e90af7f8c0523e1817bbee43f407d71e76418eaa3ed23a4d3e0",
          "d8a64cc5013e0f567ce75fe39eb74a0b106fc1df5c9cb07a86a666cd506b7053"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996947083Z",
      "vulnerabilities": {
        "vulnerabilityID": "79e749f0-511c-4320-8011-3b797fb95fc0",
        "line": "355",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/PushBackStreamChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "87d3a46293a8a90a2d0bf95279a5145ede3ec5f9f0296f8efcdbe03b5e22db69",
        "deprecatedHashes": [
          "86267be3ad3fb512d98d358d9010c73ae32da6ff5adea679e4566b99390ab497",
          "60103b48dbfd37a51fa8304203bd60481343867e887209d18134c38c19f61cfd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996947815Z",
      "vulnerabilities": {
        "vulnerabilityID": "bd751823-e154-403b-845f-bc8b8ca920cd",
        "line": "501",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/PushBackStreamChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "2459642655115c1d1dff193aca8ce21044ac474a5c64d76cd882f8abfc9bdd71",
        "deprecatedHashes": [
          "816e0555d49ef3681b7ba2ecf84517f7667a64b33c846e8cd896e4b4ba2d1f4e",
          "5d1bdd92e9d14d3f7d8e361d84072f2bf4de6e68338615fdbd593a77ea9fc798"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996948536Z",
      "vulnerabilities": {
        "vulnerabilityID": "0fc1236f-8215-416b-a4cc-d42e26e469b3",
        "line": "542",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/PushBackStreamChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "ff3427767e5499eeb51a4047ccf553391cdac8ab033d2b54834547d387001d43",
        "deprecatedHashes": [
          "50db64e5c8455b515b0c5fbbc77f3bb79aebea4a9f7290356f17428e79f88e68",
          "4a641250fa377116fd7b9e6799a0d72c8dd0dd4e94b1f12cc2a68e8c4b94822d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996949267Z",
      "vulnerabilities": {
        "vulnerabilityID": "80d1c545-f710-4f6f-997e-0fca4d42896d",
        "line": "584",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/PushBackStreamChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "c6e1256ee19948b2138063dd93b384a9fe3ae39077e5d5e1ee3fdcbbcbe3793b",
        "deprecatedHashes": [
          "d1d857073e143f820232e171d06c1a2c43001de512b05aab451a7bbc4621fe93",
          "49abae098fc6eaedab49020872c658d10961943e5d1f87f9b4911cdf87a92d6a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996949999Z",
      "vulnerabilities": {
        "vulnerabilityID": "d4e1184c-1d45-48ee-bc1e-2d4a53b71fdb",
        "line": "631",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/PushBackStreamChannelTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "24fed9d53549afcc063f2f010479dba18b3a16ef5e23db6bcb77a61fc5b95b6d",
        "deprecatedHashes": [
          "1445a516a059a85284e5e3cf3dbf968ae6cadaa7b311d92cd267e57be5bfb7dc",
          "d528bd6302bd8aa8c78c854b8b6749f60dd0b947806640986f1380679a8c0c00"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99695073Z",
      "vulnerabilities": {
        "vulnerabilityID": "5893754f-b164-435a-8821-f1ab22a4f7d4",
        "line": "865",
        "column": "14",
        "confidence": "LOW",
        "file": "nio-impl/src/main/java/org/xnio/nio/WorkerThread.java",
        "code": "public int hashCode() {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "ffb833ebaf1660c157bba7d7f32ce33ba054801d7ba19ab1070f382f1422dbd3",
        "deprecatedHashes": [
          "38abc226f289f0d75838b99d30227f1ee93c7feaf19e4405084e0802c89b135c",
          "a1164f1db79cd88d37c33314cccfb3ae17781eef0c7793d12fa18ec1d7aa3935"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996956641Z",
      "vulnerabilities": {
        "vulnerabilityID": "4c6e6a64-921d-4a46-8e8c-8e6e4d6bdf17",
        "line": "32",
        "column": "7",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/IoUtils.java",
        "code": "import java.util.Random;",
        "details": "(1/1) * Possible vulnerability detected: Insecure Random Number Generator\nThe App uses an insecure Random Number Generator. For more information checkout the CWE-330 (https://cwe.mitre.org/data/definitions/330.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-114",
        "vulnHash": "fd8265aab4de7a009034023c6419bc6082bd808b19203f76883b0236418f1f16",
        "deprecatedHashes": [
          "075728c3e5f97627a8c6ce2b12f30d71eb4c587445253ba60f95fe9a72c5ea13",
          "69bfadc9c147352e4d7547dff4c70646c40c6e81a6d5f835c6b66cc2c7a8b592"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996957362Z",
      "vulnerabilities": {
        "vulnerabilityID": "123a4546-726f-4b14-ace5-56d8717fa1c0",
        "line": "57",
        "column": "93",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/IoUtils.java",
        "code": "private final String string = String.format(\"null executor \u003c%s\u003e\", Integer.toHexString(hashCode()));",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "6a81a03404374579e2f0fde500f1d871c8e31d371f7695ca17f5b8abadeb3245",
        "deprecatedHashes": [
          "c55fdb188771078ea0f941e5ed3faa5d0d7ac6ffe86e93c510eb76601ae0f2ae",
          "cf441edb030ed12516732d18d3aaf510359c3fb94f9daf32adc5d7738c6ee9be"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996958154Z",
      "vulnerabilities": {
        "vulnerabilityID": "b7d9462c-3678-4d2a-84de-eed954e3a6c8",
        "line": "68",
        "column": "95",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/IoUtils.java",
        "code": "e()));",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f87da5c6f8dfd10638eba83c3ff1f4bef2fd962ec5805030a38a98d1f5a3bed1",
        "deprecatedHashes": [
          "d0b878e11c10b9068f9f74eaa449a47ffd305c117c73d2e7e42a4de8a69159f6",
          "5a63b88067ccffeadda2aa00d32d0c7c12de0d32c3526c98d17604d837de1b84"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996958875Z",
      "vulnerabilities": {
        "vulnerabilityID": "6a130527-8b51-4f7c-a3fb-9b52e82d04c9",
        "line": "79",
        "column": "94",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/IoUtils.java",
        "code": "private final String string = String.format(\"null closeable \u003c%s\u003e\", Integer.toHexString(hashCode()));",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "8f254828e360e93a3164c76cdefd7a867b484eeacb93d9034d4172ba74a722e4",
        "deprecatedHashes": [
          "7b10cf4f62dfcbf90b980631480e231f6de0360e617df98021be9c3fe9ac2979",
          "5b15aa0b2098d70a5e14f35a003dea6023af4dd8d6ce54fe162419e29f57414c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996959607Z",
      "vulnerabilities": {
        "vulnerabilityID": "73e898d5-9d6b-4855-b761-754541796a7c",
        "line": "400",
        "column": "107",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/IoUtils.java",
        "code": "Future);",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "8cd3bbe1adc69d43dba2c6fc16b020ace596c4e684d470ac8dda32be5f87d04a",
        "deprecatedHashes": [
          "492f3e254776939dba79eb8ca974a9add25107cd144623b6d7c4bb39bfa00e02",
          "10eec2fec93ac32e850bba4074b9ded349e9b033a00ac6fd2266dd65e12e584e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996986086Z",
      "vulnerabilities": {
        "vulnerabilityID": "19050b00-694b-4107-9ffb-8c934be00a53",
        "line": "47",
        "column": "7",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/IoUtilsTestCase.java",
        "code": "import java.util.Random;",
        "details": "(1/1) * Possible vulnerability detected: Insecure Random Number Generator\nThe App uses an insecure Random Number Generator. For more information checkout the CWE-330 (https://cwe.mitre.org/data/definitions/330.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-114",
        "vulnHash": "cd644252df75a1d7cd9dcd41ae45c971f7027950cd87f0f354130ccac588b2ad",
        "deprecatedHashes": [
          "43a4380aac39375f6e0becb86be60901c383ef937e4d058f280a9bbbede92b3b",
          "462bf46b3f307a835adb8358dfde59053c9c37750a7a5b013aa4da232f98e978"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996986828Z",
      "vulnerabilities": {
        "vulnerabilityID": "ecda01fb-8e05-4efa-89d9-dec0d32f2ffd",
        "line": "226",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/IoUtilsTestCase.java",
        "code": "final File file = File.createTempFile(\"foo\", \".zip\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "a6a23c2f94f25cce01d6a158135b29d87b32de3ffb5af064594d5dc06d4cebb2",
        "deprecatedHashes": [
          "6b8455f48dd785977a10421561607b4681fe8472ba6306456eaa22e68485048f",
          "0cf09c8ba91fd8e2e40689316e8ef2fdcac758566e7147a34e38b5fe90d287ec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996987609Z",
      "vulnerabilities": {
        "vulnerabilityID": "41227b47-233a-47e6-b6af-b4d69394b86e",
        "line": "579",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ChannelListenersTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "6cb430dd7400f7e1748af728102fd4fff0068230783c1aae4c21e8afc6c2e868",
        "deprecatedHashes": [
          "cf9bdb5d878b23b1130ae59793dd96e362edab8807b8a0334a2ea569bc19c720",
          "c6e0d1fb287ea9abafbc000aca7725bd179e073ed3936d29f865823b35eb1d50"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996988331Z",
      "vulnerabilities": {
        "vulnerabilityID": "d0e417b9-712f-4005-ac24-8405660fc923",
        "line": "649",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/ChannelListenersTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "6672161405a824f130389db182ca23ed8ec5bb105895b0daaa0564c9464963e3",
        "deprecatedHashes": [
          "f5f5e9f5a5a6b3ff41a64f21f3b55bd9014c1563b2a14a2e195118d24b023b22",
          "d41829a93aeea99edf57598e28d322040f9a36c4ef94b15f2da859dff8857d64"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996989062Z",
      "vulnerabilities": {
        "vulnerabilityID": "f3252e3f-f5e8-4a76-9a54-3d5738aa20b3",
        "line": "774",
        "column": "13",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/XnioWorker.java",
        "code": "* @param hashCode the hash code",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "3b3c6d9235febed6e10e89b73f40904fdaeb22043c47727c692a7bf99011fd41",
        "deprecatedHashes": [
          "8dbd21750104e2e889b92a00a9bd4df460f9395bf39a0c3c87668db2efe762e3",
          "1357412112fbe14bf1d9f4cb1a1d40eab26a55ad61a777260521262c8407a1c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996989793Z",
      "vulnerabilities": {
        "vulnerabilityID": "443f9ae5-fb9e-4b85-9306-b4220b3d01bf",
        "line": "777",
        "column": "48",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/XnioWorker.java",
        "code": "public abstract XnioIoThread getIoThread(int hashCode);",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "bded1da9b1c6fd2dc1fbc778c2f547212391fad10e788ad21503d4bba0a2c690",
        "deprecatedHashes": [
          "101a359cd0fbbfde0f38944053726eaffb631d3992a2b09c036c9ad77233866d",
          "a5cc92fb817fb07537842c61547d8579305c292180947e79c42d4f1243ee302c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996991246Z",
      "vulnerabilities": {
        "vulnerabilityID": "267fa2da-5241-4552-8750-a02ae02e7ad6",
        "line": "479",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/ChannelsTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "0eba1e18d5c0cca006fbcff6c8b85b9c04f55a8d7eb3875e070942a6533578cb",
        "deprecatedHashes": [
          "005d916399e86c638b7540c78e5c15982afa4fa9df08dc72847a0693fa94981a",
          "87f2057346ef966258f8597ea08e64ad9d1a4d6f0d4e83f83a29e9cdb8263e46"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996991978Z",
      "vulnerabilities": {
        "vulnerabilityID": "59303f16-b09e-4523-a1a9-475a2fbcafad",
        "line": "499",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/ChannelsTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "f45d682250f967fc1f5ba39cadf868d6eb376333634099f469406672d2e2ef34",
        "deprecatedHashes": [
          "3e139a50dbcb34c6b955db94b4e449a4cef3149d89dc3cab57774946a5cedf26",
          "3f57dd18ea4967f143ef058b4617b0b4928e8fc99453fe7db1853d4db83aa3d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996992699Z",
      "vulnerabilities": {
        "vulnerabilityID": "f8b5792d-877b-4786-a7d4-4e3fc61a8f6e",
        "line": "523",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/ChannelsTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "4f5e2c6558c591f26735e64061625538e068f69dd8b3d9f64de12f79f9c6bbbb",
        "deprecatedHashes": [
          "7aa8bf205a5de908f5e6ae0c418545064e4e66b829d3eaa0b3f256481dd2ea19",
          "fbe267d73f43f3c075786d39e3fd3a85e48c75eb9ecefbd8bca9c9a5f7754019"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99699349Z",
      "vulnerabilities": {
        "vulnerabilityID": "a0a4f70c-3751-4169-bac2-c92db9b778e6",
        "line": "544",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/channels/ChannelsTestCase.java",
        "code": "final File file = File.createTempFile(\"test\", \".txt\");",
        "details": "(1/1) * Possible vulnerability detected: Prevent Write sensitive information in tmp file\nApp creates temp file. Sensitive information should never be written into a temp file. For more information checkout the CWE-276 (https://cwe.mitre.org/data/definitions/276.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-119",
        "vulnHash": "d5f057cc0b1fa9ab022351b3862e0fc49efa7211caa48b536ba302e80eaa09f9",
        "deprecatedHashes": [
          "93e5ba308bc9bb101a9fc7301476efeedc926260d4586810d25f0b8e78cb790d",
          "19362eb571216904bd314588a6e05e485c257e41386ff9c0d93ae7e50c4931d0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996994953Z",
      "vulnerabilities": {
        "vulnerabilityID": "19778a23-5bd8-4761-982b-ddfd22056d3d",
        "line": "51",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "private transient int hashCode;",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "2cf495df01d2ed2fdd041b2c08a3ce6b1ec9c6bc840f422242eb360372b2e789",
        "deprecatedHashes": [
          "b600ced995b6f188c3be57b25eb9f27fdd853fd1ae8c7a7a9f5b068b10ab8dd0",
          "cfe20f59c1ef70542fd933f25e10fd14aa10778f0716dfc38c98c4033819e250"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996995674Z",
      "vulnerabilities": {
        "vulnerabilityID": "7c13ebd6-6420-49a7-9bb1-60881a540c53",
        "line": "52",
        "column": "25",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "private transient int hashCodeIgnoreCase;",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "012f88acfc18cbbe0ccf87cbf6c4f0d63af41e7fbd76289956a8656c3e0e5854",
        "deprecatedHashes": [
          "02565385e60e6485585db84a920d23ad561f2bd4817e08b16b25a451f52cc975",
          "608bbe279f092c646d82f3679099569fd05f1e3c3a80c8b67babbb6fce2400ac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996996436Z",
      "vulnerabilities": {
        "vulnerabilityID": "bf0c2cb9-8dc0-408d-927b-844a04718a43",
        "line": "427",
        "column": "14",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "public int hashCode() {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "35014c8bce133373011386247ce2876bc797a6d14a6a6e238467268fb5cf723e",
        "deprecatedHashes": [
          "223eece5920004f4da4fcb42c84e3d3757a5d8dc5540172ecdc77f747ba73858",
          "572ca991e922038eabf8d84c6b4d79906e94fd11825cb3c97b68d7de0668c7bf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996997157Z",
      "vulnerabilities": {
        "vulnerabilityID": "79181167-34b6-4ee1-a7ef-df09ba7cfed7",
        "line": "428",
        "column": "11",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "int hashCode = this.hashCode;",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f2d4735ade84562f14246c6058ee7b4581363fe9653b3161979a6bc387e2c4d0",
        "deprecatedHashes": [
          "16215d499c7609e4e2eb7526500934fede62e761a07dbea8529556c85b4b79b4",
          "88eb2c4260ea28a7016f277db3f681785626b57df8efd8fd091b0825672401fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996997918Z",
      "vulnerabilities": {
        "vulnerabilityID": "f13f0e2a-bca3-4ba5-9075-71a7f3286f13",
        "line": "428",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "int hashCode = this.hashCode;",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "f2d4735ade84562f14246c6058ee7b4581363fe9653b3161979a6bc387e2c4d0",
        "deprecatedHashes": [
          "16215d499c7609e4e2eb7526500934fede62e761a07dbea8529556c85b4b79b4",
          "88eb2c4260ea28a7016f277db3f681785626b57df8efd8fd091b0825672401fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99699865Z",
      "vulnerabilities": {
        "vulnerabilityID": "1b20ba8e-20c4-4a73-8925-ba0ef17da686",
        "line": "429",
        "column": "11",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "if (hashCode == 0) {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "6237c32533461e9a0ad6a7ec0e255525882ef795090463241b9d9f4b9ecb3869",
        "deprecatedHashes": [
          "5f3d78b73551b594e75d3a5ceeddbbc2ce1be8ed2e289bfbed672545f99c7c56",
          "7cc501bd21f4a2549f686797653ae28452ede50b55dce65bd51bafafb235829c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996999431Z",
      "vulnerabilities": {
        "vulnerabilityID": "71c6028f-78d2-40f8-b046-b5bba9c845a0",
        "line": "430",
        "column": "16",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "this.hashCode = hashCode = calcHashCode(bytes, offs, len);",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "656ae80398349b2210dc3d4088592982a35d97fbb1fe63bd09b9084cd50b1f21",
        "deprecatedHashes": [
          "4c4dcdb01d87bf910223caff479f34d42a8822d6de483a398032ac06e94bd867",
          "d0b8f2d507354bdcdff2ded37578ae27bd8d3ae5579d75cf9c8b8ba91f43812c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997000183Z",
      "vulnerabilities": {
        "vulnerabilityID": "a7ba73d4-91ae-44ea-9224-e1a38289b1f8",
        "line": "430",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "this.hashCode = hashCode = calcHashCode(bytes, offs, len);",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "656ae80398349b2210dc3d4088592982a35d97fbb1fe63bd09b9084cd50b1f21",
        "deprecatedHashes": [
          "4c4dcdb01d87bf910223caff479f34d42a8822d6de483a398032ac06e94bd867",
          "d0b8f2d507354bdcdff2ded37578ae27bd8d3ae5579d75cf9c8b8ba91f43812c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997000904Z",
      "vulnerabilities": {
        "vulnerabilityID": "07b6b2c6-de7f-4ebb-b526-fe4fb6549616",
        "line": "432",
        "column": "14",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "return hashCode;",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "a49e54fee4db066c589f6c872d3c297307bb4f7b648dbcf771339ba46a37a652",
        "deprecatedHashes": [
          "fa6dfaa6e4d476682bd7dd6c0344ddc337dcb4b0ecb040a9b4dd87baf0d96146",
          "a56fb09f19e7da01b52fef2c117e8da0427d24132fcfcce4d7cb09feb1cc5f41"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997001636Z",
      "vulnerabilities": {
        "vulnerabilityID": "b7727e70-a561-4e54-b9db-be546df3c59c",
        "line": "435",
        "column": "14",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "public int hashCodeIgnoreCase() {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "b5b3b8fe2d503e5dde0557eed7dd270b9a8ee868724d6b2b070823ecd17a1ba7",
        "deprecatedHashes": [
          "32278e3e8ffe2c6b532b4d9502939e0e54cb29f8a336e67e1264d38bc9fe2905",
          "ddc9d8d440199af26de4ecd44a230a3ace5c366ea37aace71b1f7cd415938abd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997002367Z",
      "vulnerabilities": {
        "vulnerabilityID": "3a2cf21d-24c5-47bc-a817-273973734075",
        "line": "436",
        "column": "11",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "int hashCode = this.hashCodeIgnoreCase;",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "422a2ef160823e7e7555bdebedf8bbe55736a5794563a2ad520f37ea1d515f33",
        "deprecatedHashes": [
          "5283ce0dc9d4eea82f256f92e7443776801770ed878e8a6c2a949ce386b44ccf",
          "720cd4efd1429952acee2535d6a70c978367095171c18f85afde73b5610c41dd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997003098Z",
      "vulnerabilities": {
        "vulnerabilityID": "64e39c00-e07f-401a-896b-e5aadfc3fb6d",
        "line": "436",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "int hashCode = this.hashCodeIgnoreCase;",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "422a2ef160823e7e7555bdebedf8bbe55736a5794563a2ad520f37ea1d515f33",
        "deprecatedHashes": [
          "5283ce0dc9d4eea82f256f92e7443776801770ed878e8a6c2a949ce386b44ccf",
          "720cd4efd1429952acee2535d6a70c978367095171c18f85afde73b5610c41dd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99700383Z",
      "vulnerabilities": {
        "vulnerabilityID": "bd5e383f-bd8f-4d2e-8df9-b46f955867a8",
        "line": "437",
        "column": "11",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "if (hashCode == 0) {",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "802e4cb0634aa310543fed7e26d29554cfc09fcbbc19aa66e21b4a31a91300b0",
        "deprecatedHashes": [
          "ed4b5f3e1471d91aa80f88400b49cfb4e9a2b90e30f773067a7466b5a8f123f1",
          "5b99442fd5756bdfd06a8074862707c9a33114953e6b8ff7cbe2396c52b98063"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997004561Z",
      "vulnerabilities": {
        "vulnerabilityID": "c3da5d38-4641-4735-be76-532bb9fba06f",
        "line": "438",
        "column": "16",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "this.hashCodeIgnoreCase = hashCode = calcHashCodeIgnoreCase(bytes, offs, len);",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "152bc679543519cc6d537788e9e07155720f19b684ccbe3550f1429c2f420bc5",
        "deprecatedHashes": [
          "ee6daecd7ed5d043b22979bd1f7e1e2003181982b6910c866578419d6548a444",
          "2d6ea642df82bcc4035850546ffc4310371e7f77b3d49babc0620e00649ad612"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997005343Z",
      "vulnerabilities": {
        "vulnerabilityID": "ff4cdd4a-e497-420a-baa3-f5c3d2f98c0f",
        "line": "438",
        "column": "37",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "this.hashCodeIgnoreCase = hashCode = calcHashCodeIgnoreCase(bytes, offs, len);",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "152bc679543519cc6d537788e9e07155720f19b684ccbe3550f1429c2f420bc5",
        "deprecatedHashes": [
          "ee6daecd7ed5d043b22979bd1f7e1e2003181982b6910c866578419d6548a444",
          "2d6ea642df82bcc4035850546ffc4310371e7f77b3d49babc0620e00649ad612"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997006074Z",
      "vulnerabilities": {
        "vulnerabilityID": "2291e82c-5147-4b3c-ad5f-2226ea6d9e7f",
        "line": "440",
        "column": "14",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "return hashCode;",
        "details": "(1/1) * Possible vulnerability detected: No Default  Hash\nThis App uses  Hash Code. It\"s a weak hash function and should never be used in Secure Crypto Implementation. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-115",
        "vulnHash": "97ea6fdfeecef10d9b31fd606a39c01e02caa88fdb5c3a0690212f98a9c04c40",
        "deprecatedHashes": [
          "c9bb610ab7d17a2b1d0673d26f325127e8a5a80e6eb9763c7fa374ff076259ed",
          "19b667ed8ed3673a103ac8845e18f810056d2e3d923b7ff45474975e21a82b6d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997006805Z",
      "vulnerabilities": {
        "vulnerabilityID": "c110a9ca-0969-4a88-909f-e1dc1d9599fa",
        "line": "73",
        "column": "44",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "hc = (hc \u003c\u003c 5) - hc + (bytes[i] \u0026 0xff);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "cd1e849ba9fe681898dcc3acee5ddfdd95434c058fc19b31a3605605cefc996a",
        "deprecatedHashes": [
          "36d6e86ef1c4435ce8f3cd1c98f84c4e4fe9a64813a6c1c93622ed17be346a96",
          "57f3c4e98875fc03be1e8ea4fd48200c67f4508cfc01312e69c4964fb3740ce6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997007536Z",
      "vulnerabilities": {
        "vulnerabilityID": "9c41ebdf-9ccc-4630-ae06-e997fcc4cb14",
        "line": "82",
        "column": "55",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "hc = (hc \u003c\u003c 5) - hc + (upperCase(bytes[i]) \u0026 0xff);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "4736126ae717e70fd0db7ae7725c9c6699c9b60c2e64a6916be3e5aa8b74587f",
        "deprecatedHashes": [
          "6c25042505add6216bb6e51c6b696bfa2ab170d6ac10808093fc5a5c61c558b0",
          "1d3168aa18fd17c2f0c361a1321e879a1a6d350aca0c7478101c42688674b6aa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997008258Z",
      "vulnerabilities": {
        "vulnerabilityID": "34da3b81-9451-44bf-8898-b42de3b704ee",
        "line": "343",
        "column": "40",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "return b \u003e= 'a' \u0026\u0026 b \u003c= 'z' ? b \u0026 0xDF : b;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "82f50987c505eab47276a9aec7aceadee2e9149b4c8ae6d32151825e5a44f3b6",
        "deprecatedHashes": [
          "c50507210bda853f897c02fd145f68c56d4e6465390fc3218ea46b9d5bcb227d",
          "ae551b2a0a47381a14262e313e0cf6fcacdaa6124d727a61008bfa778b5a503a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997008989Z",
      "vulnerabilities": {
        "vulnerabilityID": "fcd336fe-4fbd-4c12-b3cb-ea8ceb0bd7cb",
        "line": "1319",
        "column": "43",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ByteString.java",
        "code": "return (char) (bytes[index + offs] \u0026 0xff);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "6c90c9445eac0aa22d321c9be7dd3d1b4ade98a77e0d2b212a53028b42cfeae4",
        "deprecatedHashes": [
          "244089c3f0dfb3860d93c1ca10c9cd30814bd1cf47632a1a54ebf58b785f06e9",
          "c37a5af709d152475a6c2f664fe867b6fb952184428bb26da806ae90851176e5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997009721Z",
      "vulnerabilities": {
        "vulnerabilityID": "7230afa2-4b5c-40ae-9adf-b698b4a67626",
        "line": "305",
        "column": "55",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ChannelListeners.java",
        "code": "er.  Used by channel implementations to avoid having to",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "00cac8f9466355e6a5a71ba99c7c11d2051f2d8c4fbfe8217f96a71ef2b32e58",
        "deprecatedHashes": [
          "79b45cf3d741010325c2c60a7b68298f192df1cc3afa3e1149f4a08c8d190714",
          "53e5da53e4aa60338b1da05062017be9a9c59160397263b50065e5c1672fa693"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997010452Z",
      "vulnerabilities": {
        "vulnerabilityID": "1222858a-f6e3-4a44-993c-9ef842b81847",
        "line": "1150",
        "column": "97",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/ssl/JsseStreamConduit.java",
        "code": "= 0L ? -1L : xfer;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "2e6b802d2862e93aef988c6d4de2c9a4f7224a8e0c90192afd643fbf9f04727f",
        "deprecatedHashes": [
          "1b568606a9dca1d83de0defbfa29eadff84630f580d3837e2cf26fa4722ef98d",
          "c337b4111c242deac27eb3393b0198f008b98dc4a7716ceb5dd77f7104be9630"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997011234Z",
      "vulnerabilities": {
        "vulnerabilityID": "dc6af3af-ccc4-4b1c-8004-de5d442187fa",
        "line": "39",
        "column": "7",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "import java.util.Random;",
        "details": "(1/1) * Possible vulnerability detected: Insecure Random Number Generator\nThe App uses an insecure Random Number Generator. For more information checkout the CWE-330 (https://cwe.mitre.org/data/definitions/330.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-114",
        "vulnHash": "ce3d93ddc4f077f8cd30a4e707c4dcefa4dac6aec91fc5580202b610eb1c7dfd",
        "deprecatedHashes": [
          "3e4498ef7bf9272c634c82e9468709eb9925f0e8a657d8ec61505d830f72aa89",
          "738215918ddd3784295d00a5e2f416011a94152b4b32e23bdb691a37753e43cd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997011965Z",
      "vulnerabilities": {
        "vulnerabilityID": "da0ba804-8e0e-4093-904a-72a39872d8e7",
        "line": "1140",
        "column": "52",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int v = buffer.get(pos++) \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "a647ac5f530310e3320ff0431e39a65804eb7038c0af51559c2cf6546a90225e",
        "deprecatedHashes": [
          "60c54ce3285c733e4d6a49f4930c68544c3360681af2e4dbb4e9b903ad2059db",
          "1bdcb0f3a46111dd976eb6b3d541b4589290f6f2b497acd4856ecd277c1d0b39"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997012696Z",
      "vulnerabilities": {
        "vulnerabilityID": "00cc5b48-e22f-4679-bf77-ff9aa35da836",
        "line": "1164",
        "column": "61",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final char v = (char) (buffer.get(pos++) \u0026 0xff);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "91a81033587973300618d8e14de4106b310011653a281ca0418aaa6de75c8a05",
        "deprecatedHashes": [
          "10f2978ccaaa651ca46d03a3b6ec7fafb1f00ab525066e52e0067f4096d97ea9",
          "c060653570daf1d7247a84230d203af933a513912d208994c8442a78401c094b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997013427Z",
      "vulnerabilities": {
        "vulnerabilityID": "a0d2fbdb-5b4b-4230-b877-d3ee71cd8ed2",
        "line": "1415",
        "column": "32",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int a = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "83dd38a7659a70fbfc3f2341454884c911d91d50b137330a4f05d202289ac5d7",
        "deprecatedHashes": [
          "827f30998d6bdeef38488a6ef8cf7064c68135594cfeb04f823a35db43ed7fd9",
          "3c434d7c29869f5ecec879d74505ee49e93469483b36c964b10ea2b1d9b8f064"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997014179Z",
      "vulnerabilities": {
        "vulnerabilityID": "b7aed539-7f7a-4c5b-a765-6328cae1f1f4",
        "line": "1423",
        "column": "36",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int b = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "72312b2d3100aeb6778d4dbeee58a269634b4fa79728989ced2758d19891c4a5",
        "deprecatedHashes": [
          "40976a4c5231793b62bb0d9596c51c5075aee9873fab065830c78d647dad4616",
          "2ad82eedf3b8d42ad60b8b1ca31038be314c08c78ab140188ce0391f09ba0953"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99701491Z",
      "vulnerabilities": {
        "vulnerabilityID": "164450b7-7ebb-49f5-a3f1-928af17ece84",
        "line": "1424",
        "column": "19",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((b \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "0c731dd4e04fe26bd1aabcdb152319bf4caec1462e4c831f54c7fed4ad40ab01",
        "deprecatedHashes": [
          "8b050f75724791526a35e6b04a962b763c6471c42b1bd5f296ab64cf844a5e24",
          "5ed0ce7166fcd013ca7160ed6328083d17c4459df6455e7e2b42df8ed8e6c7cf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997015642Z",
      "vulnerabilities": {
        "vulnerabilityID": "b2dd51b8-324f-4b38-9d03-d41768e05b63",
        "line": "1427",
        "column": "22",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "return (a \u0026 0x1f) \u003c\u003c 6 | b \u0026 0x3f;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "0b9e77ba82806950e3974881fc0f009c29517fe3687d2d93d7956a8033ea6d2d",
        "deprecatedHashes": [
          "bd401b1ecba48167d668024ab3aba3403800f338f3d672f12b63381ca546e8fe",
          "7c5083b00f726e856867990f5617678b658aa78fa5ee1f67bc4fe17dae7e58ec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997016373Z",
      "vulnerabilities": {
        "vulnerabilityID": "46933b5b-7fed-4270-a48c-93b53adf7285",
        "line": "1427",
        "column": "39",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "return (a \u0026 0x1f) \u003c\u003c 6 | b \u0026 0x3f;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "0b9e77ba82806950e3974881fc0f009c29517fe3687d2d93d7956a8033ea6d2d",
        "deprecatedHashes": [
          "bd401b1ecba48167d668024ab3aba3403800f338f3d672f12b63381ca546e8fe",
          "7c5083b00f726e856867990f5617678b658aa78fa5ee1f67bc4fe17dae7e58ec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997017154Z",
      "vulnerabilities": {
        "vulnerabilityID": "3aad7943-b677-40b2-ab00-5bdf7f12a6d0",
        "line": "1429",
        "column": "36",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int b = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "b31a0e458c5be9938da215d26b9aa9300f154c09cc115b8b558beaa536b65bbf",
        "deprecatedHashes": [
          "7592eeddd7dd15b4c5967cef4d4c5adb870a4511fbf162dd6d94dd453c005556",
          "1bcfd45f2c153e1c198636cb7ae11eb0b0f07a17fc84171512df71aa995bc961"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997017886Z",
      "vulnerabilities": {
        "vulnerabilityID": "438fe42c-8650-4d85-84bb-c837f5bdb636",
        "line": "1430",
        "column": "19",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((b \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "f68645c093f76d4d2fdf00b102a78d19b6fb2b0ec0f1c0352bfbb5d63432a06d",
        "deprecatedHashes": [
          "2e6a633876473b8f73ac4ef5ebc93396787ccbeb688a04f9b5de992d7e129de6",
          "64cd26506f524182a17d7954753952d19bbc94c7f92177c4e89866d5cc2252af"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997018607Z",
      "vulnerabilities": {
        "vulnerabilityID": "50729e36-7847-4d4b-ad41-fd90426a8b12",
        "line": "1433",
        "column": "36",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int c = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ac0432c3aff18d900e64fda7fcad7a48a2bc9bc38c7905a4d03388cc96441675",
        "deprecatedHashes": [
          "f50af757e508637fa6f2725c9ca2ce6622b17db391e61a9f84a9561c6e01138e",
          "b518c8de7d185ba23edb2cd5f13e88fe691a2ec4c38d017ec5b7fc2d073bfdda"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997019339Z",
      "vulnerabilities": {
        "vulnerabilityID": "c0f8a470-8fb9-44aa-afe2-79eee4922d72",
        "line": "1434",
        "column": "19",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((c \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ae152e59d6987107e0bebf7399b737b2bfae723b31f7e688df6b227e8d5c3a28",
        "deprecatedHashes": [
          "0bc24f980b902fd50ad73442d06d5794132b418882f3bacd62d64eecb4f6abbe",
          "ff596912722efc4dfa03e598f102de07e80b428421104e19ecbb0c5d696715b5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99702007Z",
      "vulnerabilities": {
        "vulnerabilityID": "d6ccc15d-c078-4c4e-bcf6-455379ed8682",
        "line": "1437",
        "column": "22",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "return (a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "5e2e32c9983db6fa8c85f9fa894a4c37be079a2a0853a1e361ca27c0aeb01514",
        "deprecatedHashes": [
          "4c3398547a63fb6d893e26dea84068a64ba98a53db982ac6201c286aa3843bce",
          "1b8ced424a2d7fe002cf03784cca306dd0d75f449506b85d33411d2521a5f6e1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997020821Z",
      "vulnerabilities": {
        "vulnerabilityID": "22602456-ea22-4ee1-8469-2cf46bee72b6",
        "line": "1437",
        "column": "41",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "return (a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "5e2e32c9983db6fa8c85f9fa894a4c37be079a2a0853a1e361ca27c0aeb01514",
        "deprecatedHashes": [
          "4c3398547a63fb6d893e26dea84068a64ba98a53db982ac6201c286aa3843bce",
          "1b8ced424a2d7fe002cf03784cca306dd0d75f449506b85d33411d2521a5f6e1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997021543Z",
      "vulnerabilities": {
        "vulnerabilityID": "ea0c0a14-24bc-4a27-902f-04454b8365bf",
        "line": "1437",
        "column": "58",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "return (a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "5e2e32c9983db6fa8c85f9fa894a4c37be079a2a0853a1e361ca27c0aeb01514",
        "deprecatedHashes": [
          "4c3398547a63fb6d893e26dea84068a64ba98a53db982ac6201c286aa3843bce",
          "1b8ced424a2d7fe002cf03784cca306dd0d75f449506b85d33411d2521a5f6e1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997022274Z",
      "vulnerabilities": {
        "vulnerabilityID": "02bc1fe0-5e75-4f1d-88d9-13ff83181f04",
        "line": "1611",
        "column": "37",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) (b \u0026 0xff));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "43472f4b676aaaa27bb58002931ce32012b54d1c422741dc669cad8ad7849c67",
        "deprecatedHashes": [
          "ebd65dc9c68ca73ea27335c14c3fa74d4b502dedf726db586da8830d01cc7f80",
          "c71d878c95a41b928aefad4977c98744899528e9c1aad26aebb8da53883789d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997023056Z",
      "vulnerabilities": {
        "vulnerabilityID": "be1b3363-ec15-406f-8e14-c4bb5b1ac063",
        "line": "1631",
        "column": "37",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) (b \u0026 0xff));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ec2fbce94b54dee6bfdadd132ae31550bc378e52f925622ad89ab984bd9cc4de",
        "deprecatedHashes": [
          "3b4f8130562cb1ca5db99c17c8edd20ac16f9514afd5a60b7d069c5d30310c9b",
          "c2cb0aebe89af6dfad9cb7c7c80ff3c79d629a75cb2fb0912961cf61ad98538c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997023787Z",
      "vulnerabilities": {
        "vulnerabilityID": "fc90bf6f-acbb-49f8-ab1e-411be62ef535",
        "line": "1655",
        "column": "37",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) (b \u0026 0xff));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "0df2b83dc449c501886e57822fc47aea7763c46ed1169e3b21dc4d7452c8b328",
        "deprecatedHashes": [
          "e8b46f2fef6690d9a851901e27c481488ebedaffdbfaed32650f1eeb3e8c5b96",
          "d8fe85e3b1da38a386e82afd1ff2a21599ed9d12c371c4c7896619c959de965d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997024518Z",
      "vulnerabilities": {
        "vulnerabilityID": "f0748651-89d3-4b38-8657-1c3fd0a47e35",
        "line": "1675",
        "column": "37",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) (b \u0026 0xff));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "aa712f5afdff197722d88b147524e969e5e1087ad03755583e0938a1316ca1e7",
        "deprecatedHashes": [
          "75a39d447f66c89c467161bfff85dbdc9d8e5be005d75716f7342cb4aeff7c6f",
          "f7d6a2dd62083985369dda1aef99276e88d82cd08d65896570993d5050e05ad5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99702525Z",
      "vulnerabilities": {
        "vulnerabilityID": "45bf4afb-9ccb-464d-b060-639dd6a3fd5c",
        "line": "1711",
        "column": "36",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int a = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "73e22da16edea36b6ba5c8a229ced57d29e2000d7a8c0e15325841237d286363",
        "deprecatedHashes": [
          "1ccdfdb85677caaf9a67f2d260bda425401adf0480ada854fccaff066d6afd75",
          "8fb4d906acfbc0411031019ef2d046b2ca0384c3540306c2c7f5e8863aceb2d8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997025981Z",
      "vulnerabilities": {
        "vulnerabilityID": "367e3c03-33df-4d94-aa90-017c48989870",
        "line": "1720",
        "column": "44",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int b = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "4c0491257048de34567c87fc658867ed573184f326c07379764c1c718fd1a45c",
        "deprecatedHashes": [
          "9325c1c400f1791c1ed7ff632ae903dd8025a5e48f9e47fac5a29280b288e4c6",
          "de10ab22bc066a9b3979eab6a97f5321601d4681474646df277258ac0b5090da"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997026712Z",
      "vulnerabilities": {
        "vulnerabilityID": "017b8373-fe0a-4d85-8a47-cfcdf0eea8c9",
        "line": "1721",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((b \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "1ba4fc658c8c7eb718a5ec30235f190118f585869c030c7f40e5c325adeac73c",
        "deprecatedHashes": [
          "6b4b40f5b0851e31a608b59f4b6f3da65a26a7521e254d113b83677a67f86931",
          "ab31aceb4adcee447764d22cf9dc2435f4332f4115f3c711c742a4ccc41b8877"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997027434Z",
      "vulnerabilities": {
        "vulnerabilityID": "4fa1bb46-bee2-4453-bc24-30b565934e09",
        "line": "1724",
        "column": "50",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) ((a \u0026 0x1f) \u003c\u003c 6 | b \u0026 0x3f));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "7499d22a3fcf55cd583fcc3279b4a26f478ee82691484e9dad9a261d0083172d",
        "deprecatedHashes": [
          "80eb803dbad6cecb1ae8491c705d7f3c0e49f64ffe0c784babf8f48a92351f8c",
          "12b34030f1adafcaa53c2451f6d407d16d7afda815e0d21a39a69022dc21b0bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997028165Z",
      "vulnerabilities": {
        "vulnerabilityID": "10b711fa-7b5a-4a0d-bc0a-bf22fc4b1586",
        "line": "1724",
        "column": "67",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) ((a \u0026 0x1f) \u003c\u003c 6 | b \u0026 0x3f));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "7499d22a3fcf55cd583fcc3279b4a26f478ee82691484e9dad9a261d0083172d",
        "deprecatedHashes": [
          "80eb803dbad6cecb1ae8491c705d7f3c0e49f64ffe0c784babf8f48a92351f8c",
          "12b34030f1adafcaa53c2451f6d407d16d7afda815e0d21a39a69022dc21b0bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997028947Z",
      "vulnerabilities": {
        "vulnerabilityID": "729afb7d-4610-41de-9283-53f229a746f1",
        "line": "1732",
        "column": "44",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int b = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "02151e806e7e808a8b669319b01965a01f3e1c82d38c28fa4386043b81281287",
        "deprecatedHashes": [
          "23a8a4f16336f8259260cdde3d18dd6e7f30ef5e09d0e6c2e9bc795940754af2",
          "1c7998b05d055ac6f049b13fae1416a6911afe9e958c477cc5532c3b2f3521ec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997029678Z",
      "vulnerabilities": {
        "vulnerabilityID": "b2062ac7-7dcd-4dd2-a5fb-b42a2ff47bad",
        "line": "1733",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((b \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "a159ad7bcefedadb5f5d636e8ac4593166f6995c640c7b8e64b5a933f821cf86",
        "deprecatedHashes": [
          "a8946a81d7d40c006f16eb7519da7ccadf45b25e2dbb04b497745e1c6cde3483",
          "afacfb7758084c70a2a7eeef81fa05c129580fe280493e7a756f2849ae29bcc2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997030399Z",
      "vulnerabilities": {
        "vulnerabilityID": "6272e75f-cc13-4b6d-abd3-4fbe1e2e57a8",
        "line": "1737",
        "column": "52",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int c = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "c9e7c57e9f252b43a6e3dff57f118001b101222a79539d4ddcb629176423d346",
        "deprecatedHashes": [
          "0238de40b2d735544e9b9ed117f6e395b3fc673f028d8a70fa44c03690388003",
          "bd97febb6c6d21bcee0f3534e4bcb52626211807635cd070243995a53449b41f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997031131Z",
      "vulnerabilities": {
        "vulnerabilityID": "aac6d5f5-a1fb-4d89-ba2f-06941332b08b",
        "line": "1738",
        "column": "35",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((c \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "20260bd68197aad1298e96e73f428fab03340ffea5e2aa5a589e2d652400daba",
        "deprecatedHashes": [
          "93ea672a424c19b2e255af013792f7fd258bae70ba22277ab5104cc66ec6d161",
          "a45e27659e94474804075d2d7128e4329f3050212350e8a0c6b9d5ed1c0aa235"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997031922Z",
      "vulnerabilities": {
        "vulnerabilityID": "7ba194eb-b920-480d-93b5-afc99d1d4d66",
        "line": "1741",
        "column": "58",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) ((a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "617482f1d8fc429c001836e26f0c9760691bf508362cef05596edf1289917687",
        "deprecatedHashes": [
          "2c7c9e44db948249b1ef8bac754eacbfa450a63babad1482f21fe5f4ce6695d4",
          "874771b66d368762e5991f78d27c23c3f82d4fa0474037cb1f59e4544e5ca656"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997032654Z",
      "vulnerabilities": {
        "vulnerabilityID": "44f77b8d-cafc-4d9c-a813-95c617346e51",
        "line": "1741",
        "column": "77",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) ((a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "617482f1d8fc429c001836e26f0c9760691bf508362cef05596edf1289917687",
        "deprecatedHashes": [
          "2c7c9e44db948249b1ef8bac754eacbfa450a63babad1482f21fe5f4ce6695d4",
          "874771b66d368762e5991f78d27c23c3f82d4fa0474037cb1f59e4544e5ca656"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997033405Z",
      "vulnerabilities": {
        "vulnerabilityID": "7a145605-33d0-4ee9-b62e-ca20dc01fc9d",
        "line": "1741",
        "column": "94",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "builder.append((char) ((a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f));",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "617482f1d8fc429c001836e26f0c9760691bf508362cef05596edf1289917687",
        "deprecatedHashes": [
          "2c7c9e44db948249b1ef8bac754eacbfa450a63babad1482f21fe5f4ce6695d4",
          "874771b66d368762e5991f78d27c23c3f82d4fa0474037cb1f59e4544e5ca656"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997034357Z",
      "vulnerabilities": {
        "vulnerabilityID": "6de50f54-5f58-4b24-a8e7-ff3b6d61ab32",
        "line": "1807",
        "column": "36",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int a = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "8eb19b1082588b6fc0ab872222e44df1bbe55ded5bb6f0c37bd771605925e1f1",
        "deprecatedHashes": [
          "501fccbea4c9e622b2372d3f54661e522ce8ce7e9fcb7bf5075bddfdc72751bc",
          "97c8330e14db4fd9e1ccd5b4eedb0e93d8098e267f1f28943631e321e84671bd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997035168Z",
      "vulnerabilities": {
        "vulnerabilityID": "b6de1a53-0baf-4f47-95db-24df7fffc0bc",
        "line": "1817",
        "column": "44",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int b = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "eef704cd0d964951fabd45584437183e447f9081d820b5a5e3cfc44c881221ac",
        "deprecatedHashes": [
          "2ad86009d1a6cc3f6ff646e1132a28627c9f96cb25469860fd48bdbb2c16955b",
          "78e2ec9474c69c8d9a921c2f8d9df57f3ac58f41dae41130eab38f71a0bb5a48"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99703589Z",
      "vulnerabilities": {
        "vulnerabilityID": "4bbfcfe0-50df-4997-8e48-b7de9368ecea",
        "line": "1818",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((b \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "886651d79ff9abef8a0b82a332a706cb6a77539c9939340f3015097595f0545a",
        "deprecatedHashes": [
          "5273521d3abb54bbef4ef4848a18f97952328c39d82e1ba545b30dfd63a86f04",
          "3796bcb4de3f272316891e563c68a9c5318177091c3768a0ca40a7330caa0366"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997036621Z",
      "vulnerabilities": {
        "vulnerabilityID": "59428cf6-389f-413a-852b-75932ca759b2",
        "line": "1821",
        "column": "51",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final char ch = (char) ((a \u0026 0x1f) \u003c\u003c 6 | b \u0026 0x3f);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "2c955c22c3e68a3303fa4d453eaa815492d182d13732d7d88c285814fa466eb5",
        "deprecatedHashes": [
          "9fd8a9749985184875e4385cebc6efc49536c4bf5c2ad112cf44e56aba0ba314",
          "82e132bbfa7940b06f64cb2372877eae3d2c1e713b5bdd16bde2f1c4c6707882"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997037352Z",
      "vulnerabilities": {
        "vulnerabilityID": "99bf12ea-bac9-480f-acdf-60aa3ccbce54",
        "line": "1821",
        "column": "68",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final char ch = (char) ((a \u0026 0x1f) \u003c\u003c 6 | b \u0026 0x3f);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "2c955c22c3e68a3303fa4d453eaa815492d182d13732d7d88c285814fa466eb5",
        "deprecatedHashes": [
          "9fd8a9749985184875e4385cebc6efc49536c4bf5c2ad112cf44e56aba0ba314",
          "82e132bbfa7940b06f64cb2372877eae3d2c1e713b5bdd16bde2f1c4c6707882"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997038084Z",
      "vulnerabilities": {
        "vulnerabilityID": "6acccc6f-b5ad-42b4-aa30-277c7ced8704",
        "line": "1833",
        "column": "44",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int b = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "b69a1543ebbc8aeda3b82ec16284fb3b046a63702005731d9e2d4aaf8fc02141",
        "deprecatedHashes": [
          "dc7daf4f0bcc14c9aee779203427c979b5502021dd90885d244956eb41209c18",
          "086a5a61328dadf3e17c465eed667da48dca92af50ba58487557a295c0d9a814"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997038815Z",
      "vulnerabilities": {
        "vulnerabilityID": "dcd88211-1ee6-40eb-900b-63a2c89a3cdb",
        "line": "1834",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((b \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "2b231162fc6a6b4cc049306f663ee6a212084580b0576718230381ee12491492",
        "deprecatedHashes": [
          "b7463355d6eeb4ba363aac07f416bc78ae5164585f87fb752700bb6a4c41ea8a",
          "74dfcce6d3e27a0b6526e1160f090b07fc523405984c519e64f9eed02a502ddc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997039547Z",
      "vulnerabilities": {
        "vulnerabilityID": "63414959-e900-4f08-b627-54dfe4573cdb",
        "line": "1838",
        "column": "52",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final int c = src.get() \u0026 0xff;",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "6151dd5191afdc5e655ee92d05b90bd4cd14d5a314fbd8113380c3841e05823e",
        "deprecatedHashes": [
          "49492141e07b1a90fb68be32d00122c86e8a73634a414eb861d2d3aaad40dcb8",
          "ae7db81191669874c962a0727ac599093980bcaa2264a6216eaaddfce49db9ff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997040278Z",
      "vulnerabilities": {
        "vulnerabilityID": "b38c10a9-93e5-4107-8200-7c17eeee3664",
        "line": "1839",
        "column": "35",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "if ((c \u0026 0xc0) != 0x80) {",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "b0b1184bca695b2f62f06f1f9998f1ab493c86b5fe87cacb5a32984de021fcd9",
        "deprecatedHashes": [
          "403adfe6d8d0f7c2839fd9fd39603738332a32a5e3773da89cb28341ec0ea985",
          "a602dc692377db8c04402cdebefbd7dff53d7e56a50742f025d41b9eeb1f7f3e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997041059Z",
      "vulnerabilities": {
        "vulnerabilityID": "3edf72a1-e9b4-4810-a222-8229bf335316",
        "line": "1842",
        "column": "59",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final char ch = (char) ((a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "263dd9379cb9857c9d500fd146580638653b2dd5198fd1d72111b544c02830a6",
        "deprecatedHashes": [
          "0a642f35d088409bd4f6be429ddb2cb56d92c1ed51d76ba47105e06ccbb36189",
          "c1616c27d4471f69f1d6a0c5d44a31f8fb133cb96a5d9d5caf68007ee80bd898"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997041791Z",
      "vulnerabilities": {
        "vulnerabilityID": "541f7996-683c-45f4-b482-ffcc1ab0239f",
        "line": "1842",
        "column": "78",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final char ch = (char) ((a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "263dd9379cb9857c9d500fd146580638653b2dd5198fd1d72111b544c02830a6",
        "deprecatedHashes": [
          "0a642f35d088409bd4f6be429ddb2cb56d92c1ed51d76ba47105e06ccbb36189",
          "c1616c27d4471f69f1d6a0c5d44a31f8fb133cb96a5d9d5caf68007ee80bd898"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997042522Z",
      "vulnerabilities": {
        "vulnerabilityID": "989552de-63c1-43f3-b7d5-3df494fc7572",
        "line": "1842",
        "column": "95",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final char ch = (char) ((a \u0026 0x0f) \u003c\u003c 12 | (b \u0026 0x3f) \u003c\u003c 6 | c \u0026 0x3f);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "263dd9379cb9857c9d500fd146580638653b2dd5198fd1d72111b544c02830a6",
        "deprecatedHashes": [
          "0a642f35d088409bd4f6be429ddb2cb56d92c1ed51d76ba47105e06ccbb36189",
          "c1616c27d4471f69f1d6a0c5d44a31f8fb133cb96a5d9d5caf68007ee80bd898"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997043975Z",
      "vulnerabilities": {
        "vulnerabilityID": "1c89ae93-29ac-4fde-9d22-c85ef58ee885",
        "line": "37",
        "column": "7",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "import java.util.Random;",
        "details": "(1/1) * Possible vulnerability detected: Insecure Random Number Generator\nThe App uses an insecure Random Number Generator. For more information checkout the CWE-330 (https://cwe.mitre.org/data/definitions/330.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-114",
        "vulnHash": "e78555d454a6fdfc859d8ebef7729e4541b42dbf3be76bf910d9998e596050e1",
        "deprecatedHashes": [
          "ea1d71433c13d8994565911cd262052d632298e3b2f804cb997f0eec3a05b99d",
          "d19ba1ddb258895089a2bc5bf755043f240a226f606fe80f9c23154f6c7734e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997044706Z",
      "vulnerabilities": {
        "vulnerabilityID": "16176c4a-468a-40b3-9c4a-10df6814d1f5",
        "line": "2595",
        "column": "45",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(8, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "d8c84430f24e1b64ee582308711ec642e3420a4e27f6c13a22acce2fb5715c9e",
        "deprecatedHashes": [
          "69ad34463bb0c3603acfdcaa4e2791a5be6230c69ed0d7a0de2c308b739fbf2b",
          "5b7e5235e00c86e0a45fcc37d763ec4cf26fbd5e5f88aac4e40b19768f67fc76"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997045427Z",
      "vulnerabilities": {
        "vulnerabilityID": "630eeb2a-4469-45f2-8a43-c7b3b48ec0b0",
        "line": "2595",
        "column": "65",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(8, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "d8c84430f24e1b64ee582308711ec642e3420a4e27f6c13a22acce2fb5715c9e",
        "deprecatedHashes": [
          "69ad34463bb0c3603acfdcaa4e2791a5be6230c69ed0d7a0de2c308b739fbf2b",
          "5b7e5235e00c86e0a45fcc37d763ec4cf26fbd5e5f88aac4e40b19768f67fc76"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997046169Z",
      "vulnerabilities": {
        "vulnerabilityID": "ad617e7f-86d9-460f-8b76-689fd35eb079",
        "line": "2604",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "911c584d7183bf20beea2583467691a8125acd6283733674cf998eddd3606792",
        "deprecatedHashes": [
          "d0bc6aa14d176a902f2ea31c4355d024953e1db5808ece3b97fe7f4955c7c255",
          "ff905fb538515566854ad426fc574d8d0481e6a9fb1abc711bdb836144de18f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99704695Z",
      "vulnerabilities": {
        "vulnerabilityID": "6d8d4539-65aa-4ea5-862b-735c1232c0e4",
        "line": "2604",
        "column": "55",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "911c584d7183bf20beea2583467691a8125acd6283733674cf998eddd3606792",
        "deprecatedHashes": [
          "d0bc6aa14d176a902f2ea31c4355d024953e1db5808ece3b97fe7f4955c7c255",
          "ff905fb538515566854ad426fc574d8d0481e6a9fb1abc711bdb836144de18f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997047682Z",
      "vulnerabilities": {
        "vulnerabilityID": "7656448f-9af3-42a0-b670-abbd21055dc2",
        "line": "2626",
        "column": "47",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(16, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "87ba9f6aaa6eacb0c19ac1c6d2d6ec133bdf7c9c5d1d833cec5e1f2ac5a81647",
        "deprecatedHashes": [
          "dc7715bdced609e74323181b5cf4a803bdf92fc5b494b7ecd78db230f404617d",
          "773b4cacdd7b1a16f51183b3662704ec19fa01bb93ab87effde297710727ed0d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997048403Z",
      "vulnerabilities": {
        "vulnerabilityID": "7b0849d9-7709-47db-9515-416e5bcb437f",
        "line": "2626",
        "column": "69",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(16, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "87ba9f6aaa6eacb0c19ac1c6d2d6ec133bdf7c9c5d1d833cec5e1f2ac5a81647",
        "deprecatedHashes": [
          "dc7715bdced609e74323181b5cf4a803bdf92fc5b494b7ecd78db230f404617d",
          "773b4cacdd7b1a16f51183b3662704ec19fa01bb93ab87effde297710727ed0d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997049134Z",
      "vulnerabilities": {
        "vulnerabilityID": "1453a2d7-443d-472c-a7e8-c6a50ce0fc73",
        "line": "2626",
        "column": "89",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(16, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "87ba9f6aaa6eacb0c19ac1c6d2d6ec133bdf7c9c5d1d833cec5e1f2ac5a81647",
        "deprecatedHashes": [
          "dc7715bdced609e74323181b5cf4a803bdf92fc5b494b7ecd78db230f404617d",
          "773b4cacdd7b1a16f51183b3662704ec19fa01bb93ab87effde297710727ed0d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997049866Z",
      "vulnerabilities": {
        "vulnerabilityID": "a4684ce4-3078-4e9b-a641-1bd56638a7bf",
        "line": "2638",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "a896261af759ac510b2b7cfb60e2eecf1926a97076d629ce9b6e757a021cbe9b",
        "deprecatedHashes": [
          "84ac809129598b1177a6e2e24ea752429433147093a9fb9bedb5f3173685b116",
          "68edadb86c94ee130f5b0172ab0f1d68ba8741bb9a4ddc8bf9250e77d1c00799"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997050587Z",
      "vulnerabilities": {
        "vulnerabilityID": "97b0fc9e-6e32-4e65-96b9-a405dc1cd28a",
        "line": "2638",
        "column": "56",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "a896261af759ac510b2b7cfb60e2eecf1926a97076d629ce9b6e757a021cbe9b",
        "deprecatedHashes": [
          "84ac809129598b1177a6e2e24ea752429433147093a9fb9bedb5f3173685b116",
          "68edadb86c94ee130f5b0172ab0f1d68ba8741bb9a4ddc8bf9250e77d1c00799"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997051318Z",
      "vulnerabilities": {
        "vulnerabilityID": "8ba05f27-86f7-47d3-b550-3a7114d5687b",
        "line": "2638",
        "column": "76",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "a896261af759ac510b2b7cfb60e2eecf1926a97076d629ce9b6e757a021cbe9b",
        "deprecatedHashes": [
          "84ac809129598b1177a6e2e24ea752429433147093a9fb9bedb5f3173685b116",
          "68edadb86c94ee130f5b0172ab0f1d68ba8741bb9a4ddc8bf9250e77d1c00799"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99705205Z",
      "vulnerabilities": {
        "vulnerabilityID": "974413c2-c7b9-4cf2-9ed4-beca0ba73c66",
        "line": "2681",
        "column": "45",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(8, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "d390c434587733d27db366bfbec45a84185d1491fe870883568e3a3c59efba7c",
        "deprecatedHashes": [
          "82b1a51ad6ea14048d34cb27966a9c78c4aec70d2679e7bf152d072b543d35f9",
          "e305a6a7f2c7445eb5b414ae01284c9a240ac6a468b5946bb5698e63c1acc2b6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997052832Z",
      "vulnerabilities": {
        "vulnerabilityID": "f4303c65-810c-467d-a6c2-dc64d95eb882",
        "line": "2681",
        "column": "65",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(8, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "d390c434587733d27db366bfbec45a84185d1491fe870883568e3a3c59efba7c",
        "deprecatedHashes": [
          "82b1a51ad6ea14048d34cb27966a9c78c4aec70d2679e7bf152d072b543d35f9",
          "e305a6a7f2c7445eb5b414ae01284c9a240ac6a468b5946bb5698e63c1acc2b6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997053563Z",
      "vulnerabilities": {
        "vulnerabilityID": "0083783d-f46f-4483-b830-5a3082305ea8",
        "line": "2690",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "282726f465351a2c28ae71e41bfd222ad7440e66c0eb1c30e660a24c8e9d00e7",
        "deprecatedHashes": [
          "abd2f10be33cd257f637f539d6af4608dd43deaf555d85d27698cbe65f4689d9",
          "f49587943f1217f5d15ed710223679bae8b528b54de13cc7712fa28b4c8e5f86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997054294Z",
      "vulnerabilities": {
        "vulnerabilityID": "620067c4-2b74-471f-80b5-5abb16972573",
        "line": "2690",
        "column": "55",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "282726f465351a2c28ae71e41bfd222ad7440e66c0eb1c30e660a24c8e9d00e7",
        "deprecatedHashes": [
          "abd2f10be33cd257f637f539d6af4608dd43deaf555d85d27698cbe65f4689d9",
          "f49587943f1217f5d15ed710223679bae8b528b54de13cc7712fa28b4c8e5f86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997055025Z",
      "vulnerabilities": {
        "vulnerabilityID": "c3e00dc5-0e7f-4d42-9b9b-7b86729b0509",
        "line": "2712",
        "column": "47",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(16, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "d71a484a5966be9b8193e67984ddc528237134d891aaafd11ae75006a21f5ac0",
        "deprecatedHashes": [
          "f12d3c331ff4756298f646c0ad92fa89b648bfdbd6ea9861a613621d3dc7b1c6",
          "f8147d8bc537ad856cba8d178fa503cd49ade37df5dfa1773d0c8e74288345dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997055757Z",
      "vulnerabilities": {
        "vulnerabilityID": "758f3eb3-190c-4b40-8b89-6e097eddee9c",
        "line": "2712",
        "column": "69",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(16, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "d71a484a5966be9b8193e67984ddc528237134d891aaafd11ae75006a21f5ac0",
        "deprecatedHashes": [
          "f12d3c331ff4756298f646c0ad92fa89b648bfdbd6ea9861a613621d3dc7b1c6",
          "f8147d8bc537ad856cba8d178fa503cd49ade37df5dfa1773d0c8e74288345dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997056478Z",
      "vulnerabilities": {
        "vulnerabilityID": "a094b253-e15e-47a9-8c71-e80a47fdf293",
        "line": "2712",
        "column": "89",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(16, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "d71a484a5966be9b8193e67984ddc528237134d891aaafd11ae75006a21f5ac0",
        "deprecatedHashes": [
          "f12d3c331ff4756298f646c0ad92fa89b648bfdbd6ea9861a613621d3dc7b1c6",
          "f8147d8bc537ad856cba8d178fa503cd49ade37df5dfa1773d0c8e74288345dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99705721Z",
      "vulnerabilities": {
        "vulnerabilityID": "03a90e31-af72-465e-9d94-e5890410aa5d",
        "line": "2724",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ff35d6ac1f22240143a190a28320d8574f794d65591565a60dab3a4e53cd8b5b",
        "deprecatedHashes": [
          "204482ce7c38b0bb0d25d2bbffeed7717df26857f962670cba04dc8bcfffc909",
          "75b6cc873d790a166183184580a08e1a22b5f2af4ddb9e7ea6ce4e2b44466339"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997057941Z",
      "vulnerabilities": {
        "vulnerabilityID": "ffd245e9-aea9-45c8-9472-8d32578809d8",
        "line": "2724",
        "column": "56",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ff35d6ac1f22240143a190a28320d8574f794d65591565a60dab3a4e53cd8b5b",
        "deprecatedHashes": [
          "204482ce7c38b0bb0d25d2bbffeed7717df26857f962670cba04dc8bcfffc909",
          "75b6cc873d790a166183184580a08e1a22b5f2af4ddb9e7ea6ce4e2b44466339"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997058723Z",
      "vulnerabilities": {
        "vulnerabilityID": "c9159ba5-fb52-45b3-8180-f6309b60ffb5",
        "line": "2724",
        "column": "76",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Chars[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "ff35d6ac1f22240143a190a28320d8574f794d65591565a60dab3a4e53cd8b5b",
        "deprecatedHashes": [
          "204482ce7c38b0bb0d25d2bbffeed7717df26857f962670cba04dc8bcfffc909",
          "75b6cc873d790a166183184580a08e1a22b5f2af4ddb9e7ea6ce4e2b44466339"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997059454Z",
      "vulnerabilities": {
        "vulnerabilityID": "2a51b03d-5014-49dc-940e-cc0f84a8ff65",
        "line": "2790",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(12, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "c49bab695ef6a5eea3d5d8a2f68c84145e8038359524af4a4e9d7cd3293eebec",
        "deprecatedHashes": [
          "2ebc4979942854d916433616a1213a55e117907be653501fb5251d5dc9ec428a",
          "f30481b8f75e8f0fc53e2c68bca6264e74b83d026b60ea65f9ac06b628742e79"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997060185Z",
      "vulnerabilities": {
        "vulnerabilityID": "7116be63-cc2b-408c-b90d-1cc9c21db78a",
        "line": "2790",
        "column": "66",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(12, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "c49bab695ef6a5eea3d5d8a2f68c84145e8038359524af4a4e9d7cd3293eebec",
        "deprecatedHashes": [
          "2ebc4979942854d916433616a1213a55e117907be653501fb5251d5dc9ec428a",
          "f30481b8f75e8f0fc53e2c68bca6264e74b83d026b60ea65f9ac06b628742e79"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997060907Z",
      "vulnerabilities": {
        "vulnerabilityID": "5829c0bc-06f7-4dfb-8fd0-d9c0ff8f4563",
        "line": "2799",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "99c5273a9f9ba41ce0db4f47f315132e3d9be89c0352a6dea89f25954cb49780",
        "deprecatedHashes": [
          "17173176c9166b44e157fa57988cca0def65b3f357981ac9f3b60e6fda3a48b0",
          "1eee48145777b5640b9bf931eccc39b0518b3462878038cbaa8afa43162bb888"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997061638Z",
      "vulnerabilities": {
        "vulnerabilityID": "daad4f11-d12d-4bca-8025-2f051052be88",
        "line": "2799",
        "column": "55",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "99c5273a9f9ba41ce0db4f47f315132e3d9be89c0352a6dea89f25954cb49780",
        "deprecatedHashes": [
          "17173176c9166b44e157fa57988cca0def65b3f357981ac9f3b60e6fda3a48b0",
          "1eee48145777b5640b9bf931eccc39b0518b3462878038cbaa8afa43162bb888"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997062369Z",
      "vulnerabilities": {
        "vulnerabilityID": "52fdfc17-4d4e-4bf9-8341-10763ac8d638",
        "line": "2827",
        "column": "47",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "47af4a26c08aa0619db3fbdefbc328020befc13683d0e5f78475f50f3ee6e3cc",
        "deprecatedHashes": [
          "1b6a7fb7206bd80802a9c931817624366f46c8d3348d6f53c92479f13dc4fed6",
          "f67f760e5e1c582479a29401d03b53bf19a52b4fec0965224e12cda4563aeecc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997063091Z",
      "vulnerabilities": {
        "vulnerabilityID": "dcca1b70-b589-4285-9484-0a7cfa7824ba",
        "line": "2827",
        "column": "69",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "47af4a26c08aa0619db3fbdefbc328020befc13683d0e5f78475f50f3ee6e3cc",
        "deprecatedHashes": [
          "1b6a7fb7206bd80802a9c931817624366f46c8d3348d6f53c92479f13dc4fed6",
          "f67f760e5e1c582479a29401d03b53bf19a52b4fec0965224e12cda4563aeecc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997063822Z",
      "vulnerabilities": {
        "vulnerabilityID": "6adc0473-40d4-4102-8c57-cb7ff5d179f6",
        "line": "2827",
        "column": "89",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "47af4a26c08aa0619db3fbdefbc328020befc13683d0e5f78475f50f3ee6e3cc",
        "deprecatedHashes": [
          "1b6a7fb7206bd80802a9c931817624366f46c8d3348d6f53c92479f13dc4fed6",
          "f67f760e5e1c582479a29401d03b53bf19a52b4fec0965224e12cda4563aeecc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997064614Z",
      "vulnerabilities": {
        "vulnerabilityID": "02971c93-a820-48ca-9c18-2be56ccfe8a2",
        "line": "2840",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "cf087efe718386e0d6eaff4f2a7e8eced1e90eabd4a77bba283dcce3a17e6d3e",
        "deprecatedHashes": [
          "f7433fd204a4f39dbdb969e8dddae35ee3107e8837cf93cf5ddc24d334d0b29a",
          "c10b3bbd712ebb7c0d05c28c3024c403eeb0cafc496efd5d1b44729e21f9b198"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997065345Z",
      "vulnerabilities": {
        "vulnerabilityID": "d5461420-642d-4c28-8762-a63f71643d0b",
        "line": "2840",
        "column": "56",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "cf087efe718386e0d6eaff4f2a7e8eced1e90eabd4a77bba283dcce3a17e6d3e",
        "deprecatedHashes": [
          "f7433fd204a4f39dbdb969e8dddae35ee3107e8837cf93cf5ddc24d334d0b29a",
          "c10b3bbd712ebb7c0d05c28c3024c403eeb0cafc496efd5d1b44729e21f9b198"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997066066Z",
      "vulnerabilities": {
        "vulnerabilityID": "da2183ea-8097-4459-89a0-6009ccac65e7",
        "line": "2840",
        "column": "76",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "cf087efe718386e0d6eaff4f2a7e8eced1e90eabd4a77bba283dcce3a17e6d3e",
        "deprecatedHashes": [
          "f7433fd204a4f39dbdb969e8dddae35ee3107e8837cf93cf5ddc24d334d0b29a",
          "c10b3bbd712ebb7c0d05c28c3024c403eeb0cafc496efd5d1b44729e21f9b198"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997066798Z",
      "vulnerabilities": {
        "vulnerabilityID": "e623c0cf-777b-4a1b-ae37-7d6a24b6e134",
        "line": "2955",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(12, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "c10c8b55db0c31f359ed6b273f0f2a7a485953ab2655a6809c8131a24ac3d308",
        "deprecatedHashes": [
          "063ee91395db14d28c5dab8ab3780e35c2f7a5ca3c454d11e7c2e636493e2ab4",
          "71d152017a460d4c338be7e312c742d33a4ea272e4f810469398489b6d3216c1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997067529Z",
      "vulnerabilities": {
        "vulnerabilityID": "fb488694-5ea1-4ed7-9109-7a2bf815cb66",
        "line": "2955",
        "column": "66",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(12, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "c10c8b55db0c31f359ed6b273f0f2a7a485953ab2655a6809c8131a24ac3d308",
        "deprecatedHashes": [
          "063ee91395db14d28c5dab8ab3780e35c2f7a5ca3c454d11e7c2e636493e2ab4",
          "71d152017a460d4c338be7e312c742d33a4ea272e4f810469398489b6d3216c1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99706826Z",
      "vulnerabilities": {
        "vulnerabilityID": "6f349144-208c-4c49-b400-c088f7bade9c",
        "line": "2964",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "98e95b0a349af1b3697808c4cc5d03e1190bf655be5403f0c36b52934d16d4d6",
        "deprecatedHashes": [
          "058afafd546dae06d2ce8d633f032ef65139c0d422d3651ec42df16f973a0565",
          "669e5eb3f926266973e6b63b2525ed778cef4d90ff3580578ed96a2b6cd713dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997068992Z",
      "vulnerabilities": {
        "vulnerabilityID": "c1d3e7d9-25ee-4a50-82e9-43b0ec11fde2",
        "line": "2964",
        "column": "55",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "98e95b0a349af1b3697808c4cc5d03e1190bf655be5403f0c36b52934d16d4d6",
        "deprecatedHashes": [
          "058afafd546dae06d2ce8d633f032ef65139c0d422d3651ec42df16f973a0565",
          "669e5eb3f926266973e6b63b2525ed778cef4d90ff3580578ed96a2b6cd713dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997069723Z",
      "vulnerabilities": {
        "vulnerabilityID": "6d1a5a62-6d93-4cd3-bef1-83dfcd836d64",
        "line": "2992",
        "column": "47",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "649ed0071e4d469f777b55b6472a1675f4f51470dbdbffa7b1addae97144447f",
        "deprecatedHashes": [
          "013f0c8e54c410afdf3b6f5415d99476d6e93b52dc515a7b43dfb3fdb3f3a6d4",
          "3ab652ffb62b1c81941aa2212d811d444c89fb4025e55b29e26fbaca80be47d1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997070505Z",
      "vulnerabilities": {
        "vulnerabilityID": "c6bf3f65-0139-44d3-8440-5a808733d973",
        "line": "2992",
        "column": "69",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "649ed0071e4d469f777b55b6472a1675f4f51470dbdbffa7b1addae97144447f",
        "deprecatedHashes": [
          "013f0c8e54c410afdf3b6f5415d99476d6e93b52dc515a7b43dfb3fdb3f3a6d4",
          "3ab652ffb62b1c81941aa2212d811d444c89fb4025e55b29e26fbaca80be47d1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997071236Z",
      "vulnerabilities": {
        "vulnerabilityID": "91cfb9ab-20d1-4a09-b0ea-ce6648be91fd",
        "line": "2992",
        "column": "89",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "649ed0071e4d469f777b55b6472a1675f4f51470dbdbffa7b1addae97144447f",
        "deprecatedHashes": [
          "013f0c8e54c410afdf3b6f5415d99476d6e93b52dc515a7b43dfb3fdb3f3a6d4",
          "3ab652ffb62b1c81941aa2212d811d444c89fb4025e55b29e26fbaca80be47d1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997071967Z",
      "vulnerabilities": {
        "vulnerabilityID": "4cc693f8-9855-44ce-9c15-845c24327d06",
        "line": "3005",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "7c34d50843bf04cc51f559d36cae38c1cf6f8d1a1290ce294e7562bfce2163d5",
        "deprecatedHashes": [
          "507ecf7b8368e12ea4e162971e0cb0c5842e22809b3f69ce8723d782de08a1fe",
          "d862aceb89d4655c1cfc0e9a7e26c9d06a580babbb44af702f363bc50f5a2513"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997072689Z",
      "vulnerabilities": {
        "vulnerabilityID": "6780485f-5a50-4100-acca-764f63c30b76",
        "line": "3005",
        "column": "56",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "7c34d50843bf04cc51f559d36cae38c1cf6f8d1a1290ce294e7562bfce2163d5",
        "deprecatedHashes": [
          "507ecf7b8368e12ea4e162971e0cb0c5842e22809b3f69ce8723d782de08a1fe",
          "d862aceb89d4655c1cfc0e9a7e26c9d06a580babbb44af702f363bc50f5a2513"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99707342Z",
      "vulnerabilities": {
        "vulnerabilityID": "175755bf-0c52-46bf-a235-ea8d6aa0814b",
        "line": "3005",
        "column": "76",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "7c34d50843bf04cc51f559d36cae38c1cf6f8d1a1290ce294e7562bfce2163d5",
        "deprecatedHashes": [
          "507ecf7b8368e12ea4e162971e0cb0c5842e22809b3f69ce8723d782de08a1fe",
          "d862aceb89d4655c1cfc0e9a7e26c9d06a580babbb44af702f363bc50f5a2513"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997074151Z",
      "vulnerabilities": {
        "vulnerabilityID": "bfc8596e-2a64-425e-b39e-d499a434ecff",
        "line": "3120",
        "column": "46",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(12, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "dbbe68d5e29db3ae2954b8be743fc9d417132d91d5435148b33811da8976d087",
        "deprecatedHashes": [
          "4fc08844729da94b56f95d835bc5166376d04117f02ddb432985153cec3c5927",
          "4b6c021c657bd41b2a3e44cd84adcdb4a050eaee0ae78c5b6199b98529dd8970"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997074873Z",
      "vulnerabilities": {
        "vulnerabilityID": "750ba583-355a-4e72-bef3-2389bef12caf",
        "line": "3120",
        "column": "66",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(12, (byte) 0x88); // (0xd5 \u0026 0x1f) \u003c\u003c 6 | 0x88 \u0026 0x3f)",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "dbbe68d5e29db3ae2954b8be743fc9d417132d91d5435148b33811da8976d087",
        "deprecatedHashes": [
          "4fc08844729da94b56f95d835bc5166376d04117f02ddb432985153cec3c5927",
          "4b6c021c657bd41b2a3e44cd84adcdb4a050eaee0ae78c5b6199b98529dd8970"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997075604Z",
      "vulnerabilities": {
        "vulnerabilityID": "8daa7630-2726-4976-ad32-74f0f79a2ec7",
        "line": "3129",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "1962a6dca0860bdb7ae9413768653cbc8a1891e1055d5edc776e84ca1de434e1",
        "deprecatedHashes": [
          "03480221468bb86a089a7f1d07a328bef8be17450da01d62f685ceb91a44c290",
          "7c6b52b5aaebaea2861b6b399d5c621f7f2538fdbdc8e55ab2244522d9019cef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997076385Z",
      "vulnerabilities": {
        "vulnerabilityID": "23685c80-0b26-4577-aa82-6e359910f8c8",
        "line": "3129",
        "column": "55",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xd5 \u0026 0x1f) \u003c\u003c 6 | (0x88 \u0026 0x3f), modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "1962a6dca0860bdb7ae9413768653cbc8a1891e1055d5edc776e84ca1de434e1",
        "deprecatedHashes": [
          "03480221468bb86a089a7f1d07a328bef8be17450da01d62f685ceb91a44c290",
          "7c6b52b5aaebaea2861b6b399d5c621f7f2538fdbdc8e55ab2244522d9019cef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997077117Z",
      "vulnerabilities": {
        "vulnerabilityID": "619e859a-700f-4e54-80ef-5cafc49a7143",
        "line": "3157",
        "column": "47",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "799a851f1fb53033f3e852cdb94d26b8b75f0af1bb3f09e792dedb9b6a66c40d",
        "deprecatedHashes": [
          "880480cad6e0e7d9b47685f72a18e2d4deeeaec2489e13a9481e059a3bad60f5",
          "b5ca9f78b4134bdff0c37595bae7772e6d2782808e075fc7ab0ea1b98e89b31c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997077848Z",
      "vulnerabilities": {
        "vulnerabilityID": "587e3bb4-5a3a-44af-8333-fd813c4263a1",
        "line": "3157",
        "column": "69",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "799a851f1fb53033f3e852cdb94d26b8b75f0af1bb3f09e792dedb9b6a66c40d",
        "deprecatedHashes": [
          "880480cad6e0e7d9b47685f72a18e2d4deeeaec2489e13a9481e059a3bad60f5",
          "b5ca9f78b4134bdff0c37595bae7772e6d2782808e075fc7ab0ea1b98e89b31c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99707858Z",
      "vulnerabilities": {
        "vulnerabilityID": "59457e14-1fc0-4b86-b775-84f2e4a8fceb",
        "line": "3157",
        "column": "89",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "buffer.put(21, (byte) 0xc8b); // (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "799a851f1fb53033f3e852cdb94d26b8b75f0af1bb3f09e792dedb9b6a66c40d",
        "deprecatedHashes": [
          "880480cad6e0e7d9b47685f72a18e2d4deeeaec2489e13a9481e059a3bad60f5",
          "b5ca9f78b4134bdff0c37595bae7772e6d2782808e075fc7ab0ea1b98e89b31c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997079301Z",
      "vulnerabilities": {
        "vulnerabilityID": "49e71d49-e05c-4da9-b0a0-77ffadf2f14a",
        "line": "3170",
        "column": "34",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "8c9a718c842234ea5b5709a358cb783777e2ce3ac5977eb799880d5e66933268",
        "deprecatedHashes": [
          "fd38a7921efe1bf5cd7141dccbd9f8cd95f8a51fc2f8ce17b12f8d3e418d0905",
          "7f74f755d4c898e895afa2bc3fa833394c5cf1efd84b8f000ef2f9673222dfc7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997080032Z",
      "vulnerabilities": {
        "vulnerabilityID": "ef8d57de-c7a1-4421-8f36-a75489b8b3d7",
        "line": "3170",
        "column": "56",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "8c9a718c842234ea5b5709a358cb783777e2ce3ac5977eb799880d5e66933268",
        "deprecatedHashes": [
          "fd38a7921efe1bf5cd7141dccbd9f8cd95f8a51fc2f8ce17b12f8d3e418d0905",
          "7f74f755d4c898e895afa2bc3fa833394c5cf1efd84b8f000ef2f9673222dfc7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997080804Z",
      "vulnerabilities": {
        "vulnerabilityID": "db8c9a22-5755-434f-88c5-a1ef14fcb4cb",
        "line": "3170",
        "column": "76",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/BuffersTestCase.java",
        "code": "assertEquals((char) (0xef \u0026 0x0f) \u003c\u003c 12 | (0x8a \u0026 0x3f) \u003c\u003c 6 | 0x8b \u0026 0x3f, modifiedUtf8Line[1]);",
        "details": "(1/1) * Possible vulnerability detected: Bad hexadecimal concatenation\nWhen converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if the array is read byte by byte. The following sample illustrates the use of the method Integer.toHexString() which will trim any leading zeroes from each byte of the computed hash value. For more information checkout the CWE-704 (https://cwe.mitre.org/data/definitions/704.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-143",
        "vulnHash": "8c9a718c842234ea5b5709a358cb783777e2ce3ac5977eb799880d5e66933268",
        "deprecatedHashes": [
          "fd38a7921efe1bf5cd7141dccbd9f8cd95f8a51fc2f8ce17b12f8d3e418d0905",
          "7f74f755d4c898e895afa2bc3fa833394c5cf1efd84b8f000ef2f9673222dfc7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996779439Z",
      "vulnerabilities": {
        "vulnerabilityID": "7daa862d-63a2-42a6-9190-854e22c341b6",
        "line": "155",
        "column": "54",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/ReaderInputStream.java",
        "code": "final CoderResult result = encoder.encode(charBuffer, byteBuffer, false);",
        "details": "(1/1) * Possible vulnerability detected: Base64 Encode\nBasic authentication's only means of obfuscation is Base64 encoding. Since Base64 encoding is easily recognized and reversed, it offers only the thinnest veil of protection to your users, and should not be used.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JVM-38",
        "vulnHash": "b265161729effefcb5983e49f60a9e491d38da9b43cac5a75f9e8ffe2e677bb6",
        "deprecatedHashes": [
          "b0615c68dc6bf5dd0e5a181663a444dc656f6808f61d8599d2d9ca7b08d1d244",
          "520caccfafb18aab27eafcc768d6a700f18a70b445160b873b32329d0fc0d5b4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.9968813Z",
      "vulnerabilities": {
        "vulnerabilityID": "517572f7-da3f-4ccd-b520-a115612bf56c",
        "line": "22",
        "column": "16",
        "confidence": "HIGH",
        "file": "nio-impl/src/main/java/org/xnio/nio/NioUdpChannel.java",
        "code": "import java.net.DatagramSocket;",
        "details": "(1/1) * Possible vulnerability detected: UDP Datagram Socket\nUDP Datagram Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-43",
        "vulnHash": "323fb6efb2faa597e2ab699af8d4107d0d7c6dfa91e397890151abadcf337576",
        "deprecatedHashes": [
          "b53211ca9446b42506156db57f7fe58f47a1e03369350ba041164b7e9bad1bec",
          "b3e4a899433c127d7a5d81ff0f60b1027f3f3e0be5b59f61bf6c9b5d9e121658"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.99695591Z",
      "vulnerabilities": {
        "vulnerabilityID": "6fdb9df8-bbe2-4d93-aab8-7bcc9240462f",
        "line": "23",
        "column": "16",
        "confidence": "HIGH",
        "file": "api/src/main/java/org/xnio/IoUtils.java",
        "code": "import java.net.DatagramSocket;",
        "details": "(1/1) * Possible vulnerability detected: UDP Datagram Socket\nUDP Datagram Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-43",
        "vulnHash": "979d506837686be218892addf64a0d5ccc8e39b5a921591ef3f344efb0570a7b",
        "deprecatedHashes": [
          "301f04ce31870c7488be81ddbb166a8fb502ee17f7e1238087f9d2ecc9061912",
          "662048f944dd6ba2a47c5c4b3fdece661a0d4bdf981f5be547a8bd780c6d2b76"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996985375Z",
      "vulnerabilities": {
        "vulnerabilityID": "e6b3ea2f-28ee-43af-a043-016f43b9f5d6",
        "line": "36",
        "column": "16",
        "confidence": "HIGH",
        "file": "api/src/test/java/org/xnio/IoUtilsTestCase.java",
        "code": "import java.net.DatagramSocket;",
        "details": "(1/1) * Possible vulnerability detected: UDP Datagram Socket\nUDP Datagram Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-43",
        "vulnHash": "4facd807f01f945326a141bbab0a24909c2132ac56e019b68888840106242027",
        "deprecatedHashes": [
          "4897c5d3a4ac6c62b689a6f504e8d8c95dd5a856d76b5d36349e8bb861c79a5d",
          "3ae9245c27d3a48842fa72fbccd05866d669179e59ae55b811906f9420dc4a57"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996729756Z",
      "vulnerabilities": {
        "vulnerabilityID": "8bdb1ee2-c31f-483b-873b-4fe5b029b7f4",
        "line": "46",
        "column": "24",
        "confidence": "LOW",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/AbstractNioSslBufferExpansionTcpTest.java",
        "code": "Socket socket = new Socket(\"127.0.0.1\", SERVER_PORT);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "bb2504054df63bfa5437e6f8980a509b3381df774a4f350ca450f10f4606b332",
        "deprecatedHashes": [
          "bdb3d77a35f14528d2d85565830d74af7b617d553c6f236ee4302cb306e2c12f",
          "b1e6c6fb4cbbd8fefa504f342583b8baaf904c0287fc661dec62c29020a200a5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996735627Z",
      "vulnerabilities": {
        "vulnerabilityID": "8b045a2a-b67d-4add-a29d-65fc645d6a42",
        "line": "151",
        "column": "50",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/streams/WriterOutputStream.java",
        "code": "final CoderResult result = decoder.decode(byteBuffer, charBuffer, eof);",
        "details": "(1/1) * Possible vulnerability detected: Base64 Decode\nBase64 Decode",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JVM-24",
        "vulnHash": "8624920e75b75436f2ce46b1e832470d8cf444736ffddfb6000d5c29d4a8a64f",
        "deprecatedHashes": [
          "c1b76114ab23757bd407e2a0004cd0b4b0183d680ed0602ae261e9583cfece48",
          "22fb155ee453c8385fdc8c1a272ad0a38f72c626749b28f5ae8103e18513d8ac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996745986Z",
      "vulnerabilities": {
        "vulnerabilityID": "86374f75-7e9d-4136-b78d-e673a8242460",
        "line": "71",
        "column": "25",
        "confidence": "LOW",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioSslRandomlyTimedBufferExpansionTcpChannelTestCase.java",
        "code": "socket = new Socket(\"127.0.0.1\", SERVER_PORT);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "6aee08d1d10c93e4053536a4b4b2f7637662042cdc4e31875fd4ad51a419da6c",
        "deprecatedHashes": [
          "cbce16be51ebc3f0b2e081868c3607b83c48fab555900f60852fc5dd9bd3921b",
          "8bbcac521742162a3ab3d8f88449513de91ba40a1f7cdf8d023f9f6fcefca41a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996762327Z",
      "vulnerabilities": {
        "vulnerabilityID": "59491c6f-4379-450b-92c2-46c24ce68623",
        "line": "73",
        "column": "25",
        "confidence": "LOW",
        "file": "nio-impl/src/test/java/org/xnio/nio/test/NioSslRandomlyTimedBufferExpansionTcpConnectionTestCase.java",
        "code": "socket = new Socket(\"127.0.0.1\", SERVER_PORT);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "efa1699c5a8615a2b6c7a67bc80ae9261a44b01c9bef655f178fe7d52768398b",
        "deprecatedHashes": [
          "bef06be32a5edf6fc35acb23ed7e6781194043444612b9dff5cd04ba74782eaa",
          "316cfab1209394946f15baad3d7dec3d0cfd6d725e5640d6b3c451a50931a81c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996824904Z",
      "vulnerabilities": {
        "vulnerabilityID": "089ad0de-aedd-4e4d-ba0f-285fb6626a64",
        "line": "372",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Option.java",
        "code": "return Byte.decode(string.trim());",
        "details": "(1/1) * Possible vulnerability detected: Base64 Decode\nBase64 Decode",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JVM-24",
        "vulnHash": "89be0f0a65e15ff9dfe6d71ea2368a46677e0fcff4a43ffff340b795492965aa",
        "deprecatedHashes": [
          "a02a60862d6eb5647b95909c912a8838bb7eb4281ac785bd6f33ebd50f93af44",
          "a40d75a2e3b1daa86ff43fbaafe9a0ec84b04b2fd578f0f2c82926f609f59373"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996825666Z",
      "vulnerabilities": {
        "vulnerabilityID": "d692a212-92b9-44a6-87bf-1e3f9c925d01",
        "line": "377",
        "column": "28",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Option.java",
        "code": "return Short.decode(string.trim());",
        "details": "(1/1) * Possible vulnerability detected: Base64 Decode\nBase64 Decode",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JVM-24",
        "vulnHash": "33a3d4b6ac807623b73a55a9a84befe6c80604abab295d9e81f1c22c12c5357e",
        "deprecatedHashes": [
          "bece33f6bd2dd751e9ae6da576b2397c02fca32ba4decc1c6b25d9d1a2719feb",
          "fd8019fd13a1d9a72314855092bf63467dd64a1800ad88f6416d5013083362d2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996826387Z",
      "vulnerabilities": {
        "vulnerabilityID": "b06dec74-68f1-4ad6-8781-f132a1b29fd1",
        "line": "382",
        "column": "30",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Option.java",
        "code": "return Integer.decode(string.trim());",
        "details": "(1/1) * Possible vulnerability detected: Base64 Decode\nBase64 Decode",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JVM-24",
        "vulnHash": "350bc8cfdec4c95926670986299f2548760c3e6f5a138e3cbddda031308baf2e",
        "deprecatedHashes": [
          "e2e8032f753bcd58b69b47cc9ca47ee465a037a84273fe875a080112835dde2e",
          "e0c6f141417a32b279d5cfc26816ac46846984da256efc42ab5b055101576070"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996827118Z",
      "vulnerabilities": {
        "vulnerabilityID": "b0c351c3-3d39-4403-b2c0-df109940e6f9",
        "line": "387",
        "column": "27",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Option.java",
        "code": "return Long.decode(string.trim());",
        "details": "(1/1) * Possible vulnerability detected: Base64 Decode\nBase64 Decode",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JVM-24",
        "vulnHash": "f85bfcc92dd4534f7d06119577dcfefc7987a42674f021149ade748af4ebf89b",
        "deprecatedHashes": [
          "cef229a12eba17db7ccba51d4c762cdcc18eeb1fb78c07f6eaa443d8bfae51f3",
          "4ed9264466592abe573f33b7871556b4afdde4b1d3c8fbea9ac04bc0ab49aee3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996983922Z",
      "vulnerabilities": {
        "vulnerabilityID": "b3d4b715-ed54-49fb-989c-a90d9fab6e55",
        "line": "202",
        "column": "26",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/IoUtilsTestCase.java",
        "code": "IoUtils.safeClose(new ServerSocket() {",
        "details": "(1/1) * Possible vulnerability detected: TCP Server Socket\nTCP Server Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-40",
        "vulnHash": "99400966507a6759b636ec9d7e75846ccf0db483f870ab4f6116fe1fbfe10cc6",
        "deprecatedHashes": [
          "09252fb04bb31bb2a856647c36e0863f5774fc17af013d7c9b4de9863f572af4",
          "b96bd5b65cfba4365d262fcba63ee68b46bc8bb859980aa29b32dedffaa9cdeb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.996984644Z",
      "vulnerabilities": {
        "vulnerabilityID": "8ad742c2-ec1b-4dbf-8d60-e5128cfa39d8",
        "line": "140",
        "column": "26",
        "confidence": "LOW",
        "file": "api/src/test/java/org/xnio/IoUtilsTestCase.java",
        "code": "IoUtils.safeClose(new Socket() {",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1531a73998e77e242bce969a7281fa029daa0b96916a5d8e25e665b934af095f",
        "deprecatedHashes": [
          "0f31f2a695816cd3c8f6ead1e57e12337e68c212069bdc4ca948e97c1436ad2f",
          "7d688320379ffdc163e1281b313677539a9be5b1ff1dad2a10f56dfc2b68c034"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "7dee76ef-ed57-45fe-82a5-af36fa3be106",
      "createdAt": "2024-04-26T16:11:10.997043243Z",
      "vulnerabilities": {
        "vulnerabilityID": "8bc1fb68-98bd-4323-8353-f44156791570",
        "line": "1899",
        "column": "51",
        "confidence": "LOW",
        "file": "api/src/main/java/org/xnio/Buffers.java",
        "code": "final CoderResult coderResult = decoder.decode(src, oneChar, false);",
        "details": "(1/1) * Possible vulnerability detected: Base64 Decode\nBase64 Decode",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Secrets",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JVM-24",
        "vulnHash": "1982147760f181d77ffb04a402770ee70476b4caa72501a9b0d909b8d58f1e47",
        "deprecatedHashes": [
          "188e5e9c4f4b89853b4330e72cf0556600937349cdb3aceed1b5d9fec01f15c1",
          "5577ddf04e07781d1e0278d560f2e62dc8598536191a0c08b692f040d0bb74b8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    }
  ]
}