name: SonarQube SAST Action
description: Run SonarQube SAST scan
author: sean.smith [B00158319@mytudublin.ie]

inputs:
  programming-language:
    description: Programming language for SonarQube scanner
    type: string
    required: true

  sonarqube-token:
    description: Token used to authenticate access to SonarQube
    type: string
    required: true

  sonarqube-url:
    description: Hostname of SonarQube
    type: string
    required: true

  sonarqube-username:
    description: Username for logging into SonarQube
    type: string
    required: true

  sonarqube-password:
    description: Password for logging into SonarQube
    type: string
    required: true

  sonarqube-project-key:
    description: Project key of the SonarQube project
    type: string
    required: true

  sonarqube-sources:
    description: Source directories to scan (separated by comma)
    type: string
    required: true

  artifact-name:
    description: Name of the artifact to upload
    type: string
    required: false
    default: sast-sonarqube-report

  path:
    description: Directory to run the action
    type: string
    required: false
    default: ${{ github.workspace }}

runs:
  using: composite
  steps:
    - name: Check For File Existence
      uses: andstor/file-existence-action@v3
      with:
        files: ${{ inputs.path }}
        fail: true

    - name: Setup Sonar Scanner
      uses: Warchant/setup-sonar-scanner@v8

    - name: Setup Java JDK
      if: ${{ inputs.programming-language == 'java' }}
      uses: actions/setup-java@v4.2.1
      with:
        distribution: temurin
        java-version: 17

    # Perform Java analysis
    - name: Perform SonarQube Analysis
      if: ${{ inputs.programming-language == 'java' }}
      shell: bash
      working-directory: ${{ inputs.path }}
      run: |
        mvn sonar:sonar \
          -Dsonar.login=${{ inputs.sonarqube-token }} \
          -Dsonar.host.url=${{ inputs.sonarqube-url }} \
          -Dsonar.projectKey=${{ inputs.sonarqube-project-key }} \
          -Dsonar.projectName=${{ inputs.sonarqube-project-key }}

    # Perform non-Java analysis on Ubuntu 22.04
    # Docker image only supports Ubuntu 22.04
    - name: Perform SonarQube Analysis
      if: ${{ inputs.programming-language != 'java' && runner.os == 'Linux' }}
      uses: SonarSource/sonarqube-scan-action@v2.0.2
      env:
        SONAR_TOKEN: ${{ inputs.sonarqube-token }}
        SONAR_HOST_URL: ${{ inputs.sonarqube-url }}
      with:
        projectBaseDir: ${{ inputs.path }}
        args: >
          -Dsonar.projectKey=${{ inputs.sonarqube-project-key }}
          -Dsonar.projectName=${{ inputs.sonarqube-project-key }}
          -Dsonar.sources=${{ inputs.sonarqube-sources }}

    # Perform non-Java analysis on MacOS 14
    - name: Perform SonarQube Analysis
      if: ${{ inputs.programming-language != 'java' && runner.os == 'macOS' }}
      shell: bash
      run: |
        sonar-scanner \
          -Dsonar.login=${{ inputs.sonarqube-token }} \
          -Dsonar.host.url=${{ inputs.sonarqube-url }} \
          -Dsonar.projectKey=${{ inputs.sonarqube-project-key }} \
          -Dsonar.projectName=${{ inputs.sonarqube-project-key }} \
          -Dsonar.sources=${{ inputs.sonarqube-sources }} \
          -Dsonar.projectBaseDir=${{ inputs.path }}

    # Perform non-Java analysis on Windows 2022
    - name: Perform SonarQube Analysis
      if: ${{ inputs.programming-language != 'java' && runner.os == 'Windows' }}
      shell: pwsh
      run: |
        sonar-scanner.bat `
        -D"sonar.login=${{ inputs.sonarqube-token }}" `
        -D"sonar.host.url=${{ inputs.sonarqube-url }}" `
        -D"sonar.projectKey=${{ inputs.sonarqube-project-key }}" `
        -D"sonar.projectName=${{ inputs.sonarqube-project-key }}" `
        -D"sonar.sources=${{ inputs.sonarqube-sources }}" `
        -D"sonar.projectBaseDir=${{ inputs.path }}"

    - name: Download SonarQube Report
      shell: bash
      working-directory: ${{ inputs.path }}
      run: |
        curl -k -u ${{ inputs.sonarqube-username }}:${{ inputs.sonarqube-password }} \
          -o sonarqube-cnes-report.zip \
          "${{ inputs.sonarqube-url }}/api/cnesreport/report?key=${{ inputs.sonarqube-project-key }}&token=${{ inputs.sonarqube-token }}&author=Administrator"

    - name: Upload SonarQube Report
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.path }}/sonarqube-cnes-report.zip
        if-no-files-found: error
